{"version":3,"file":"rx-util.min.js","sources":["../src/module/ajax/download.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../src/module/ajax/downloadString.js","../src/module/ajax/downloadUrl.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../src/module/ajax/loadResource.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../src/module/ajax/parseUrl.js","../src/module/ajax/readLocal.js","../src/module/date/dateFormat.js","../src/module/ajax/spliceParams.js","../src/module/ajax/fetchTimeout.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/createClass.js","../src/module/function/wait.js","../src/module/ajax/FetchLimiting.js","../src/module/array/asIterator.js","../src/module/array/asyncFlatMap.js","../src/module/array/flatMap.js","../src/module/array/groupBy.js","../src/module/array/arrayToMap.js","../src/module/string/fill.js","../src/module/dom/lastFocus.js","../src/module/date/dateParse.js","../src/module/dom/getCusorPostion.js","../src/module/dom/setCusorPostion.js","../src/module/string/toLowerCase.js","../src/module/function/returnItself.js","../src/module/function/safeExec.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../src/module/function/singleModel.js","../node_modules/@babel/runtime/helpers/construct.js","../src/module/function/StateMachine.js","../src/module/function/timing.js","../src/module/string/isFloat.js","../src/module/string/isNumber.js","../src/module/string/blankToNull.js","../src/module/obj/excludeFields.js","../src/module/date/dateConstants.js","../src/module/number/isRange.js","../src/module/date/DateConstants.js","../src/module/date/dateEnhance.js","../src/module/date/dateBetween.js","../src/module/function/once.js","../src/module/function/onceOfSameParam.js","../src/module/array/arrayDiffBy.js","../src/module/number/autoIncrement.js","../src/module/string/StringConverter.js","../src/module/function/curry.js","../src/module/obj/isNullOrUndefined.js","../src/module/string/isEmpty.js","../src/module/date/DateFormatter.js","../src/module/cache/CacheOption.js","../src/module/obj/assign.js","../src/module/cache/ICache.js","../src/module/cache/CacheVal.js","../src/module/cache/LocalStorageCache.js","../src/module/cache/cacheUtil.js","../src/module/hook/antiDebug.js","../src/module/formdata/appends.js","../src/module/obj/blankToNullField.js","../src/module/function/compose.js","../src/module/dom/copyText.js","../src/module/dom/createElByString.js","../src/module/function/debounce.js","../src/module/obj/deepFreeze.js","../src/module/obj/deepProxy.js","../src/module/formdata/deletes.js","../src/module/obj/emptyAllField.js","../src/module/obj/excludeFieldsDeep.js","../src/module/array/filterItems.js","../src/module/formdata/formDataToArray.js","../src/module/string/format.js","../src/module/ajax/getCookies.js","../src/module/date/getYearWeek.js","../src/module/dom/insertText.js","../src/module/string/isBlank.js","../src/module/dom/isEditable.js","../src/module/obj/mapToObject.js","../src/module/formdata/objToFormData.js","../src/module/number/randomInt.js","../src/module/array/range.js","../src/module/dom/removeEl.js","../src/module/dom/removeText.js","../src/module/function/returnReasonableItself.js","../src/module/formdata/sets.js","../src/module/array/sortBy.js","../src/module/ajax/strToArrayBuffer.js","../src/module/date/strToDate.js","../src/module/function/throttle.js","../src/module/array/toObject.js","../src/module/string/toString.js","../src/module/string/toUpperCase.js","../src/module/array/uniqueBy.js","../src/module/function/waitResource.js","../src/module/function/watch.js","../src/module/event/watchEventListener.js","../src/module/function/watchObject.js"],"sourcesContent":["/**\r\n * 在浏览器上下载二进制资源\r\n * @param {Blob} blob 要下载的二进制资源\r\n * @param {String} filename 文件名\r\n */\r\nexport function download (blob, filename = 'unknown') {\r\n  // 创建隐藏的可下载链接\r\n  const eleLink = document.createElement('a')\r\n  eleLink.download = filename\r\n  eleLink.style.display = 'none'\r\n  // 为 link 赋值\r\n  eleLink.href = URL.createObjectURL(blob)\r\n  // 触发点击\r\n  document.body.appendChild(eleLink)\r\n  eleLink.click()\r\n  // 然后移除\r\n  document.body.removeChild(eleLink)\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import { download } from './download'\r\n\r\n/**\r\n * 在浏览器上下载文本内容\r\n * @param {String} str 字符串内容\r\n * @param {String} [filename='unknown.txt'] 下载文件名，没有则默认为链接中的文件名\r\n */\r\nexport async function downloadString (str, filename = 'unknown.txt') {\r\n  const blob = new Blob([str], {\r\n    type: 'text/plain',\r\n  })\r\n  download(blob, filename)\r\n}\r\n","import { download } from './download'\r\n\r\n/**\r\n * 根据 url 下载二进制资源\r\n * @param {String} url 下载请求信息\r\n * @param {String} [filename] 下载文件名，没有则默认为链接中的文件名\r\n */\r\nexport async function downloadUrl (\r\n  url,\r\n  filename = url.substr(url.lastIndexOf('/'))\r\n) {\r\n  try {\r\n    const res = await fetch(url)\r\n    const blob = await res.blob()\r\n    download(blob, filename)\r\n  } catch (error) {\r\n    return console.log('下载出错了 ', error)\r\n  }\r\n}\r\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","/**\r\n * 将 url 中的内容加载到元素上\r\n * 注：domSelector 必须有 src 属性用以将加载完成的资源赋值给其，加载默认是异步的\r\n * @param {RequestInfo} url url 资源\r\n * @param {HTMLImageElement | HTMLAudioElement | HTMLVideoElement | HTMLTrackElement | HTMLScriptElement} dom dom 元素\r\n * @param {RequestInit} [init] 初始化参数, 实为 fetch() 的参数以及一些自定义的参数，默认 {}\r\n * 关于 fetch 具体可以参考 <https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch>\r\n */\r\nexport async function loadResource (url, dom, init = {}) {\r\n  const res = await fetch(url, init)\r\n  const blob = await res.blob()\r\n  // 生成一个本地的 url 并赋值给 src 属性\r\n  dom.src = window.URL.createObjectURL(blob)\r\n}\r\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","/**\r\n * Url 对象\r\n * @class UrlObject\r\n */\r\nclass UrlObject {\r\n  /**\r\n   * 构造函数\r\n   * @param {Object} option 可选项\r\n   * @param {String} [option.href=''] 不包含网站域名的链接\r\n   * @param {String} [option.website=''] URL 站点\r\n   * @param {String} [option.protocol=''] 协议\r\n   * @param {String} [option.domain=''] 域名\r\n   * @param {String} [option.accessPath=''] 绝对路径,不包含参数\r\n   * @param {Object} [option.params={}] 参数列表,\r\n   * @param {String} [option.url=''] 原 url 链接\r\n   * @param {Number} [option.port=0] 端口号\r\n   */\r\n  constructor ({\r\n    href = '',\r\n    website = '',\r\n    protocol = '',\r\n    domain = '',\r\n    accessPath = '',\r\n    params = {},\r\n    url = '',\r\n    port = 0,\r\n  } = {}) {\r\n    /**\r\n     * @type {String} 不包含网站域名的链接\r\n     */\r\n    this.href = href\r\n    /**\r\n     * @type {String} URL 站点\r\n     */\r\n    this.website = website\r\n    /**\r\n     * @type {String} 协议\r\n     */\r\n    this.protocol = protocol\r\n    /**\r\n     * @type {String} 域名\r\n     */\r\n    this.domain = domain\r\n    /**\r\n     * @type {String} 绝对路径,不包含参数\r\n     */\r\n    this.accessPath = accessPath\r\n    /**\r\n     * @type {Object} 参数列表,\r\n     */\r\n    this.params = params\r\n    /**\r\n     * @type {String} 原 url 链接\r\n     */\r\n    this.url = url\r\n    /**\r\n     * @type {Number} 端口号\r\n     */\r\n    this.port = port\r\n  }\r\n}\r\n\r\n/**\r\n * 协议与默认端口映射表\r\n */\r\nconst protocol2Port = {\r\n  http: 80,\r\n  https: 443,\r\n  ssh: 22,\r\n  ftp: 21,\r\n}\r\n\r\n/**\r\n * 解析 url 字符串\r\n * @param {String} url url 字符串，不能为空\r\n * @returns {UrlObject} url 对象\r\n */\r\nexport function parseUrl (url) {\r\n  if (!url) {\r\n    throw new Error('url 不能为空')\r\n  }\r\n\r\n  const regexp = new RegExp('^((\\\\w+)://([\\\\w\\\\.]*)(:(\\\\d+))?)(.*)')\r\n  const temps = regexp.exec(url)\r\n  const res = new UrlObject({\r\n    url: url,\r\n    website: temps[1],\r\n    protocol: temps[2],\r\n    domain: temps[3],\r\n    // @ts-ignore\r\n    port: temps[5],\r\n    href: temps[6],\r\n  })\r\n  let temp = url.substr(res.website.length)\r\n  const markIndex = temp.indexOf('?')\r\n  if (markIndex === -1) {\r\n    res.accessPath = temp\r\n    return res\r\n  }\r\n  res.accessPath = temp.substr(0, markIndex)\r\n  if (res.accessPath.endsWith('/')) {\r\n    res.accessPath = res.accessPath.substring(0, res.accessPath.length - 1)\r\n  }\r\n  res.port = res.port || protocol2Port[res.protocol] || ''\r\n  // 解析参数列表\r\n  res.params = temp\r\n    .substr(markIndex + 1)\r\n    .split('&')\r\n    .map(str => str.split('='))\r\n    .filter(arr => arr[0] !== '')\r\n    .reduce((params, arr) => {\r\n      const k = decodeURIComponent(arr[0])\r\n      const v = decodeURIComponent(arr.length === 1 ? '' : arr[1])\r\n      // 如果已经存在了就认为是数组参数\r\n      const vs = params[k]\r\n      if (vs !== undefined) {\r\n        if (!Array.isArray(vs)) {\r\n          params[k] = [vs]\r\n        }\r\n        params[k].push(v)\r\n      } else {\r\n        params[k] = v\r\n      }\r\n      return params\r\n    }, {})\r\n  return res\r\n}\r\n","/**\r\n * 读取本地浏览器选择的文件\r\n * @param {File} file 选择的文件\r\n * @param {Object} option 可选项参数\r\n * @param { readLocal.DataURL | readLocal.Text | readLocal.BinaryString | readLocal.ArrayBuffer } [option.type=readLocal.DataURL] 读取的类型，默认按照二进制 url 读取\r\n * @param {String} [option.encoding='UTF-8'] 读取的编码格式，默认为 UTF-8\r\n * @returns {Promise} 返回了读取到的内容（异步）\r\n */\r\nexport function readLocal (\r\n  file,\r\n  { type = readLocal.DataURL, encoding = 'UTF-8' } = {}\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    if (!file) {\r\n      reject(new Error('file not exists'))\r\n    }\r\n    const fr = new FileReader()\r\n    fr.onload = event => {\r\n      // @ts-ignore\r\n      resolve(event.target.result)\r\n    }\r\n    fr.onerror = error => {\r\n      reject(error)\r\n    }\r\n    fr[type](file, encoding)\r\n  })\r\n}\r\nreadLocal.DataURL = 'readAsDataURL'\r\nreadLocal.Text = 'readAsText'\r\nreadLocal.BinaryString = 'readAsBinaryString'\r\nreadLocal.ArrayBuffer = 'readAsArrayBuffer'\r\n","/**\r\n * 为 js 中的 Date 对象原型添加 format 格式化方法\r\n * @param {Date} date 要进行格式化的日期\r\n * @param {String} fmt 日期的格式\r\n * @returns {String} 格式化得到的结果\r\n */\r\nexport function dateFormat (date, fmt) {\r\n  const o = {\r\n    'y+': date.getFullYear(),\r\n    'M+': date.getMonth() + 1, // 月份\r\n    'd+': date.getDate(), // 日\r\n    'h+': date.getHours(), // 小时\r\n    'm+': date.getMinutes(), // 分\r\n    's+': date.getSeconds(), // 秒\r\n    'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\r\n    'S+': date.getMilliseconds(), // 毫秒\r\n  }\r\n  for (const k in o) {\r\n    if (!new RegExp('(' + k + ')').test(fmt)) {\r\n      continue\r\n    }\r\n    if (k === 'y+') {\r\n      fmt = fmt.replace(RegExp.$1, ('' + o[k]).substr(4 - RegExp.$1.length))\r\n    } else if (k === 'S+') {\r\n      let lens = RegExp.$1.length\r\n      lens = lens === 1 ? 3 : lens\r\n      fmt = fmt.replace(\r\n        RegExp.$1,\r\n        ('00' + o[k]).substr(('' + o[k]).length - 1, lens)\r\n      )\r\n    } else {\r\n      fmt = fmt.replace(\r\n        RegExp.$1,\r\n        RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)\r\n      )\r\n    }\r\n  }\r\n  return fmt\r\n}\r\n","import { dateFormat } from './../date/dateFormat'\r\n\r\n/**\r\n * 默认的日期格式\r\n * 不加 Z 为本地日期时间\r\n */\r\nconst deteFormatter = 'yyyy-MM-ddThh:mm:ss.SSS'\r\n/**\r\n * 编码函数\r\n * @param {String} k 参数的名字\r\n * @param {String} v 参数的值\r\n */\r\nconst encode = (k, v) => encodeURIComponent(k) + '=' + encodeURIComponent(v)\r\n\r\n/**\r\n * 拼接参数字符串\r\n * @param {Object} params 参数对象\r\n * @returns {String} 拼接后的字符串\r\n */\r\nexport function spliceParams (params = {}) {\r\n  if (!(params instanceof Object)) {\r\n    throw new Error(`The parameter type must be Object: ${params}`)\r\n  }\r\n  return Array.from(Object.entries(params)).reduce((res, [k, v]) => {\r\n    if (v === undefined || v === null) {\r\n      return res\r\n    } else if (v instanceof Date) {\r\n      res += encode(k, dateFormat(v, deteFormatter))\r\n    } else if (v instanceof Array) {\r\n      res += v\r\n        .map(item =>\r\n          encode(\r\n            k,\r\n            item instanceof Date ? dateFormat(item, deteFormatter) : item\r\n          )\r\n        )\r\n        .join('&')\r\n    } else {\r\n      res += encode(k, v)\r\n    }\r\n    return (res += '&')\r\n  }, '')\r\n}\r\n","/**\r\n * 为 fetch 请求添加超时选项\r\n * 注：超时选项并非真正意义上的超时即取消请求，请求依旧正常执行完成，但会提前返回 reject 结果\r\n * @param {Promise} fetchPromise fetch 请求的 Promise\r\n * @param {Number} timeout 超时时间\r\n * @returns {Promise} 如果超时就提前返回 reject, 否则正常返回 fetch 结果\r\n */\r\nexport function fetchTimeout (fetchPromise, timeout) {\r\n  let abortFn = null\r\n  // 这是一个可以被 reject 的 Promise\r\n  const abortPromise = new Promise(function (resolve, reject) {\r\n    abortFn = function () {\r\n      reject(new Error('abort promise'))\r\n    }\r\n  })\r\n  // 有一个 Promise 完成就立刻结束\r\n  const abortablePromise = Promise.race([fetchPromise, abortPromise])\r\n  setTimeout(function () {\r\n    abortFn()\r\n  }, timeout)\r\n  return abortablePromise\r\n}\r\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\r\n * 等待指定的时间/等待指定表达式成立\r\n * 如果未指定等待条件则立刻执行\r\n * @param {Number|Function} [param] 等待时间/等待条件\r\n * @returns {Promise} Promise 对象\r\n */\r\nexport const wait = param => {\r\n  return new Promise(resolve => {\r\n    if (typeof param === 'number') {\r\n      setTimeout(resolve, param)\r\n    } else if (typeof param === 'function') {\r\n      const timer = setInterval(() => {\r\n        if (param()) {\r\n          clearInterval(timer)\r\n          resolve()\r\n        }\r\n      }, 100)\r\n    } else {\r\n      resolve()\r\n    }\r\n  })\r\n}\r\n","import { wait } from '../function/wait'\r\nimport { fetchTimeout } from './fetchTimeout'\r\n\r\n/**\r\n * 限制并发请求数量的 fetch 封装\r\n * @class FetchLimiting\r\n * @example\r\n * const fetchLimiting = new FetchLimiting()\r\n * fetchLimiting._fetch('/')\r\n *   .then(res => res.json())\r\n *   .then(json => console.log(json))\r\n */\r\nexport class FetchLimiting {\r\n  /**\r\n   * 构造函数\r\n   * @param {Object} [option] 可选配置项\r\n   * @param {Number} [option.timeout=10000] 超时毫秒数\r\n   * @param {Number} [option.limit=10] 最大并发数限制\r\n   */\r\n  constructor ({ timeout = 10000, limit = 10 }) {\r\n    /**\r\n     * @field timeout 超时毫秒数\r\n     */\r\n    this.timeout = timeout\r\n    /**\r\n     * @field limit 最大并发数限制\r\n     */\r\n    this.limit = limit\r\n    /**\r\n     * @field execCount 当前正在执行异步的数量\r\n     */\r\n    this.execCount = 0\r\n    /**\r\n     * @field waitArr 等待的队列\r\n     * @type {Array.<IArguments>}\r\n     */\r\n    this.waitArr = []\r\n  }\r\n\r\n  /**\r\n   * 执行一个请求\r\n   * 如果到达最大并发限制时就进行等待\r\n   * @param {RequestInfo} url 请求 url 信息\r\n   * @param {RequestInit} [init=undefined] 请求的其他可选项，默认为 undefined\r\n   * @returns {Promise} 如果超时就提前返回 reject, 否则正常返回 fetch 结果\r\n   */\r\n  async fetch (url, init) {\r\n    const _innerFetch = async () => {\r\n      this.execCount++\r\n      const args = this.waitArr.shift()\r\n      try {\r\n        // 这里的 args 实际上就是 arguments 对象，即上面的 url 和 init\r\n        // @ts-ignore\r\n        return await fetchTimeout(fetch(...args), this.timeout)\r\n      } finally {\r\n        this.execCount--\r\n      }\r\n    }\r\n    this.waitArr.push(arguments)\r\n    await wait(() => this.execCount < this.limit)\r\n    // 尝试启动等待队列\r\n    return _innerFetch()\r\n  }\r\n}\r\n","/**\r\n * 将一个 Iterator 迭代器转换为一个 Array\r\n * 目前 {@override Array.from} 已取代改函数\r\n * @param {Iterator.<Object>} iterator Iterator 迭代器\r\n * @return {Array.<Object>} Iterator 中每一项元素转换而得到的 Array\r\n */\r\nexport function asIterator (iterator) {\r\n  const arr = []\r\n  while (true) {\r\n    const next = iterator.next()\r\n    if (next.done) {\r\n      break\r\n    }\r\n    arr.push(next.value)\r\n  }\r\n  return arr\r\n}\r\n","/**\r\n * 将数组异步压平一层\r\n * @param {Array.<Object>} arr 数组\r\n * @param {Function} fn 映射函数，将一个元素映射为一个数组\r\n * @returns {Promise.<Array.<Object>>} 压平一层的数组\r\n */\r\nexport async function asyncFlatMap (arr, fn) {\r\n  let res = []\r\n  for (const i in arr) {\r\n    res = res.concat(await fn(arr[i]))\r\n  }\r\n  return res\r\n}\r\n","/**\r\n * 自行实现 flatMap，将数组压平一层\r\n * @param {Array.<Object>} arr 数组\r\n // @ts-ignore\r\n * @param {function(item:Object):Array.<Object>} fn 映射方法，将一个元素映射为一个数组\r\n * @returns {Array.<Object>} 压平一层的数组\r\n */\r\nexport function flatMap (arr, fn) {\r\n  // @ts-ignore\r\n  return arr.reduce((res, item) => res.concat(fn(item)), [])\r\n}\r\n","/**\r\n * js 数组按照某个条件进行分组\r\n *\r\n * @param {Array<Object>} arr 要进行分组的数组\r\n * @param {Function} kFn 元素分组的唯一标识函数\r\n * @param {Function} [vFn] 元素分组的值处理的函数。第一个参数是累计值，第二个参数是当前正在迭代的元素，如果你使用过 {@link Array#reduce} 函数的话应该对此很熟悉\r\n * @param {Function} [init=[]] 每个分组的产生初始值的函数。类似于 reduce 的初始值，但它是一个函数，避免初始值在所有分组中进行累加。\r\n * @returns {Map<Object,Object>} 对象 -> 数组映射对象\r\n */\r\nexport function groupBy (\r\n  arr,\r\n  kFn,\r\n  /**\r\n   * 默认的值处理函数\r\n   * @param {Map} res 最终 map 集合\r\n   * @param {Object} item 当前迭代的元素\r\n   */\r\n  vFn = (res, item) => {\r\n    res.push(item)\r\n    return res\r\n  },\r\n  init = () => []\r\n) {\r\n  // 将元素按照分组条件进行分组得到一个 条件 -> 数组 的对象\r\n  return arr.reduce((res, item) => {\r\n    const k = kFn(item)\r\n    // 如果已经有这个键了就直接追加, 否则先将之赋值为 [] 再追加元素\r\n    if (!res.has(k)) {\r\n      res.set(k, init())\r\n    }\r\n    res.set(k, vFn(res.get(k), item))\r\n    return res\r\n  }, new Map())\r\n}\r\n","/**\r\n * 将数组映射为 Map\r\n * @param {Array.<Object>} array 数组\r\n * @param {function} kFn 产生 Map 元素唯一标识的函数\r\n * @param {Function} [vFn] 产生 Map 值的函数，默认为返回数组的元素\r\n * @returns {Map.<Object,Object>} 映射产生的 map 集合\r\n */\r\nexport function arrayToMap (array, kFn, vFn = v => v) {\r\n  return array.reduce((res, item) => {\r\n    res.set(kFn(item), vFn(item))\r\n    return res\r\n  }, new Map())\r\n}\r\n","/**\r\n * 填充字符串到指定长度\r\n * @param {String} item 填充的字符串\r\n * @param {Number} len 填充的长度\r\n * @returns {String} 填充完成的字符串\r\n */\r\nexport function fill (item, len) {\r\n  if (len <= 0) {\r\n    return ''\r\n  }\r\n  return item + fill(item, len - 1)\r\n}\r\n","let lastFocusEl\r\n\r\ndocument.addEventListener(\r\n  'focus',\r\n  event => {\r\n    lastFocusEl = event.target\r\n  },\r\n  true\r\n)\r\ndocument.addEventListener(\r\n  'blur',\r\n  () => {\r\n    lastFocusEl = null\r\n  },\r\n  true\r\n)\r\n/**\r\n * 获取到最后一个获得焦点的元素\r\n * @returns {Element} 最后一个获取到焦点的元素\r\n */\r\nexport function lastFocus () {\r\n  return lastFocusEl\r\n}\r\n","import { fill } from '../string/fill'\r\nimport { arrayToMap } from './../array/arrayToMap'\r\n\r\n/**\r\n * 日期格式化类\r\n * @class DateFormat\r\n */\r\nclass DateFormat {\r\n  /**\r\n   * 构造函数\r\n   * @param {String} name 日期格式的名称\r\n   * @param {String} format 日期的格式值\r\n   * @param {String} value 格式化得到的值\r\n   * @param {Number} index 需要替换位置的索引\r\n   */\r\n  constructor (name, format, value, index) {\r\n    /**\r\n     * @field 日期格式的名称\r\n     */\r\n    this.name = name\r\n    /**\r\n     * @field 日期的格式值\r\n     */\r\n    this.format = format\r\n    /**\r\n     * @field 格式化得到的值\r\n     */\r\n    this.value = value\r\n    /**\r\n     * @field 需要替换位置的索引\r\n     */\r\n    this.index = index\r\n  }\r\n}\r\n\r\n/**\r\n * 日期时间的正则表达式\r\n */\r\nconst dateFormats = {\r\n  year: 'y{4}|y{2}',\r\n  month: 'M{1,2}',\r\n  day: 'd{1,2}',\r\n  hour: 'h{1,2}',\r\n  minute: 'm{1,2}',\r\n  second: 's{1,2}',\r\n  millieSecond: 'S{1,3}',\r\n}\r\n\r\n/**\r\n * 解析字符串为 Date 对象\r\n * @param {String} str 日期字符串\r\n * @param {String} fmt 日期字符串的格式，目前仅支持使用 y(年),M(月),d(日),h(时),m(分),s(秒),S(毫秒)\r\n * @returns {Date} 解析得到的 Date 对象\r\n */\r\nexport function dateParse (str, fmt) {\r\n  const now = new Date()\r\n  // 如果没有格式化某项的话则设置为默认时间\r\n  const defaultDateValues = {\r\n    year: now.getFullYear().toString(),\r\n    month: '01',\r\n    day: '01',\r\n    hour: '00',\r\n    minute: '00',\r\n    second: '00',\r\n    millieSecond: '000',\r\n  }\r\n  // 保存对传入的日期字符串进行格式化的全部信息数组列表\r\n  const dateUnits = []\r\n  for (const fmtName in dateFormats) {\r\n    const regExp = new RegExp(dateFormats[fmtName])\r\n    if (regExp.test(fmt)) {\r\n      const matchStr = regExp.exec(fmt)[0]\r\n      const regexStr = fill('`', matchStr.length)\r\n      const index = fmt.indexOf(matchStr)\r\n      fmt = fmt.replace(matchStr, regexStr)\r\n      dateUnits.push(\r\n        new DateFormat(fmtName, fill('\\\\d', matchStr.length), null, index)\r\n      )\r\n    } else {\r\n      dateUnits.push(\r\n        new DateFormat(fmtName, null, defaultDateValues[fmtName], -1)\r\n      )\r\n    }\r\n  }\r\n  // 进行验证是否真的是符合传入格式的字符串\r\n  fmt = fmt.replace(new RegExp('`', 'g'), '\\\\d')\r\n  if (!new RegExp(`^${fmt}$`).test(str)) {\r\n    return null\r\n  }\r\n  // 进行一次排序, 依次对字符串进行截取\r\n  dateUnits\r\n    // 过滤掉没有得到格式化的对象\r\n    .filter(({ format }) => format)\r\n    // 按照字符串中日期片段的索引进行排序\r\n    .sort(function (a, b) {\r\n      return a.index - b.index\r\n    })\r\n    // 获取到匹配的日期片段的值\r\n    .map(format => {\r\n      const matchDateUnit = new RegExp(format.format).exec(str)\r\n      if (matchDateUnit !== null && matchDateUnit.length > 0) {\r\n        str = str.replace(matchDateUnit[0], '')\r\n        format.value = matchDateUnit[0]\r\n      }\r\n      return format\r\n    })\r\n    // 覆写到 dateStr 上面\r\n    .forEach(({ format }, i) => {\r\n      const matchDateUnit = new RegExp(format).exec(str)\r\n      if (matchDateUnit !== null && matchDateUnit.length > 0) {\r\n        str = str.replace(matchDateUnit[0], '')\r\n        dateUnits[i].value = matchDateUnit[0]\r\n      }\r\n    })\r\n  // 将截取完成的信息封装成对象并格式化标准的日期字符串\r\n  const map = arrayToMap(dateUnits, item => item.name, item => item.value)\r\n  if (map.get('year').length === 2) {\r\n    map.set(\r\n      'year',\r\n      defaultDateValues.year.substr(0, 2).concat(map.get('year'))\r\n    )\r\n  }\r\n  // 注意：此处使用的是本地时间而非 UTC 时间\r\n  const date = `${map.get('year')}-${map.get('month')}-${map.get(\r\n    'day'\r\n  )}T${map.get('hour')}:${map.get('minute')}:${map.get('second')}.${map.get(\r\n    'millieSecond'\r\n  )}`\r\n  return new Date(date)\r\n}\r\n","/**\r\n * 获取输入框中光标所在位置\r\n * @param  {HTMLFormElement} el 需要获取的输入框元素\r\n * @returns {Number} 光标所在位置的下标\r\n */\r\nexport function getCusorPostion (el) {\r\n  return el.selectionStart\r\n}\r\n","/**\r\n * 设置输入框中选中的文本/光标所在位置\r\n * @param {HTMLFormElement} el 需要设置的输入框元素\r\n * @param {Number} start 光标所在位置的下标\r\n * @param {Number} [end=start] 结束位置，默认为输入框结束\r\n */\r\nexport function setCusorPostion (el, start, end = start) {\r\n  el.focus()\r\n  el.setSelectionRange(start, end)\r\n}\r\n","/**\r\n * 字符串安全的转换为小写\r\n * @param {String} str 字符串\r\n * @returns {String} 转换后得到的全小写字符串\r\n */\r\nexport function toLowerCase (str) {\r\n  if (!str || typeof str !== 'string') {\r\n    return str\r\n  }\r\n  return str.toLowerCase()\r\n}\r\n","/**\r\n * 返回参数本身的函数\r\n * @param {Object} obj 任何对象\r\n * @returns {Object} 传入的参数\r\n */\r\nexport function returnItself (obj) {\r\n  return obj\r\n}\r\n","/**\r\n * 安全执行某个函数\r\n * @param {Function} fn 需要执行的函数\r\n * @param {Object} [defaultVal=undefined] 发生异常后的默认返回值，默认为 undefined\r\n * @param {...Object} [args] 可选的函数参数\r\n * @returns {Object|undefined} 函数执行的结果，或者其默认值\r\n */\r\nexport const safeExec = (fn, defaultVal = undefined, ...args) => {\r\n  try {\r\n    return fn(...args)\r\n  } catch (err) {\r\n    return defaultVal\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","/**\r\n * 通用的单例模式\r\n * @param {Object} clazz 需要包装为单例的类型\r\n * @returns {Object} 包装后的单例模式类，使用 {@code new} 创建将只在第一次有效\r\n */\r\nexport function singleModel (clazz) {\r\n  let instance\r\n  return class SingleClass extends clazz {\r\n    /**\r\n     * @param {...Object} args\r\n     */\r\n    constructor (...args) {\r\n      if (instance) {\r\n        return instance\r\n      }\r\n      super(...args)\r\n      instance = this\r\n    }\r\n  }\r\n}\r\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import { singleModel } from './singleModel'\r\n\r\n/**\r\n * 状态机\r\n * 用于避免使用 if-else 的一种方式\r\n */\r\nexport class StateMachine {\r\n  /**\r\n   * 获取到一个状态工厂\r\n   */\r\n  static getFactory () {\r\n    const classMap = new Map()\r\n    /**\r\n     * 状态注册器\r\n     * 更好的有限状态机，分离子类与构建的关系，无论子类如何增删该都不影响基类及工厂类\r\n     */\r\n    return new class Builder {\r\n      /**\r\n       * 注册一个 class，创建子类时调用，用于记录每一个 [状态 => 子类] 对应\r\n       * @param {Number|String} state 作为键的状态\r\n       * @param {Object} clazz 对应的子类型\r\n       * @returns {Object} 返回 clazz 本身\r\n       */\r\n      register (state, clazz) {\r\n        classMap.set(state, singleModel(clazz))\r\n        return clazz\r\n      }\r\n\r\n      // noinspection JSMethodCanBeStatic\r\n      /**\r\n       * 获取一个标签子类对象\r\n       * @param {Number|String} state 状态索引\r\n       * @returns {Object} 子类对象\r\n       */\r\n      getInstance (state) {\r\n        const Class = classMap.get(state)\r\n        if (!Class) {\r\n          return null\r\n        }\r\n        // 构造函数的参数\r\n        return new Class(...Array.from(arguments).slice(1))\r\n      }\r\n    }()\r\n  }\r\n}\r\n","/**\r\n * 测试函数的执行时间\r\n * 注：如果函数返回 Promise，则该函数也会返回 Promise，否则直接返回执行时间\r\n * @param {Function} fn 需要测试的函数\r\n * @returns {Number|Promise} 执行的毫秒数\r\n */\r\nexport const timing = fn => {\r\n  // 使用 Proxy 实现了一下，但感觉实际上与原来的差不多（或许是吾辈的使用场景不太对？）\r\n  const proxyFn = new Proxy(fn, {\r\n    apply (target, thisArg, args) {\r\n      const begin = performance.now()\r\n      const result = Reflect.apply(target, thisArg, args)\r\n      if (!(result instanceof Promise)) {\r\n        return performance.now() - begin\r\n      }\r\n      return result.then(() => performance.now() - begin)\r\n    },\r\n  })\r\n  return proxyFn()\r\n  // const begin = performance.now()\r\n  // const result = fn()\r\n  // if (!(result instanceof Promise)) {\r\n  //   return performance.now() - begin\r\n  // }\r\n  // return result.then(() => performance.now() - begin)\r\n}\r\n","/**\r\n * 判断是否为小数的正则表达式\r\n */\r\nconst regexp = new RegExp('^(-?\\\\d+)(.\\\\d+)?$')\r\n/**\r\n * 判断字符串是否位小数\r\n * @param {String} str 需要进行判断的字符串\r\n * @returns {Boolean} 是否为小数\r\n */\r\nexport function isFloat (str) {\r\n  return regexp.test(str)\r\n}\r\n","/**\r\n * 判断是否为整数的正则表达式\r\n */\r\nconst regexp = new RegExp('^-?\\\\d+$')\r\n/**\r\n * 判断字符串是否位整数\r\n * @param {String} str 需要进行判断的字符串\r\n * @returns {Boolean} 是否为小数\r\n */\r\nexport function isNumber (str) {\r\n  return regexp.test(str)\r\n}\r\n","/**\r\n * 将空白字符串转换为 null\r\n *\r\n * @param {String} str 将空字符串转换为 {@code null}\r\n * @returns {String} 可能为 {@code null}\r\n */\r\nexport function blankToNull (str) {\r\n  return !str || str.trim().length === 0 ? null : str\r\n}\r\n","/**\r\n * 排除对象中的指定字段\r\n * 注: 此处将获得一个浅拷贝对象\r\n * @param {Object} object 排除对象\r\n * @param {...String} fields 要排除的字段\r\n * @returns {Object} 排除完指定字段得到的新的对象\r\n */\r\nexport function excludeFields (object, ...fields) {\r\n  const set = new Set(fields)\r\n  return Object.entries(object).reduce((res, [k, v]) => {\r\n    if (!set.has(k)) {\r\n      res[k] = v\r\n    }\r\n    return res\r\n  }, {})\r\n}\r\n","import { dateFormat } from './dateFormat'\r\n\r\n/**\r\n * 日期固定时间点\r\n * @class DateConstants\r\n */\r\nexport class DateConstants {\r\n  /**\r\n   * 获取指定日期一天的开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的开始时间\r\n   */\r\n  dayStart (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期一天的结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的结束时间\r\n   */\r\n  dayEnd (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T23:59:59.999`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的新年开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 新年开始时间\r\n   */\r\n  yearStart (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-01-01T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的旧年结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 旧年结束时间\r\n   */\r\n  yearEnd (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-12-31T23:59:59.999`)\r\n  }\r\n}\r\n\r\n/**\r\n * 导出一个日期固定时间点的对象\r\n * @type {DateConstants}\r\n */\r\nexport const dateConstants = new DateConstants()\r\n","/**\r\n * 判断数字是否在指定区间之中\r\n * @param {Number} num 指定数字\r\n * @param {Number} min 最小值\r\n * @param {Number} max 最大值（不包含）\r\n */\r\nexport function isRange (num, min, max) {\r\n  return num >= min && num < max\r\n}\r\n","import { dateFormat } from './dateFormat'\r\n\r\n/**\r\n * 日期固定时间点\r\n * @class DateConstants\r\n */\r\nexport class DateConstants {\r\n  /**\r\n   * 获取指定日期一天的开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的开始时间\r\n   */\r\n  dayStart (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期一天的结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的结束时间\r\n   */\r\n  dayEnd (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T23:59:59.999`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的新年开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 新年开始时间\r\n   */\r\n  yearStart (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-01-01T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的旧年结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 旧年结束时间\r\n   */\r\n  yearEnd (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-12-31T23:59:59.999`)\r\n  }\r\n}\r\n\r\n/**\r\n * 导出一个日期固定时间点的对象\r\n * @type {DateConstants}\r\n */\r\nexport const dateConstants = new DateConstants()\r\n","import { isRange } from '../number/isRange'\r\nimport { dateConstants } from './DateConstants'\r\n\r\n/**\r\n * 一天标准的毫秒数\r\n */\r\nconst DAY_UNIT_TIME = 1000 * 60 * 60 * 24\r\n/**\r\n * 日期增强\r\n */\r\nexport class DateEnhance {\r\n  /**\r\n   * 构造函数\r\n   * @param {Date} date 要增强的日期\r\n   */\r\n  constructor (date) {\r\n    /**\r\n     * @field 要增强的日期\r\n     */\r\n    this.date = date\r\n  }\r\n  /**\r\n   * 获取到年份\r\n   * @returns {Number}\r\n   */\r\n  year () {\r\n    return this.date.getFullYear()\r\n  }\r\n  /**\r\n   * 获取月份\r\n   * @returns {Number}\r\n   * @deprecated 已废弃，请使用 {@link this#monthOfYear} 函数\r\n   */\r\n  month () {\r\n    return this.date.getMonth()\r\n  }\r\n  /**\r\n   * 获取今年的第几个月份\r\n   * 和 {@link this#month} 不同的是不再从 0 计算月份\r\n   */\r\n  monthOfYear () {\r\n    return this.date.getMonth() + 1\r\n  }\r\n  /**\r\n   * 获取一年内的第多少天\r\n   * 注: 这个天数指定的在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\r\n   * @returns {Number}\r\n   */\r\n  dayOfYear () {\r\n    return Math.ceil(\r\n      (this.date.getTime() - dateConstants.yearStart(this.date).getTime()) /\r\n        DAY_UNIT_TIME\r\n    )\r\n  }\r\n  /**\r\n   * 获取一个月内的第多少天\r\n   * 注: 这个天数指的是在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\r\n   * @returns {Number}\r\n   */\r\n  dayOfMonth () {\r\n    return this.date.getDate()\r\n  }\r\n  /**\r\n   * 获取一个星期内的第多少天\r\n   * @returns {Number}\r\n   */\r\n  dayOfWeek () {\r\n    return this.date.getDay()\r\n  }\r\n  /**\r\n   * 获取一年内的第多少星期\r\n   * 注: 这个星期指定的在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\r\n   * @returns {Number}\r\n   */\r\n  weekOfYear () {\r\n    return Math.ceil(this.dayOfYear() / 7)\r\n  }\r\n  /**\r\n   * 获取一个月内的第多少星期\r\n   * @returns {Number}\r\n   */\r\n  weekOfMonth () {\r\n    return Math.ceil(this.dayOfMonth() / 7)\r\n  }\r\n  /**\r\n   * 获取季度\r\n   * @returns {Number}\r\n   */\r\n  quarter () {\r\n    const month = this.month()\r\n    if (isRange(month, 0, 3)) {\r\n      return 1\r\n    } else if (isRange(month, 3, 6)) {\r\n      return 2\r\n    } else if (isRange(month, 6, 9)) {\r\n      return 3\r\n    } else {\r\n      return 4\r\n    }\r\n  }\r\n  /**\r\n   * 获取小时\r\n   * @returns {Number}\r\n   */\r\n  hour () {\r\n    return this.date.getHours()\r\n  }\r\n  /**\r\n   * 获取分钟\r\n   * @returns {Number}\r\n   */\r\n  minute () {\r\n    return this.date.getMinutes()\r\n  }\r\n  /**\r\n   * 获取秒\r\n   * @returns {Number}\r\n   */\r\n  second () {\r\n    return this.date.getSeconds()\r\n  }\r\n  /**\r\n   * 获取毫秒\r\n   * @returns {Number}\r\n   */\r\n  milliSecond () {\r\n    return this.date.getMilliseconds()\r\n  }\r\n}\r\n\r\n/**\r\n * 获取一个增强的日期\r\n * @param {Date} date 要增强的日期\r\n * @returns {DateEnhance} 增强日期\r\n */\r\nexport function dateEnhance (date) {\r\n  return new DateEnhance(date)\r\n}\r\n","/**\r\n * 时间日期间隔\r\n * @class DateBetween\r\n */\r\nexport class DateBetween {\r\n  /**\r\n   * 构造函数\r\n   * @param {Date} start 开始时间\r\n   * @param {Date} end 结束时间\r\n   */\r\n  constructor (start, end) {\r\n    /**\r\n     * @field start 开始时间\r\n     */\r\n    this.start = start\r\n    /**\r\n     * @field end 结束时间\r\n     */\r\n    this.end = end\r\n  }\r\n  /**\r\n   * 获取毫秒差值\r\n   * @returns {Number} 毫秒差值\r\n   */\r\n  milliSecond () {\r\n    return this.end.getTime() - this.start.getTime()\r\n  }\r\n  /**\r\n   * 获取秒差值\r\n   * @returns {Number} 秒差值\r\n   */\r\n  second () {\r\n    return Math.floor(this.milliSecond() / 1000)\r\n  }\r\n  /**\r\n   * 获取分钟差值\r\n   * @returns {Number} 分钟差值\r\n   */\r\n  minute () {\r\n    return Math.floor(this.second() / 60)\r\n  }\r\n  /**\r\n   * 获取小时差值\r\n   * @returns {Number} 小时差值\r\n   */\r\n  hour () {\r\n    return Math.floor(this.minute() / 60)\r\n  }\r\n  /**\r\n   * 获取天数差值\r\n   * @returns {Number} 天数差值\r\n   */\r\n  day () {\r\n    return Math.floor(this.hour() / 24)\r\n  }\r\n  /**\r\n   * 获取月份差值\r\n   * 注: 此处获取的差值是按月计算的，即 2018-12-31 => 2019-01-01 也被认为相差一个月\r\n   * @returns {Number} 月份差值\r\n   */\r\n  month () {\r\n    const year = this.year()\r\n    const month = this.end.getMonth() - this.start.getMonth()\r\n    return year * 12 + month\r\n  }\r\n  /**\r\n   * 获取年份差值\r\n   * 注: 此处获取的差值是按年计算的，即 2018-12-31 => 2019-01-01 也被认为相差一年\r\n   * @returns {Number} 年份差值\r\n   */\r\n  year () {\r\n    return this.end.getFullYear() - this.start.getFullYear()\r\n  }\r\n}\r\n\r\n/**\r\n * 获取两个时间的差值\r\n * @param {Date} start 开始时间\r\n * @param {Date} end 结束时间\r\n * @returns {DateBetween} 差值对象\r\n */\r\nexport function dateBetween (start, end) {\r\n  return new DateBetween(start, end)\r\n}\r\n","/**\r\n * 将指定函数包装为只调用一次\r\n * @param {Function} fn 需要包装的函数\r\n * @returns {Function} 包装后的函数\r\n */\r\nexport const once = fn => {\r\n  let flag = true\r\n  let cache\r\n  return function (...args) {\r\n    if (flag === false) {\r\n      return cache\r\n    }\r\n    flag = false\r\n    const result = fn.call(this, ...args)\r\n    // 如果是异步函数则返回异步的结果\r\n    if (result instanceof Promise) {\r\n      return result.then(res => {\r\n        cache = res\r\n        return res\r\n      })\r\n    }\r\n    cache = result\r\n    return cache\r\n  }\r\n}\r\n","/**\r\n * 包装一个函数为指定参数只执行一次的函数\r\n * @param {Function} fn 需要包装的函数\r\n * @param {Function} paramConverter 参数转换的函数，参数为需要包装函数的参数\r\n * @returns {Function} 需要被包装的函数\r\n */\r\nexport const onceOfSameParam = (\r\n  fn,\r\n  paramConverter = (...args) => JSON.stringify(args)\r\n) => {\r\n  const cacheMap = new Map()\r\n  return function (...args) {\r\n    const key = paramConverter(...args)\r\n    const old = cacheMap.get(key)\r\n    if (old !== undefined) {\r\n      return old\r\n    }\r\n    const res = fn.call(this, ...args)\r\n    if (res instanceof Promise) {\r\n      return res.then(res => {\r\n        cacheMap.set(key, res)\r\n        return res\r\n      })\r\n    }\r\n    cacheMap.set(key, res)\r\n    return res\r\n  }\r\n}\r\n","import { returnItself } from '../function/returnItself'\r\n\r\n/**\r\n * 数组之间的差异结果类\r\n * @class ArrayDiff\r\n */\r\nexport class ArrayDiff {\r\n  /**\r\n   * 构造函数\r\n   * @param {Array} left 第一个数组独有的元素列表\r\n   * @param {Array} right 第二个数组独有的元素列表\r\n   * @param {Array} common 两个数组共有的元素列表\r\n   */\r\n  constructor (left, right, common) {\r\n    /**\r\n     * @field 第一个数组独有的元素列表\r\n     */\r\n    this.left = left\r\n    /**\r\n     * @field 第二个数组独有的元素列表\r\n     */\r\n    this.right = right\r\n    /**\r\n     * @field 两个数组共有的元素列表\r\n     */\r\n    this.common = common\r\n  }\r\n}\r\n\r\n/**\r\n * 比较两个数组的差异\r\n * @param {Array} thanArr 第一个数组\r\n * @param {Array} thatArr 第二个数组\r\n * @param {Function} [kFn=returnItself] 每个元素的唯一键函数\r\n * @returns {ArrayDiff} 比较的差异结果\r\n */\r\nexport function arrayDiffBy (thanArr, thatArr, kFn = returnItself) {\r\n  // @ts-ignore\r\n  const kThanSet = new Set(thanArr.map(kFn))\r\n  // @ts-ignore\r\n  const kThatSet = new Set(thatArr.map(kFn))\r\n  const left = thanArr.filter(v => !kThatSet.has(kFn(v)))\r\n  const right = thatArr.filter(v => !kThanSet.has(kFn(v)))\r\n  // @ts-ignore\r\n  const kLeftSet = new Set(left.map(kFn))\r\n  const common = thanArr.filter(v => !kLeftSet.has(kFn(v)))\r\n  return new ArrayDiff(left, right, common)\r\n}\r\n","import { once } from '../function/once'\r\n/**\r\n * 使用 Generator 实现一个从 0 开始的自增序列\r\n */\r\nfunction * autoIncrementGenerator () {\r\n  for (let i = 0; ; i++) {\r\n    /**\r\n     * @returns {Number} 每次获取都返回循环中的当前迭代变量，然后暂停于此处\r\n     */\r\n    yield i\r\n  }\r\n}\r\n/**\r\n * 包装 {@link autoIncrementGenerator} 为只能调用一次的函数\r\n */\r\nconst generator = once(autoIncrementGenerator)\r\n\r\n/**\r\n * 获取自增长序列的最新值\r\n * @returns {Number} 最新值\r\n */\r\nexport function autoIncrement () {\r\n  return generator().next().value\r\n}\r\n","import { onceOfSameParam } from '../function/onceOfSameParam'\r\n\r\n/**\r\n * 转换接口\r\n * @interface\r\n */\r\nexport class IConverter {\r\n  /**\r\n   * 将字符串解析为字符串列表\r\n   *\r\n   * @param {String} str 字符串\r\n   * @return {Array.<String>} 字符串列表\r\n   * @abstract\r\n   */\r\n  from (str) {\r\n    throw new Error('子类必须重写 from 函数')\r\n  }\r\n\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @abstract\r\n   */\r\n  to (list) {\r\n    throw new Error('子类必须重写 to 函数')\r\n  }\r\n}\r\n\r\n/**\r\n * 驼峰风格解析\r\n */\r\nexport class CamelOrPascalFrom extends IConverter {\r\n  /**\r\n   * 将字符串解析为字符串列表\r\n   *\r\n   * @param {String} str 字符串\r\n   * @return {Array.<String>} 字符串列表\r\n   * @override\r\n   */\r\n  from (str) {\r\n    const result = []\r\n    let len = str.length\r\n    let old = 0\r\n    for (let i = 0; i < len; i++) {\r\n      const c = str.charAt(i)\r\n      if (c >= 'A' && c <= 'Z') {\r\n        if (i !== 0) {\r\n          result.push(str.substring(old, i))\r\n        }\r\n        old = i\r\n      }\r\n    }\r\n    if (old !== str.length) {\r\n      result.push(str.substring(old, str.length))\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\n/**\r\n * 小写开头的驼峰转换器\r\n *\r\n */\r\nexport class CamelConverter extends CamelOrPascalFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    const str = list\r\n      .map(s => s.substring(0, 1).toUpperCase() + s.substring(1))\r\n      .join()\r\n    return str.substring(0, 1).toLowerCase() + str.substring(1)\r\n  }\r\n}\r\n\r\n/**\r\n * 大写开头的驼峰转换器\r\n */\r\nexport class PascalConverter extends CamelOrPascalFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    return list\r\n      .map(s => s.substring(0, 1).toUpperCase() + s.substring(1))\r\n      .join()\r\n  }\r\n}\r\n/**\r\n * 下划线风格解析\r\n */\r\nexport class SnakeOrScreamingSnakeFrom extends IConverter {\r\n  /**\r\n   * 将字符串解析为字符串列表\r\n   *\r\n   * @param {String} str 字符串\r\n   * @return {Array.<String>} 字符串列表\r\n   * @override\r\n   */\r\n  from (str) {\r\n    return str.split('_')\r\n  }\r\n}\r\n/**\r\n * 小写下划线的转换器\r\n */\r\nexport class SnakeConverter extends SnakeOrScreamingSnakeFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    return list.map(s => s.toLowerCase()).join('_')\r\n  }\r\n}\r\n/**\r\n * 大写下划线的转换器\r\n */\r\nexport class ScreamingSnakeConverter extends SnakeOrScreamingSnakeFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    return list.map(s => s.toUpperCase()).join('_')\r\n  }\r\n}\r\n/**\r\n * @enum {Symbol} 字符串风格常量对象\r\n */\r\nexport const stringStyleType = {\r\n  /**\r\n   * 小写驼峰\r\n   */\r\n  Camel: Symbol(1),\r\n  /**\r\n   * 大写驼峰\r\n   */\r\n  Pascal: Symbol(2),\r\n  /**\r\n   * 小写下划线\r\n   */\r\n  Snake: Symbol(3),\r\n  /**\r\n   * 大写下划线\r\n   */\r\n  ScreamingSnake: Symbol(4),\r\n}\r\n\r\n/**\r\n * 转换器工厂\r\n */\r\nclass ConverterFactory {\r\n  /**\r\n   * 获取一个转换器实例\r\n   *\r\n   * @param {Symbol} styleType 转换风格，使用了 {@link stringStyleType} 定义的常量对象\r\n   * @return {IConverter} 转换器对象\r\n   * @throws 如果获取未定义过的转换器，则会抛出异常\r\n   */\r\n  static getInstance (styleType) {\r\n    switch (styleType) {\r\n      case stringStyleType.Camel:\r\n        return new CamelConverter()\r\n      case stringStyleType.Pascal:\r\n        return new PascalConverter()\r\n      case stringStyleType.Snake:\r\n        return new SnakeConverter()\r\n      case stringStyleType.ScreamingSnake:\r\n        return new ScreamingSnakeConverter()\r\n      default:\r\n        throw new Error('No corresponding converter found')\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 字符串风格转换器\r\n * 请不要直接使用构造函数创建，而是用 {@link StringStyleUtil.getConverter} 来获得一个转换器\r\n * @private\r\n */\r\nexport class StringStyleConverter {\r\n  /**\r\n   * 构造一个字符串任意风格转换器\r\n   * @param {Symbol} from 转换字符串的风格\r\n   * @param {Symbol} to 需要转换的风格\r\n   * @private\r\n   */\r\n  constructor (from, to) {\r\n    /**\r\n     * @field 解析字符串风格的转换器\r\n     * @type {IConverter}\r\n     * @private\r\n     */\r\n    this.fromConverter = ConverterFactory.getInstance(from)\r\n    /**\r\n     * @field 构造字符串风格的转换器\r\n     * @type {IConverter}\r\n     * @private\r\n     */\r\n    this.toConverter = ConverterFactory.getInstance(to)\r\n  }\r\n\r\n  /**\r\n   * 转换字符串的风格\r\n   *\r\n   * @param {String} str 要转换的字符串\r\n   * @return {String} 转换得到的字符串\r\n   */\r\n  convert (str) {\r\n    if (str === undefined || str === null || str.length === 0) {\r\n      return str\r\n    }\r\n    return this.toConverter.to(this.fromConverter.from(str))\r\n  }\r\n}\r\n\r\n/**\r\n * 包装获取字符串风格转换器\r\n * 此处采用了单例模式，每种转换器只会有一个\r\n *\r\n * @param {stringStyleType} from 解析风格\r\n * @param {stringStyleType} to 转换风格\r\n * @return {StringStyleConverter} 转换器的实例\r\n */\r\nconst _getConverter = onceOfSameParam(\r\n  /**\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @return {StringStyleConverter} 转换器的实例\r\n   */\r\n  (from, to) => new StringStyleConverter(from, to),\r\n  /**\r\n   * 根据参数生成唯一标识\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @return {String} 唯一参数标识字符串\r\n   */\r\n  (from, to) => from.toString() + to.toString()\r\n)\r\n\r\n/**\r\n * 字符串风格转换工具类\r\n */\r\nexport class StringStyleUtil {\r\n  /**\r\n   * 获取一个转换器的实例\r\n   * 该函数获取的转换器可以任意复用，请优先使用函数\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @return {StringStyleConverter} 转换器的实例\r\n   */\r\n  static getConverter (from, to) {\r\n    return _getConverter(from, to)\r\n  }\r\n  /**\r\n   * 直接转换字符串的风格\r\n   * 请优先使用可以复用的 {@link StringStyleUtil.getConverter} 函数\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @param {String} str 要转换的字符串\r\n   * @return {String} 转换得到的字符串\r\n   */\r\n  static convert (from, to, str) {\r\n    return StringStyleUtil.getConverter(from, to).convert(str)\r\n  }\r\n}\r\n","/**\r\n * 将函数包装为柯里化函数\r\n * 注: 该函数模仿了 Lodash 的 curry 函数\r\n * @param {Function} fn 需要包装的函数\r\n * @param  {...any} args 应用的部分参数\r\n * @returns {Function} 包装后的函数\r\n */\r\nexport const curry = (fn, ...args) => {\r\n  const realArgs = args.filter(arg => arg !== curry._)\r\n  if (realArgs.length >= fn.length) {\r\n    return fn(...realArgs)\r\n  }\r\n\r\n  function innerFn (...otherArgs) {\r\n    // 记录需要移除补到前面的参数\r\n    const removeIndexSet = new Set()\r\n    let i = 0\r\n    const newArgs = args.map(arg => {\r\n      if (\r\n        arg !== curry._ ||\r\n        otherArgs[i] === undefined ||\r\n        otherArgs[i] === curry._\r\n      ) {\r\n        return arg\r\n      }\r\n      removeIndexSet.add(i)\r\n      // 每次补偿前面的 curry._ 参数计数器 +1\r\n      return otherArgs[i++]\r\n    })\r\n    const newOtherArgs = otherArgs.filter((_v, i) => !removeIndexSet.has(i))\r\n    return curry(fn, ...newArgs, ...newOtherArgs)\r\n  }\r\n\r\n  // 自定义 toString 函数便于调试\r\n  innerFn.toString = () =>\r\n    `name: ${fn.name}, args: [${args.map(o => o.toString()).join(', ')}]`\r\n  innerFn._curry = true\r\n\r\n  return innerFn\r\n}\r\n\r\n/**\r\n * 柯里化的占位符，需要应用后面的参数时使用\r\n * 例如 {@link curry(fn)(curry._, 1)} 意味着函数 fn 的第二个参数将被确定为 1\r\n */\r\ncurry._ = Symbol('_')\r\n","/**\r\n * 判断一个对象是否是无效的\r\n * 无效的值包含 null/undefined\r\n * @param {Object} object 任何一个对象\r\n * @returns {Boolean} 是否无效的\r\n */\r\nexport function isNullOrUndefined (object) {\r\n  return object === undefined || object === null\r\n}\r\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\r\n\r\n/**\r\n * 判断一个字符串是否为空字符串\r\n * @param {String} str 字符串\r\n * @returns {Boolean} 是否为空字符串\r\n */\r\nexport function isEmpty (str) {\r\n  return isNullOrUndefined(str) || str === ''\r\n}\r\n","import { dateFormat } from './dateFormat'\r\nimport { dateParse } from './dateParse'\r\nimport { isNullOrUndefined } from '../obj/isNullOrUndefined'\r\nimport { isEmpty } from '../string/isEmpty'\r\n\r\n/**\r\n * 日期格式化器\r\n * 包含格式化为字符串和解析字符串为日期的函数\r\n */\r\nexport class DateFormatter {\r\n  /**\r\n   * 构造函数\r\n   * @param {String} fmt 日期时间格式\r\n   */\r\n  constructor (fmt) {\r\n    /**\r\n     * @field 日期时间格式\r\n     */\r\n    this.fmt = fmt\r\n  }\r\n  /**\r\n   * 格式化\r\n   * @param {Date} date 需要格式化的日期\r\n   * @returns {String} 格式化的字符串\r\n   */\r\n  format (date) {\r\n    if (isNullOrUndefined(date)) {\r\n      return ''\r\n    }\r\n    return dateFormat(date, this.fmt)\r\n  }\r\n  /**\r\n   * 解析\r\n   * @param {String} str 字符串\r\n   * @returns {Date} 解析得到的日期\r\n   */\r\n  parse (str) {\r\n    if (isEmpty(str)) {\r\n      return null\r\n    }\r\n    return dateParse(str, this.fmt)\r\n  }\r\n  /**\r\n   * 将日期时间字符串转换为前端指定格式的字符串\r\n   * 主要适用场景是前端接收到后端的日期时间一般是一个字符串，然而需要自定义格式的时候还必须先创建 {@link Date} 对象才能格式化，略微繁琐，故使用该函数\r\n   * @param {String} str 字符串\r\n   * @param {String} [parseFmt=undefined] 解析的日期时间格式。默认直接使用 {@link new Date()} 创建\r\n   * @returns {String} 转换后得到的字符串\r\n   */\r\n  strFormat (str, parseFmt) {\r\n    if (isEmpty(str)) {\r\n      return null\r\n    }\r\n    const date = parseFmt ? dateParse(str, parseFmt) : new Date(str)\r\n    return dateFormat(date, this.fmt)\r\n  }\r\n}\r\n\r\n/**\r\n * 日期格式化器\r\n */\r\nDateFormatter.dateFormatter = new DateFormatter('yyyy-MM-dd')\r\n/**\r\n * 时间格式化器\r\n */\r\nDateFormatter.timeFormatter = new DateFormatter('hh:mm:ss')\r\n/**\r\n * 日期时间格式化器\r\n */\r\nDateFormatter.dateTimeFormatter = new DateFormatter('yyyy-MM-dd hh:mm:ss')\r\n","/**\r\n * 无限的超时时间\r\n * TODO 此处暂时使用字符串作为一种折衷方法，因为 Symbol 无法被序列化为 JSON，反向序列化也是不可能的\r\n */\r\nexport const TimeoutInfinite = Symbol('TimoutInfinite').toString()\r\n\r\n/**\r\n * 缓存选项\r\n */\r\nexport class CacheOption {\r\n  /**\r\n   * 构造函数\r\n   * @param {Object} options 缓存选项对象\r\n   * @param {Number|Symbol|String} [options.timeout] 超时时间，以毫秒为单位\r\n   * @param {Number} [options.timeStart] 缓存开始时间\r\n   * @param {Function} [options.serialize] 缓存序列化\r\n   * @param {Function} [options.deserialize] 缓存反序列化\r\n   */\r\n  constructor ({ timeout, timeStart, serialize, deserialize } = {}) {\r\n    /**\r\n     * @field 超时时间，以毫秒为单位\r\n     */\r\n    this.timeStart = timeStart\r\n    /**\r\n     * @field 缓存开始时间\r\n     */\r\n    this.timeout = timeout\r\n    /**\r\n     * @field 缓存序列化\r\n     */\r\n    this.serialize = serialize\r\n    /**\r\n     * @field 缓存反序列化\r\n     */\r\n    this.deserialize = deserialize\r\n  }\r\n}\r\n","import { flatMap } from '../array/flatMap'\r\nimport { isNullOrUndefined } from './isNullOrUndefined'\r\n\r\n/**\r\n * 合并多个对象的属性\r\n * 1. 该合并的方式为浅层合并，只会合并一层的对象\r\n * 2. 默认忽略值为 undefined/null 的属性\r\n * @param  {...Object} objects 任意数量的对象\r\n * @returns {Object} 合并后的对象\r\n */\r\nexport function assign (...objects) {\r\n  return flatMap(objects, object =>\r\n    isNullOrUndefined(object) ? [] : Object.entries(object)\r\n  ).reduce((res, [k, v]) => {\r\n    if (isNullOrUndefined(v)) {\r\n      return res\r\n    }\r\n    res[k] = v\r\n    return res\r\n  }, {})\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport { CacheOption, TimeoutInfinite } from './CacheOption'\r\nimport { assign } from '../obj/assign'\r\n\r\n/**\r\n * 缓存接口\r\n * 功能\r\n * 1. add 增加。如果不存在则添加，否则忽略\r\n * 2. del 删除。如果存在则删除，否则忽略\r\n * 3. set 修改。如果存在则设置，否则忽略\r\n * 4. get 根据 key 获取。如果存在则获取，否则忽略\r\n * 5. touch 根据 key 获取并刷新超时时间\r\n * 6. find 根据谓词查询 key\r\n * 7. list 根据谓词查询 key 获得列表\r\n *\r\n * @interface\r\n */\r\nexport class ICache {\r\n  /**\r\n   * 全局缓存选项\r\n   * @param {CacheOption} cacheOption 缓存选项\r\n   */\r\n  constructor (cacheOption) {\r\n    /**\r\n     * @field 缓存选项\r\n     */\r\n    this.cacheOption = assign(\r\n      new CacheOption({\r\n        timeout: TimeoutInfinite,\r\n        serialize: JSON.stringify,\r\n        deserialize: JSON.parse,\r\n      }),\r\n      cacheOption\r\n    )\r\n  }\r\n  /**\r\n   * 根据 key + value 添加\r\n   * 如果不存在则添加，否则忽略\r\n   * @param {String} key 缓存的 key\r\n   * @param {Object} val 缓存的 value\r\n   * @param {CacheOption} cacheOption 缓存的选项\r\n   * @abstract\r\n   */\r\n  add (key, val, cacheOption) {}\r\n  /**\r\n   * 根据指定的 key 删除\r\n   * 如果存在则删除，否则忽略\r\n   * @param {String} key 删除的 key\r\n   * @abstract\r\n   */\r\n  del (key) {}\r\n  /**\r\n   * 根据指定的 key 修改\r\n   * 不管是否存在都会设置\r\n   * @param {String} key 修改的 key\r\n   * @param {Object} val 修改的 value\r\n   * @param {CacheOption} cacheOption 修改的选项\r\n   * @abstract\r\n   */\r\n  set (key, val, cacheOption) {}\r\n  /**\r\n   * 根据 key 获取\r\n   * 如果存在则获取，否则忽略\r\n   * @param {String} key 指定的 key\r\n   * @param {CacheOption} cacheOption 获取的选项\r\n   * @returns {Object} 获取到的缓存值\r\n   * @abstract\r\n   */\r\n  get (key, cacheOption) {}\r\n  /**\r\n   * 根据 key 获取并刷新超时时间\r\n   * @param {String} key 指定的 key\r\n   * @param {CacheOption} cacheOption 获取的选项\r\n   * @returns {Object} 获取到的缓存值\r\n   * @abstract\r\n   */\r\n  touch (key, cacheOption) {}\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport { CacheOption } from './CacheOption'\r\n\r\n/**\r\n * 缓存的值\r\n */\r\nexport class CacheVal {\r\n  /**\r\n   * 构造函数\r\n   * @param {Object} options 缓存值对象\r\n   * @param {String} options.key 缓存的键原始值\r\n   * @param {Object} options.val 缓存的值\r\n   * @param {CacheOption} options.cacheOption 缓存的选项\r\n   */\r\n  constructor ({ key, val, cacheOption }) {\r\n    /**\r\n     * @field 缓存的键原始值\r\n     */\r\n    this.key = key\r\n    /**\r\n     * @field 缓存的值\r\n     */\r\n    this.val = val\r\n    /**\r\n     * @field 缓存的选项\r\n     */\r\n    this.cacheOption = cacheOption\r\n  }\r\n}\r\n","import { ICache } from './ICache'\r\nimport { CacheVal } from './CacheVal'\r\nimport { CacheOption, TimeoutInfinite } from './CacheOption'\r\nimport { assign } from '../obj/assign'\r\n\r\n/**\r\n * 使用 LocalStorage 实现的缓存\r\n */\r\nexport class LocalStorageCache extends ICache {\r\n  /**\r\n   * 构造函数\r\n   * @param {CacheOption} [cacheOption] 全局缓存选项\r\n   */\r\n  constructor (cacheOption) {\r\n    super(cacheOption)\r\n    /**\r\n     * 缓存对象，默认使用 localStorage\r\n     */\r\n    this.localStorage = window.localStorage\r\n  }\r\n  /**\r\n   * 根据 key + value 添加\r\n   * 如果不存在则添加，否则忽略\r\n   * @param {String} key 缓存的 key\r\n   * @param {Object} val 缓存的 value\r\n   * @param {CacheOption} [cacheOption] 缓存的选项，默认为无限时间\r\n   * @override\r\n   */\r\n  add (key, val, cacheOption) {\r\n    const result = this.get(\r\n      key,\r\n      assign({ timeStart: Date.now() }, cacheOption)\r\n    )\r\n    if (result !== null) {\r\n      return\r\n    }\r\n    this.set(key, val, cacheOption)\r\n  }\r\n  /**\r\n   * 根据指定的 key 删除\r\n   * 如果存在则删除，否则忽略\r\n   * @param {String} key 删除的 key\r\n   * @override\r\n   */\r\n  del (key) {\r\n    this.localStorage.removeItem(key)\r\n  }\r\n  /**\r\n   * 根据指定的 key 修改\r\n   * 不管是否存在都会设置\r\n   * @param {String} key 修改的 key\r\n   * @param {Object} val 修改的 value\r\n   * @param {CacheOption} [cacheOption] 修改的选项\r\n   * @override\r\n   */\r\n  set (key, val, cacheOption = new CacheOption()) {\r\n    const option = assign(\r\n      this.cacheOption,\r\n      { timeStart: Date.now() },\r\n      cacheOption\r\n    )\r\n    this.localStorage.setItem(\r\n      key,\r\n      JSON.stringify(\r\n        new CacheVal({\r\n          key,\r\n          val: option.serialize(val),\r\n          cacheOption: option,\r\n        })\r\n      )\r\n    )\r\n  }\r\n  /**\r\n   * 根据 key 获取\r\n   * 如果存在则获取，否则忽略\r\n   * @param {String} key 指定的 key\r\n   * @param {CacheOption} cacheOption 获取的选项\r\n   * @returns {Object} 获取到的缓存值\r\n   * @override\r\n   */\r\n  get (key, cacheOption = new CacheOption()) {\r\n    const str = this.localStorage.getItem(key)\r\n    const cacheVal = JSON.parse(str)\r\n    if (cacheVal === null) {\r\n      return null\r\n    }\r\n    const { timeStart, timeout, deserialize } = assign(\r\n      this.cacheOption,\r\n      cacheVal.cacheOption,\r\n      cacheOption\r\n    )\r\n    // 如果超时则删除并返回 null\r\n    if (timeout !== TimeoutInfinite && Date.now() - timeStart > timeout) {\r\n      this.del(key)\r\n      return null\r\n    }\r\n    try {\r\n      return deserialize(cacheVal.val)\r\n    } catch (e) {\r\n      this.del(key)\r\n      return null\r\n    }\r\n  }\r\n  /**\r\n   * 根据 key 获取并刷新超时时间\r\n   * @param {String} key 指定的 key\r\n   * @param {CacheOption} cacheOption 获取的选项\r\n   * @returns {Object} 获取到的缓存值\r\n   * @override\r\n   */\r\n  touch (key, cacheOption = new CacheOption()) {\r\n    const str = this.localStorage.getItem(key)\r\n    /**\r\n     * @type {CacheVal}\r\n     */\r\n    const cacheVal = JSON.parse(str)\r\n    if (cacheVal === null) {\r\n      return null\r\n    }\r\n    /**\r\n     * @type {CacheOption}\r\n     */\r\n    const option = assign(this.cacheOption, cacheVal.cacheOption, cacheOption)\r\n    const { timeStart, timeout, deserialize } = option\r\n    // 如果超时则删除并返回 null\r\n    if (timeout !== TimeoutInfinite && Date.now() - timeStart > timeout) {\r\n      this.del(key)\r\n      return null\r\n    }\r\n    try {\r\n      const result = deserialize(cacheVal.val)\r\n      this.set(key, result, assign(option, { timeStart: Date.now() }))\r\n      return result\r\n    } catch (e) {\r\n      this.del(key)\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import { LocalStorageCache } from './LocalStorageCache'\r\nimport { TimeoutInfinite, CacheOption } from './CacheOption'\r\n\r\n/**\r\n * 默认使用的 {@link ICache} 接口的缓存实现\r\n */\r\nconst cache = new LocalStorageCache()\r\n\r\n/**\r\n * 缓存工具类\r\n * 主要实现缓存高阶函数的封装\r\n */\r\nexport class CacheUtil {\r\n  /**\r\n   * 包裹函数为缓存函数\r\n   * @param {Function} fn 一个接受一些参数并返回结果的函数\r\n   * @param {Object} [options={}] 缓存选项对象。可选项\r\n   * @param {String|Number} [options.identity=fn.toString()] 缓存标识。默认为函数 {@link toString}，但有时候不太可行（继承自基类的函数）\r\n   * @param {Number|String} [options.timeout=TimeoutInfinite] 缓存时间。默认为无限\r\n   * @returns {Function|Object} 带有缓存功能的函数\r\n   */\r\n  onceOfSameParam (\r\n    fn,\r\n    { identity = fn.toString(), timeout = TimeoutInfinite } = {}\r\n  ) {\r\n    const generateKey = args =>\r\n      `onceOfSameParam-${identity}-${JSON.stringify(args)}`\r\n    const innerFn = function (...args) {\r\n      const key = generateKey(args)\r\n      const cacheOption = new CacheOption({ timeout })\r\n      const val = cache.get(key)\r\n      if (val !== null) {\r\n        return val\r\n      }\r\n      const result = fn.call(this, ...args)\r\n      if (result instanceof Promise) {\r\n        return result.then(res => {\r\n          cache.set(key, res, cacheOption)\r\n          return res\r\n        })\r\n      }\r\n      cache.set(key, result, cacheOption)\r\n      return result\r\n    }\r\n    /**\r\n     * 所包装的原函数\r\n     * @type {Function}\r\n     */\r\n    innerFn.origin = fn\r\n    /**\r\n     * 清空缓存，清空指定参数调用时的函数缓存\r\n     * @type {Function}\r\n     */\r\n    innerFn.clear = function (...args) {\r\n      const key = generateKey(args)\r\n      cache.del(key)\r\n    }\r\n    return innerFn\r\n  }\r\n}\r\n\r\n/**\r\n * 导出一个默认的缓存工具对象\r\n */\r\nexport const cacheUtil = new CacheUtil()\r\n","import { timing } from '../function/timing'\r\n\r\nexport const antiDebug = {\r\n  /**\r\n   * 不停循环 debugger 防止有人调试代码\r\n   */\r\n  cyclingDebugger () {\r\n    setInterval(() => {\r\n      // eslint-disable-next-line no-debugger\r\n      debugger\r\n    }, 100)\r\n  },\r\n\r\n  /**\r\n   * 检查是否正在 debugger 并调用回调函数\r\n   * @param {Function} fn 回调函数，默认为重载页面\r\n   */\r\n  checkDebug (fn = () => window.location.reload()) {\r\n    setInterval(() => {\r\n      const diff = timing(() => {\r\n        for (let i = 0; i < 1000; i++) {\r\n          console.log(i)\r\n          console.clear()\r\n        }\r\n      })\r\n      if (diff > 500) {\r\n        console.log(diff)\r\n        fn()\r\n      }\r\n    }, 1000)\r\n  },\r\n\r\n  /**\r\n   * 禁用控制台调试输出\r\n   */\r\n  disableConsoleOutput () {\r\n    if (!window.console) {\r\n      // @ts-ignore\r\n      window.console = {}\r\n    }\r\n    const methods = [\r\n      'log',\r\n      'debug',\r\n      'warn',\r\n      'info',\r\n      'dir',\r\n      'dirxml',\r\n      'trace',\r\n      'profile',\r\n    ]\r\n    methods.forEach(k => (console[k] = function () {}))\r\n  },\r\n}\r\n","/**\r\n * FormData 批量添加方法\r\n * 注：该方法不会覆盖掉原本的属性\r\n * @param {FormData} fd FormData 对象\r\n * @param {Object} obj 键值对对象\r\n * @returns {FormData} 添加完成后的 FormData 对象\r\n */\r\nexport function appends (fd, obj) {\r\n  for (const key in obj) {\r\n    fd.append(key, obj[key])\r\n  }\r\n  return fd\r\n}\r\n","import { blankToNull } from './../string/blankToNull'\r\n\r\n/**\r\n * 置空对象所有空白的属性\r\n *\r\n * @param {Object} obj 对象\r\n * @returns {Object} 将所有的空白属性全部转换为 null 的新对象\r\n */\r\nexport function blankToNullField (obj) {\r\n  const res = {}\r\n  for (const k in obj) {\r\n    const v = obj[k]\r\n    res[k] = typeof v === 'string' ? blankToNull(v) : v\r\n  }\r\n  return res\r\n}\r\n","import { curry } from './curry'\r\n\r\n/**\r\n * 连接两个函数并自动柯里化\r\n * @param {Function} fn1 第一个函数\r\n * @param {Function} fn2 第二个函数\r\n * @returns {Function} 连接后的函数\r\n */\r\nconst _compose = (fn1, fn2) => {\r\n  return function (...args) {\r\n    const res = curry(fn1, ...args)\r\n    // 如果这个函数的参数不足，则返回它\r\n    // @ts-ignore\r\n    if (res instanceof Function && res._curry === true) {\r\n      return _compose(res, fn2)\r\n    }\r\n    return curry(fn2, res)\r\n  }\r\n}\r\n\r\n/**\r\n * 将多个函数组合起来\r\n * 前面函数的返回值将变成后面函数的第一个参数，如果到了最后一个函数执行完成，则直接返回\r\n * 该函数是自动柯里化，将对所有传入的函数进行柯里化处理\r\n * @param  {...Function} fns 多个需要连接函数\r\n * @returns {Function} 连接后的柯里化函数\r\n */\r\nexport const compose = (...fns) =>\r\n  // TODO 反向连接就可以了?\r\n  fns.reduceRight((fn1, fn2) => _compose(fn2, fn1))\r\n","/**\r\n * 复制一段文本内容\r\n * @param {String} text 要进行复制的文本\r\n * @returns {Boolean} 是否复制成功\r\n */\r\nexport function copyText (text) {\r\n  const input = document.createElement('input')\r\n  document.body.appendChild(input)\r\n  input.setAttribute('value', text)\r\n  input.select()\r\n  const res = document.execCommand('copy')\r\n  document.body.removeChild(input)\r\n  return res\r\n}\r\n","/**\r\n * 根据 html 字符串创建 Element 元素\r\n * @param {String} str html 字符串\r\n * @returns {Element} 创建的 Element 元素\r\n */\r\nexport function createElByString (str) {\r\n  const root = document.createElement('div')\r\n  root.innerHTML = str\r\n  return root.querySelector('*')\r\n}\r\n","/**\r\n * 函数去抖\r\n * 去抖 (debounce) 去抖就是对于一定时间段的连续的函数调用，只让其执行一次\r\n * 注: 包装后的函数如果两次操作间隔小于 delay 则不会被执行, 如果一直在操作就会一直不执行, 直到操作停止的时间大于 delay 最小间隔时间才会执行一次, 不管任何时间调用都需要停止操作等待最小延迟时间\r\n * 应用场景主要在那些连续的操作, 例如页面滚动监听, 包装后的函数只会执行最后一次\r\n * 注: 该函数第一次调用一定不会执行，第一次一定拿不到缓存值，后面的连续调用都会拿到上一次的缓存值。如果需要在第一次调用获取到的缓存值，则需要传入第三个参数 {@link init}，默认为 {@link undefined} 的可选参数\r\n * @param {Number} delay 最小延迟时间，单位为 ms\r\n * @param {Function} action 真正需要执行的操作\r\n * @param {Object} [init=undefined] 初始的缓存值，不填默认为 {@link undefined}\r\n * @return {Function} 包装后有去抖功能的函数。该函数是异步的，与需要包装的函数 {@link action} 是否异步没有太大关联\r\n */\r\nexport const debounce = (delay, action, init = undefined) => {\r\n  let flag\r\n  let result = init\r\n  return function (...args) {\r\n    return new Promise(resolve => {\r\n      if (flag) clearTimeout(flag)\r\n      flag = setTimeout(() => {\r\n        result = action.call(this, ...args)\r\n        resolve(result)\r\n      }, delay)\r\n      setTimeout(() => {\r\n        resolve(result)\r\n      }, delay)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * 递归使对象不可变\r\n * @param {Object} obj 任何非空对象\r\n * @returns {Object} 新的不可变对象\r\n */\r\nexport function deepFreeze (obj) {\r\n  if (obj === undefined || obj === null) {\r\n    return\r\n  }\r\n  // 数组和对象分别处理\r\n  if (obj instanceof Array) {\r\n    obj.forEach(v => {\r\n      if (typeof v === 'object') {\r\n        deepFreeze(v)\r\n      }\r\n    })\r\n  } else if (obj instanceof Object) {\r\n    Object.values(obj).forEach(v => {\r\n      if (typeof v === 'object') {\r\n        deepFreeze(v)\r\n      }\r\n    })\r\n  }\r\n  return Object.freeze(obj)\r\n}\r\n","/**\r\n * 包装对象，使其成为可以任意深度调用而不会出现 undefined 调用的问题\r\n * 注意: 该函数不能进行递归调用（{@link JSON.stringfy}），一定会造成堆栈溢出的问题（RangeError: Maximum call stack size exceeded）\r\n * @param {Object} object 任意一个 Object 对象\r\n * @returns {Object} 包装后的对象\r\n */\r\nexport function deepProxy (object) {\r\n  const handler = {\r\n    get (target, k) {\r\n      Reflect.set(\r\n        target,\r\n        k,\r\n        Reflect.has(target, k) ? Reflect.get(target, k) : {}\r\n      )\r\n      const v = Reflect.get(target, k)\r\n      if (typeof v === 'object') {\r\n        return new Proxy(v, handler)\r\n      }\r\n      return v\r\n    },\r\n  }\r\n  return new Proxy(object, handler)\r\n}\r\n","/**\r\n * FormData 批量删除方法\r\n * @param {FormData} fd FormData 对象\r\n * @param {Array} keys  删除的 key 列表\r\n * @returns {FormData} 返回删除后的 FormData 对象\r\n */\r\nexport function deletes (fd, keys) {\r\n  keys.forEach(key => fd.delete(key))\r\n  return fd\r\n}\r\n","/**\r\n * 将对象的所有属性置空\r\n * @param {Object} obj 需要置空属性的对象\r\n * @returns {Object} 返回一个新的对象\r\n */\r\nexport function emptyAllField (obj) {\r\n  const res = {}\r\n  for (const k in obj) {\r\n    res[k] = null\r\n  }\r\n  return res\r\n}\r\n","import { excludeFields } from './excludeFields'\r\n\r\n/**\r\n * 递归排除对象中的指定字段\r\n * @param {Object} object 需要排除的对象\r\n * @param  {...Object} fields 需要排除的字段\r\n */\r\nexport function excludeFieldsDeep (object, ...fields) {\r\n  const res =\r\n    object instanceof Array ? object : excludeFields(object, ...fields)\r\n  for (const k in res) {\r\n    if (res.hasOwnProperty(k)) {\r\n      const v = res[k]\r\n      if (v instanceof Object) {\r\n        object[k] = excludeFieldsDeep(v, ...fields)\r\n      }\r\n    }\r\n  }\r\n  return res\r\n}\r\n","import { returnItself } from './../function/returnItself'\r\n\r\n/**\r\n * 从数组中移除指定的元素\r\n * 注: 时间复杂度为 1~3On\r\n * @param {Array} arr 需要被过滤的数组\r\n * @param {Array} deleteItems 要过滤的元素数组\r\n * @param {Function} [kFn=returnItself] 每个元素的唯一键函数\r\n */\r\nexport function filterItems (arr, deleteItems, kFn = returnItself) {\r\n  // @ts-ignore\r\n  const kSet = new Set(deleteItems.map(kFn))\r\n  return arr.filter(v => !kSet.has(kFn(v)))\r\n}\r\n","import { asIterator } from './../array/asIterator'\r\n\r\n/**\r\n * FormData 转换为包含所有键值数组的二维数组函数\r\n *\r\n * @param {FormData} fd 需要转换的 FormData 对象\r\n * @returns {Array} 转换后的数组\r\n * @deprecated 已被原生函数 Array.from 取代\r\n */\r\nexport function formDataToArray (fd) {\r\n  // @ts-ignore\r\n  return asIterator(fd.entries())\r\n}\r\n","/**\r\n * 字符串格式化\r\n *\r\n * @param {String} str 要进行格式化的值\r\n * @param {Object} args 格式化参数值，替换字符串中的 {} 的值\r\n * @returns {String} 替换完成的字符串\r\n * @deprecated 已废弃，请使用 ES6 模板字符串 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings\r\n */\r\nexport function format (str, args) {\r\n  if (!args) {\r\n    return str\r\n  }\r\n  return Object.keys(args).reduce(\r\n    (res, k) => res.replace(new RegExp(`{${k}}`, 'g'), args[k]),\r\n    str\r\n  )\r\n}\r\n","/**\r\n * 获取 cookie 键值映射 Map\r\n * @returns {Map.<String,String>} cookie 键值映射 Map\r\n */\r\nexport function getCookies () {\r\n  return document.cookie\r\n    .split(';')\r\n    .map(str => str.split('='))\r\n    .map(arr => [arr[0].trim(), arr[1].trim()])\r\n    .reduce((res, [k, v]) => res.set(k, v), new Map())\r\n}\r\n","/**\r\n * 获取一年内的第多少星期\r\n * @deprecated 不推荐使用，请使用 {@link dateEnhance} 代替\r\n * @returns {Number}\r\n */\r\nexport function getYearWeek (date) {\r\n  /*\r\n    date1是当前日期\r\n    date2是当年第一天\r\n    d是当前日期是今年第多少天\r\n    用d + 当前年的第一天的周差距的和在除以7就是本年第几周\r\n    */\r\n  const nowTime = date.getTime()\r\n  const startTime = new Date(date.getFullYear(), 0, 1).getTime()\r\n  const difTime = nowTime - startTime\r\n  return Math.floor(difTime / (24 * 3600 * 1000) / 7)\r\n}\r\n","import { getCusorPostion } from './getCusorPostion'\r\nimport { setCusorPostion } from './setCusorPostion'\r\n\r\n/**\r\n * 在指定位置后插入文本\r\n * @param {HTMLFormElement} el 需要设置的输入框元素\r\n * @param {String} text 要插入的值\r\n * @param {Number} [start] 开始位置，默认为当前光标处\r\n */\r\nexport function insertText (el, text, start = getCusorPostion(el)) {\r\n  const value = el.value\r\n  el.value = value.substr(0, start) + text + value.substr(start)\r\n  setCusorPostion(el, start + text.length)\r\n}\r\n","import { isEmpty } from './isEmpty'\r\n\r\n/**\r\n * 判断一个字符串是否为空白的字符串\r\n * @param {String} str 字符串\r\n * @returns {Boolean} 是否为空字符串\r\n */\r\nexport function isBlank (str) {\r\n  return isEmpty(str) || str.trim() === ''\r\n}\r\n","import { toLowerCase } from '../string/toLowerCase'\r\n/**\r\n * 判断指定元素是否是可编辑元素\r\n * 注：可编辑元素并不一定能够进行编辑，例如只读的 input 元素\r\n * @param {Element} el 需要进行判断的元素\r\n * @returns {Boolean} 是否为可编辑元素\r\n */\r\nexport function isEditable (el) {\r\n  const inputEls = ['input', 'date', 'datetime', 'select', 'textarea']\r\n  return (\r\n    // 此处需要判断是否存在属性 isContentEditable\r\n    // @ts-ignore\r\n    el && (el.isContentEditable || inputEls.includes(toLowerCase(el.tagName)))\r\n  )\r\n}\r\n","/**\r\n * 将 map 转换为 Object 对象\r\n * @param {Map} map map 键值表\r\n * @returns {Object} 转换得到的 Object 对象\r\n */\r\nexport function mapToObject (map) {\r\n  const res = {}\r\n  // @ts-ignore\r\n  for (let [k, v] of map) {\r\n    res[k] = v\r\n  }\r\n  return res\r\n}\r\n","/**\r\n * 将参数对象转换为 FormData，只转换一层\r\n * @param data 参数对象\r\n * @return {FormData} 转换后的表单对象\r\n */\r\nexport function objToFormData (data) {\r\n  const fd = new FormData()\r\n  if (data) {\r\n    for (const k in data) {\r\n      if (data.hasOwnProperty(k)) {\r\n        const v = data[k]\r\n        fd.append(k, v)\r\n      }\r\n    }\r\n  }\r\n  return fd\r\n}\r\n","/**\r\n * 生成一个随机的数字\r\n * 如果没有参数，则会抛出异常\r\n * @param {Array.<Number>} args 参数列表，如果只有一个参数，则认为是最大值，最小值为 0。否则认为第一个是最小值，第二个是最大值，忽略剩余的参数\r\n * @returns {Number} 生成的随机整数\r\n */\r\nexport function randomInt (...args) {\r\n  let min\r\n  let max\r\n  if (args.length === 0) {\r\n    throw new Error('非法参数，必须指定最大值')\r\n  } else if (args.length === 1) {\r\n    min = 0\r\n    max = args[0]\r\n  } else if (args.length > 1) {\r\n    min = args[0]\r\n    max = args[1]\r\n  }\r\n  return min + Math.floor(Math.random() * (max - min))\r\n}\r\n","/**\r\n * 创建一个等差数列数组\r\n * @param {Number} start 开始（包含）\r\n * @param {Number} end 结束（不包含）\r\n * @param {Number} [sep] 步长，默认为 1\r\n * @returns {Array.<Number>} 等差数列数组\r\n */\r\nexport function range (start, end, sep = 1) {\r\n  const arr = []\r\n  for (let i = start; i < end; i += sep) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n","/**\r\n * 直接删除指定元素\r\n * @param {Element} el 需要删除的元素\r\n * @returns {Element} 返回被删除的元素\r\n */\r\nexport function removeEl (el) {\r\n  const parent = el.parentElement\r\n  return parent.removeChild(el)\r\n}\r\n","import { getCusorPostion } from './getCusorPostion'\r\nimport { setCusorPostion } from './setCusorPostion'\r\n\r\n/**\r\n * 在指定范围内删除文本\r\n * @param {HTMLFormElement} el 需要设置的输入框元素\r\n * @param {Number} [start] 开始位置，默认为当前选中开始位置\r\n * @param {Number} [end] 结束位置，默认为当前选中结束位置\r\n */\r\nexport function removeText (\r\n  el,\r\n  start = el.selectionStart,\r\n  end = el.selectionEnd\r\n) {\r\n  // 删除之前必须要 [记住] 当前光标的位置\r\n  const index = getCusorPostion(el)\r\n  const value = el.value\r\n  el.value = value.substr(0, start) + value.substr(end, value.length)\r\n  setCusorPostion(el, index)\r\n}\r\n","/**\r\n * 返回合理参数本身的函数\r\n * 1. 如果没有参数则返回 undefined\r\n * 2. 如果只有一个参数则返回参数本身\r\n * 3. 如果有两个以上的参数则返回参数列表\r\n * @param {...Object} args 任何对象\r\n * @returns {undefined|Object|Array.<Object>} 传入的参数\r\n */\r\nexport function returnReasonableItself (...args) {\r\n  const len = args.length\r\n  if (len === 0) {\r\n    return\r\n  }\r\n  if (len === 1) {\r\n    return args[0]\r\n  }\r\n  return args\r\n}\r\n","/**\r\n * FormData 批量设置方法\r\n * 注：该方法会覆盖掉原本的属性\r\n * @param {FormData} fd 表单对象\r\n * @param {Object} obj 键值对对象\r\n * @returns {FormData} 设置完成后的 FormData 对象\r\n */\r\nexport function sets (fd, obj) {\r\n  for (const k in obj) {\r\n    fd.set(k, obj[k])\r\n  }\r\n  return fd\r\n}\r\n","import { groupBy } from './groupBy'\r\nimport { returnItself } from '../function/returnItself'\r\n\r\n/**\r\n * 快速根据指定函数对数组进行排序\r\n * 注: 使用递归实现，对于超大数组（其实前端的数组不可能特别大吧？#笑）可能造成堆栈溢出\r\n * @param {Array} arr 需要排序的数组\r\n * @param {Function} [kFn=returnItself] 对数组中每个元素都产生可比较的值的函数，默认返回自身进行比较\r\n * @returns {Array} 排序后的新数组\r\n */\r\nexport function sortBy (arr, kFn = returnItself) {\r\n  // 边界条件，如果传入数组的值\r\n  if (arr.length <= 1) {\r\n    return arr\r\n  }\r\n  // 根据中间值对数组分治为两个数组\r\n  const medianIndex = Math.floor(arr.length / 2)\r\n  const newArr = arr.slice()\r\n  const median = newArr.splice(medianIndex, 1)[0]\r\n  const medianValue = kFn(median)\r\n  const map = groupBy(newArr, item => kFn(item) < medianValue)\r\n  // 对两个数组分别进行排序\r\n  return [\r\n    ...sortBy(map.get(true) || [], kFn),\r\n    median,\r\n    ...sortBy(map.get(false) || [], kFn),\r\n  ]\r\n}\r\n","/**\r\n * 将字符串转为字符流\r\n *\r\n * @param {String} str 字符串\r\n * @returns {ArrayBuffer} 字符流对象\r\n */\r\nexport function strToArrayBuffer (str) {\r\n  const buf = new ArrayBuffer(str.length)\r\n  const view = new Uint8Array(buf)\r\n  for (let i = 0; i !== str.length; ++i) {\r\n    view[i] = str.charCodeAt(i) & 0xff\r\n  }\r\n  return buf\r\n}\r\n","import { dateParse } from './dateParse'\r\n\r\n/**\r\n * 解析字符串为 Date 对象\r\n * @deprecated 已弃用，请使用可读性更好的 {@link dateParse} 代替\r\n * @param {String} dateStr 日期字符串\r\n * @param {String} fmt 日期字符串的格式\r\n * 目前仅支持使用 y(年),M(月),d(日),h(时),m(分),s(秒),S(毫秒)\r\n * @returns {Date} 解析得到的 Date 对象\r\n */\r\nexport function strToDate (dateStr, fmt) {\r\n  return dateParse(dateStr, fmt)\r\n}\r\n","/**\r\n * 函数节流\r\n * 节流 (throttle) 让一个函数不要执行的太频繁，减少执行过快的调用，叫节流\r\n * 类似于上面而又不同于上面的函数去抖, 包装后函数在上一次操作执行过去了最小间隔时间后会直接执行, 否则会忽略该次操作\r\n * 与上面函数去抖的明显区别在连续操作时会按照最小间隔时间循环执行操作, 而非仅执行最后一次操作\r\n * 注: 该函数第一次调用一定会执行，不需要担心第一次拿不到缓存值，后面的连续调用都会拿到上一次的缓存值\r\n *\r\n * @param {Number} delay 最小间隔时间，单位为 ms\r\n * @param {Function} action 真正需要执行的操作\r\n * @return {Function} 包装后有节流功能的函数。该函数是异步的，与需要包装的函数 {@link action} 是否异步没有太大关联\r\n */\r\nexport const throttle = (delay, action) => {\r\n  let last = 0\r\n  let result\r\n  return function (...args) {\r\n    return new Promise(resolve => {\r\n      const curr = Date.now()\r\n      if (curr - last > delay) {\r\n        result = action.call(this, ...args)\r\n        last = curr\r\n        resolve(result)\r\n        return\r\n      }\r\n      resolve(result)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * 将数组转化为一个 Object 对象\r\n * @deprecated 已废弃，请使用更好的 @override arrayToMap 替代\r\n * @param {Array.<Object>} arr 需要进行转换的数组\r\n * @param {Function} kFn 生成对象属性名的函数\r\n * @param {Function} [vFn] 生成对象属性值的函数，默认为数组中的迭代元素\r\n * @returns {Object} 转化得到的对象\r\n */\r\nexport function toObject (arr, kFn, vFn = item => item) {\r\n  return arr.reduce((res, item) => {\r\n    if (!res.hasOwnProperty(kFn(item))) {\r\n      res[kFn(item)] = vFn(item)\r\n    }\r\n    return res\r\n  }, {})\r\n}\r\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\r\n\r\n/**\r\n * 将任意对象转换为 String\r\n * 主要避免原生 Object toString 遇到某些空值的时候抛异常的问题\r\n * @param {Object} object 任意对象\r\n * @returns {String} 字符串\r\n */\r\nexport const toString = object => {\r\n  if (isNullOrUndefined(object)) {\r\n    return ''\r\n  }\r\n  if (object instanceof Date) {\r\n    return object.toISOString()\r\n  }\r\n  return object.toString()\r\n}\r\n","/**\r\n * 字符串安全的转换为大写\r\n * @param {String} str 字符串\r\n * @returns {String} 转换后得到的全大写字符串\r\n */\r\nexport function toUpperCase (str) {\r\n  if (!str || typeof str !== 'string') {\r\n    return str\r\n  }\r\n  return str.toUpperCase()\r\n}\r\n","/**\r\n * js 的数组去重方法\r\n * @param {Array.<Object>} arr 要进行去重的数组\r\n * @param {Function} [fn=item => JSON.stringify(item)] 唯一标识元素的方法，默认使用 {@link JSON.stringify()}\r\n * @returns {Array.<Object>} 进行去重操作之后得到的新的数组 (原数组并未改变)\r\n */\r\nexport function uniqueBy (arr, fn = item => JSON.stringify(item)) {\r\n  const obj = {}\r\n  return arr.filter(item =>\r\n    obj.hasOwnProperty(fn(item)) ? false : (obj[fn(item)] = true)\r\n  )\r\n}\r\n","/**\r\n * 轮询等待指定资源加载完毕再执行操作\r\n * 使用 Promises 实现，可以使用 ES7 的 {@async}/{@await} 调用\r\n * @param {Function} fn 判断必须的资源是否存在的方法\r\n * @param {Object} option 可配置项\r\n * @param {Number} [option.interval=100] 轮询间隔\r\n * @param {Number} [option.max=10] 最大轮询次数\r\n * @returns Promise 对象\r\n */\r\nexport const waitResource = (fn, { interval = 100, max = 10 } = {}) => {\r\n  let current = 0\r\n  return new Promise((resolve, reject) => {\r\n    const timer = setInterval(() => {\r\n      if (fn()) {\r\n        clearInterval(timer)\r\n        resolve()\r\n      }\r\n      current++\r\n      if (current >= max) {\r\n        clearInterval(timer)\r\n        reject(new Error('等待超时'))\r\n      }\r\n    }, interval)\r\n  })\r\n}\r\n","import { safeExec } from './safeExec'\r\n\r\n/**\r\n * 监视指定函数返回值的变化\r\n * @param {Function} fn 需要监视的函数\r\n * @param {Function} callback 回调函数\r\n * @param {Number} [interval=100] 每次检查的间隔时间，默认为 100ms\r\n * @returns {Function} 关闭这个监视函数\r\n */\r\nexport const watch = (fn, callback, interval = 100) => {\r\n  let oldVal = safeExec(fn)\r\n  const timer = setInterval(() => {\r\n    const newVal = safeExec(fn)\r\n    if (oldVal !== newVal) {\r\n      callback(newVal, oldVal)\r\n      oldVal = newVal\r\n    }\r\n  }, interval)\r\n  return () => clearInterval(timer)\r\n}\r\n","/**\r\n * 监听 event 的添加\r\n * 注：必须及早添加\r\n */\r\nexport function watchEventListener () {\r\n  /**\r\n   * 监听所有的 addEventListener, removeEventListener 事件\r\n   */\r\n  const documentAddEventListener = document.addEventListener\r\n  const eventTargetAddEventListener = EventTarget.prototype.addEventListener\r\n  const documentRemoveEventListener = document.removeEventListener\r\n  const eventTargetRemoveEventListener =\r\n    EventTarget.prototype.removeEventListener\r\n  const events = []\r\n\r\n  /**\r\n   * 用来保存监听到的事件信息\r\n   */\r\n  class Event {\r\n    constructor (el, type, listener, useCapture) {\r\n      this.el = el\r\n      this.type = type\r\n      this.listener = listener\r\n      this.useCapture = useCapture\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 自定义的添加事件监听函数\r\n   * @param {String} type 事件类型\r\n   * @param {EventListener} listener 事件监听函数\r\n   * @param {Boolean} [useCapture=true] 是否需要捕获事件冒泡，默认为 false\r\n   */\r\n  function addEventListener (type, listener, useCapture = false) {\r\n    const _this = this\r\n    const $addEventListener =\r\n      _this === document\r\n        ? documentAddEventListener\r\n        : eventTargetAddEventListener\r\n    events.push(new Event(_this, type, listener, useCapture))\r\n    $addEventListener.apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * 自定义的根据类型删除事件函数\r\n   * 该方法会删除这个类型下面全部的监听函数，不管数量\r\n   * @param {String} type 事件类型\r\n   */\r\n  // @ts-ignore\r\n  function removeEventListenerByType (type) {\r\n    const _this = this\r\n    const $removeEventListener =\r\n      _this === document\r\n        ? documentRemoveEventListener\r\n        : eventTargetRemoveEventListener\r\n    const removeIndexArr = events\r\n      .map((e, i) => (e.el === _this || e.type === arguments[0] ? i : -1))\r\n      .filter(i => i !== -1)\r\n    removeIndexArr.forEach(i => {\r\n      const e = events[i]\r\n      $removeEventListener.apply(e.el, [e.type, e.listener, e.useCapture])\r\n    })\r\n    removeIndexArr.sort((a, b) => b - a).forEach(i => events.splice(i, 1))\r\n  }\r\n\r\n  (function initWatchDOM () {\r\n    document.addEventListener = EventTarget.prototype.addEventListener = addEventListener\r\n    // 此处是为了新增函数 removeEventListenerByType\r\n    // @ts-ignore\r\n    document.removeEventListenerByType = EventTarget.prototype.removeEventListenerByType = removeEventListenerByType\r\n  })()\r\n}\r\n","/**\r\n * 定义监听对象时的回调函数 doc\r\n * @callback WatchObjectCallback\r\n * @param {Object} target 代理的对象变化后的值\r\n * @param {String} k 变化的属性名\r\n * @param {Object} v 变化的属性值\r\n */\r\n\r\n/**\r\n * 深度监听指定对象属性的变化\r\n * 注：指定对象不能是原始类型，即不可变类型，而且对象本身的引用不能改变，最好使用 const 进行声明\r\n * @param {Object} object 需要监视的对象\r\n * @param {WatchObjectCallback} callback 当代理对象发生改变时的回调函数，回调函数有三个参数，分别是\r\n * @returns {Object} 返回源对象的一个代理\r\n */\r\nexport function watchObject (object, callback) {\r\n  const handler = {\r\n    get (target, property, receiver) {\r\n      try {\r\n        return new Proxy(target[property], handler)\r\n      } catch (err) {\r\n        return Reflect.get(target, property, receiver)\r\n      }\r\n    },\r\n    set (target, key, value, receiver) {\r\n      callback(target, key, value)\r\n      return Reflect.set(target, key, value, receiver)\r\n    },\r\n  }\r\n  return new Proxy(object, handler)\r\n}\r\n"],"names":["download","blob","filename","eleLink","document","createElement","style","display","href","URL","createObjectURL","body","appendChild","click","removeChild","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","context","state","protoGenerator","Generator","generator","create","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","str","Blob","url","substr","lastIndexOf","fetch","res","console","log","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","arrayWithHoles","iterableToArrayLimit","nonIterableRest","dom","init","src","window","instance","Constructor","UrlObject","website","protocol","domain","accessPath","params","port","protocol2Port","http","https","ssh","ftp","readLocal","file","DataURL","encoding","fr","FileReader","onload","event","target","onerror","dateFormat","date","fmt","o","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","RegExp","test","replace","$1","lens","Text","BinaryString","ArrayBuffer","deteFormatter","encode","v","encodeURIComponent","fetchTimeout","fetchPromise","timeout","abortFn","abortPromise","abortablePromise","race","setTimeout","arr2","from","arrayWithoutHoles","iterableToArray","nonIterableSpread","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","wait","param","timer","setInterval","clearInterval","FetchLimiting","limit","execCount","waitArr","_innerFetch","_this","shift","asIterator","concat","flatMap","reduce","item","groupBy","kFn","vFn","has","set","get","Map","arrayToMap","array","fill","len","lastFocusEl","DateFormat","format","index","dateFormats","year","month","day","hour","minute","second","millieSecond","dateParse","defaultDateValues","Date","dateUnits","fmtName","regExp","matchStr","exec","regexStr","indexOf","filter","sort","a","b","map","matchDateUnit","getCusorPostion","el","selectionStart","setCusorPostion","start","end","focus","setSelectionRange","toLowerCase","addEventListener","returnItself","safeExec","defaultVal","_typeof2","_typeof","ReferenceError","assertThisInitialized","_getPrototypeOf","_setPrototypeOf","p","subClass","superClass","singleModel","clazz","_construct","Parent","Class","Reflect","construct","sham","Proxy","e","isNativeReflectConstruct","bind","StateMachine","classMap","timing","thisArg","begin","performance","now","proxyFn","regexp","blankToNull","trim","excludeFields","fields","Set","entries","dateConstants","isRange","num","min","max","DateEnhance","ceil","getTime","yearStart","getDay","dayOfYear","dayOfMonth","DateBetween","milliSecond","once","cache","flag","onceOfSameParam","paramConverter","JSON","stringify","cacheMap","old","ArrayDiff","left","right","common","autoIncrementGenerator","IConverter","list","CamelOrPascalFrom","c","substring","CamelConverter","s","toUpperCase","join","PascalConverter","SnakeOrScreamingSnakeFrom","split","SnakeConverter","ScreamingSnakeConverter","stringStyleType","Camel","Pascal","Snake","ScreamingSnake","ConverterFactory","styleType","StringStyleConverter","to","fromConverter","getInstance","toConverter","_getConverter","StringStyleUtil","getConverter","convert","curry","realArgs","_","otherArgs","removeIndexSet","newArgs","add","newOtherArgs","_v","_curry","isNullOrUndefined","isEmpty","DateFormatter","parseFmt","dateFormatter","timeFormatter","dateTimeFormatter","TimeoutInfinite","CacheOption","timeStart","serialize","deserialize","assign","objects","ICache","cacheOption","parse","val","CacheVal","LocalStorageCache","localStorage","removeItem","option","setItem","getItem","cacheVal","del","cacheUtil","identity","generateKey","origin","clear","antiDebug","cyclingDebugger","checkDebug","location","reload","diff","disableConsoleOutput","fd","append","thanArr","thatArr","kThanSet","kThatSet","kLeftSet","fns","reduceRight","fn1","fn2","_compose","text","input","setAttribute","select","execCommand","root","innerHTML","querySelector","delay","action","clearTimeout","deepFreeze","freeze","handler","delete","excludeFieldsDeep","deleteItems","kSet","cookie","difTime","isContentEditable","includes","tagName","data","FormData","temps","temp","markIndex","endsWith","decodeURIComponent","vs","random","sep","parentElement","selectionEnd","sortBy","medianIndex","newArr","median","splice","medianValue","buf","view","Uint8Array","charCodeAt","dateStr","last","curr","toISOString","interval","current","callback","oldVal","newVal","documentAddEventListener","eventTargetAddEventListener","EventTarget","documentRemoveEventListener","removeEventListener","eventTargetRemoveEventListener","events","Event","listener","useCapture","$addEventListener","removeEventListenerByType","$removeEventListener","removeIndexArr","property","receiver"],"mappings":"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"}
{"version":3,"file":"rx-util.cjs.development.js","sources":["../src/ajax/download.ts","../src/ajax/strToBlob.ts","../src/ajax/downloadString.ts","../src/ajax/downloadUrl.ts","../src/ajax/getCookies.ts","../src/ajax/loadResource.ts","../src/ajax/parseUrl.ts","../src/ajax/readLocal.ts","../src/date/dateFormat.ts","../src/ajax/spliceParams.ts","../src/async/wait.ts","../src/ajax/fetchTimeout.ts","../src/ajax/strToArrayBuffer.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/ajax/FetchLimiting.ts","../src/array/asIterator.ts","../src/obj/isNullOrUndefined.ts","../src/function/returnItself.ts","../src/async/compatibleAsync.ts","../src/function/CombinedPredicate.ts","../src/array/AsyncArray.ts","../src/array/asyncFlatMap.ts","../src/number/isRange.ts","../src/string/StringValidator.ts","../src/obj/TypeValidator.ts","../src/function/safeExec.ts","../src/function/extractField.ts","../src/array/getKFn.ts","../src/array/flatMap.ts","../src/array/groupBy.ts","../src/array/range.ts","../src/array/toObject.ts","../src/array/uniqueBy.ts","../src/array/arrayToMap.ts","../src/date/dateParse.ts","../src/date/strToDate.ts","../src/dom/copyText.ts","../src/dom/createElByString.ts","../src/dom/getCursorPosition.ts","../src/dom/getCusorPostion.ts","../src/dom/setCursorPosition.ts","../src/dom/insertText.ts","../src/string/toLowerCase.ts","../src/dom/isEditable.ts","../src/dom/lastFocus.ts","../src/dom/removeEl.ts","../src/dom/removeText.ts","../src/dom/setCusorPostion.ts","../src/event/watchEventListener.ts","../src/string/toString.ts","../src/formdata/appends.ts","../src/formdata/deletes.ts","../src/formdata/sets.ts","../src/formdata/formDataToArray.ts","../src/formdata/objToFormData.ts","../src/async/debounce.ts","../src/function/singleModel.ts","../src/function/StateMachine.ts","../src/async/throttle.ts","../src/function/timing.ts","../src/async/waitResource.ts","../src/function/watch.ts","../src/function/watchObject.ts","../src/string/fill.ts","../src/string/format.ts","../src/string/isFloat.ts","../src/string/isNumber.ts","../src/string/toUpperCase.ts","../src/string/blankToNull.ts","../src/obj/blankToNullField.ts","../src/obj/emptyAllField.ts","../src/obj/excludeFields.ts","../src/obj/mapToObject.ts","../src/number/randomInt.ts","../src/date/DateConstants.ts","../src/date/dateEnhance.ts","../src/date/getYearWeek.ts","../src/date/dateBetween.ts","../src/function/returnReasonableItself.ts","../src/array/filterItems.ts","../src/array/diffBy.ts","../src/array/arrayDiffBy.ts","../src/number/autoIncrement.ts","../src/string/StringConverter/IConverter.ts","../src/string/StringConverter/CamelOrPascalFrom.ts","../src/string/StringConverter/CamelConverter.ts","../src/string/StringConverter/PascalConverter.ts","../src/string/StringConverter/SnakeOrScreamingSnakeFrom.ts","../src/string/StringConverter/SnakeConverter.ts","../src/string/StringConverter/ScreamingSnakeConverter.ts","../src/string/StringConverter/StringStyleType.ts","../src/string/StringConverter/ConverterFactory.ts","../src/string/StringConverter/StringStyleConverter.ts","../src/cache/MemoryCache.ts","../src/function/onceOfSameParam.ts","../src/string/StringConverter.ts","../src/obj/deepFreeze.ts","../src/obj/deepProxy.ts","../src/function/curry.ts","../src/array/sortBy.ts","../src/date/DateFormatter.ts","../src/array/findIndex.ts","../src/function/compose.ts","../src/obj/deepExcludeFields.ts","../src/obj/excludeFieldsDeep.ts","../src/cache/CacheVal.ts","../src/cache/ICacheOption.ts","../src/cache/LocalStorageCache.ts","../src/cache/CacheUtil.ts","../src/function/emptyFunc.ts","../src/hack/AntiDebug.ts","../src/string/isBlank.ts","../src/string/isEmpty.ts","../src/ajax/loadScript.ts","../src/function/deny.ts","../src/array/ArrayValidator.ts","../src/string/PathUtil.ts","../src/hack/logger.ts","../src/obj/objectToMap.ts","../src/tree/listToTree.ts","../src/function/bridge.ts","../src/tree/treeMapping.ts","../src/tree/treeToList.ts","../src/tree/NodeBridgeUtil.ts","../src/obj/getObjectEntries.ts","../src/obj/getObjectKeys.ts","../src/number/floatEquals.ts","../src/obj/assign.ts","../src/obj/aggregation.ts","../src/async/asyncLimiting.ts","../src/async/Locker.ts","../src/function/trySometime.ts","../src/function/trySometimeParallel.ts","../src/obj/compare.ts","../src/function/sleep.ts","../src/async/async.ts","../src/async/mergeMap.ts","../src/async/switchMap.ts","../src/function/once.ts","../src/async/concatMap.ts","../src/function/repeatedCall.ts","../src/function/PubSubMachine.ts","../src/array/extractFieldMap.ts","../src/array/segmentation.ts","../src/dom/toggleClass.ts","../src/function/partial.ts","../src/event/EventUtil.ts","../src/ajax/loadStyle.ts","../src/date/Stopwatch.ts","../src/hack/remindLeavePage.ts","../src/event/EventEmitter.ts","../src/async/MicrotaskQueue.ts","../src/string/randomStr.ts","../src/idea/parseFieldStr.ts","../src/obj/get.ts","../src/obj/set.ts","../src/dom/getSelectText.ts","../src/dom/imageSize.ts","../src/dom/getMousePos.ts","../src/function/batch.ts","../src/obj/pick.ts","../src/cache/proxyStorage.ts"],"sourcesContent":["/**\n * 在浏览器上下载二进制资源\n * @param blob 要下载的二进制资源\n * @param filename 文件名\n */\nexport function download(blob: Blob, filename = 'unknown') {\n  // 创建隐藏的可下载链接\n  const eleLink = document.createElement('a')\n  eleLink.download = filename\n  eleLink.style.display = 'none'\n  // 为 link 赋值\n  eleLink.href = URL.createObjectURL(blob)\n  // 触发点击\n  document.body.appendChild(eleLink)\n  eleLink.click()\n  // 然后移除\n  document.body.removeChild(eleLink)\n}\n","/**\n * 将字符串转化为 Blob 类型\n * @param str 字符串\n * @returns Blob 数据\n */\nexport function strToBlob(str: string): Blob {\n  return new Blob([str], {\n    type: 'text/plain',\n  })\n}\n","import { download } from './download'\nimport { strToBlob } from './strToBlob'\n\n/**\n * 在浏览器上下载文本内容\n * @param str 字符串内容\n * @param filename 下载文件名，没有则默认为链接中的文件名\n */\nexport async function downloadString(str: string, filename = 'unknown.txt') {\n  download(strToBlob(str), filename)\n}\n","/**\n * 根据 url 下载二进制资源\n * @param url 下载请求信息\n * @param filename 下载文件名，没有则默认为链接中的文件名\n */\nexport async function downloadUrl(\n  url: string,\n  filename: string = url.substr(url.lastIndexOf('/')),\n) {\n  // 创建隐藏的可下载链接\n  const eleLink = document.createElement('a')\n  eleLink.download = filename\n  eleLink.style.display = 'none'\n  // 为 link 赋值\n  eleLink.href = url\n  // 触发点击\n  document.body.appendChild(eleLink)\n  eleLink.click()\n  // 然后移除\n  document.body.removeChild(eleLink)\n}\n","/**\n * 获取 cookie 键值映射 Map\n * @returns cookie 键值映射 Map\n */\nexport function getCookies() {\n  return document.cookie.split(';').reduce((res, str) => {\n    const [k, v] = str.split('=')\n    res.set(k, v)\n    return res\n  }, new Map())\n}\n","/**\n * 将 url 中的内容加载到元素上\n * 注：domSelector 必须有 src 属性用以将加载完成的资源赋值给其，加载默认是异步的\n * @param url url 资源\n * @param dom dom 元素\n * @param init 初始化参数, 实为 fetch() 的参数以及一些自定义的参数，默认 {}\n * 关于 fetch 具体可以参考 <https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch>\n */\nexport async function loadResource(\n  url: RequestInfo,\n  dom:\n    | HTMLImageElement\n    | HTMLAudioElement\n    | HTMLVideoElement\n    | HTMLTrackElement\n    | HTMLScriptElement,\n  init: RequestInit = {},\n) {\n  const res = await fetch(url, init)\n  const blob = await res.blob()\n  // 生成一个本地的 url 并赋值给 src 属性\n  dom.src = window.URL.createObjectURL(blob)\n}\n","/**\n * Url 对象\n */\ninterface IUrlObject {\n  /**\n   * href 不包含网站域名的链接\n   */\n  href: string\n  /**\n   * website URL 站点\n   */\n  website: string\n  /**\n   * protocol 协议\n   */\n  protocol: string\n  /**\n   * domain 域名\n   */\n  domain: string\n  /**\n   * accessPath 绝对路径,不包含参数\n   */\n  accessPath: string\n  /**\n   * params 参数列表,\n   */\n  params: Map<string, string | string[]>\n  /**\n   * url 原 url 链接\n   */\n  url: string\n  /**\n   * port 端口号\n   */\n  port: number\n}\n\n/**\n * 协议与默认端口映射表\n */\nconst protocolPortMap = new Map()\n  .set('http', 80)\n  .set('https', 443)\n  .set('ssh', 22)\n  .set('ftp', 21)\n\n/**\n * 解析 url 字符串\n * @param url url 字符串，不能为空\n * @returns url 对象\n * @deprecated 请使用原生 API URL 类，可以通过 new URL(url) 将 URL 字符串转换为 URL 对象，并获取指定的信息\n */\nexport function parseUrl(url: string): IUrlObject | null {\n  if (!url) {\n    throw new Error('Url cannot be empty')\n  }\n\n  const regexp = new RegExp('^((\\\\w+)://([\\\\w\\\\.]*)(:(\\\\d+))?)(.*)')\n  const temps = regexp.exec(url)\n  if (temps === null) {\n    return null\n  }\n  const website = temps[1]\n  const protocol = temps[2]\n  const domain = temps[3]\n  const portStr = temps[5]\n  const href = temps[6]\n\n  // 截取域名之后的内容\n  const temp = url.substr(website.length)\n  const markIndex = temp.indexOf('?')\n  // 如果没有携带参数则直接返回\n  if (markIndex === -1) {\n    const accessPath = temp\n    return {\n      url,\n      website,\n      protocol,\n      domain,\n      // tslint:disable-next-line:radix\n      port: parseInt(portStr),\n      href,\n      accessPath,\n      params: new Map<string, string>(),\n    }\n  }\n  let accessPath = temp.substr(0, markIndex)\n  if (accessPath.endsWith('/')) {\n    accessPath = accessPath.substring(0, accessPath.length - 1)\n  }\n  const port = portStr || protocolPortMap.get(protocol) || 0\n  // 解析参数列表\n  const params = temp\n    .substr(markIndex + 1)\n    .split('&')\n    .map(str => str.split('='))\n    .filter(arr => arr[0] !== '')\n    .reduce((params, arr: string[]) => {\n      const k = decodeURIComponent(arr[0])\n      const v = decodeURIComponent(arr.length === 1 ? '' : arr[1])\n      // 如果已经存在了就认为是数组参数\n      const vs = params.get(k)\n      if (vs === undefined) {\n        params.set(k, v)\n      } else {\n        if (!Array.isArray(vs)) {\n          params.set(k, [vs])\n        }\n        if ((params.get(k) as string[]).length !== undefined) {\n          ;(params.get(k) as string[]).push(v)\n        }\n      }\n      return params\n    }, new Map<string, string | string[]>())\n  return {\n    url,\n    website,\n    protocol,\n    domain,\n    port,\n    href,\n    accessPath,\n    params,\n  }\n}\n","/**\n * 读取文件类型\n */\nenum ReadType {\n  /**\n   * 以 data url 读取\n   */\n  DataURL = 'readAsDataURL',\n  /**\n   * 以文本读取\n   */\n  Text = 'readAsText',\n  /**\n   * 以二进制文件读取\n   */\n  BinaryString = 'readAsBinaryString',\n  /**\n   * 以 ArrayBuffer 读取\n   */\n  ArrayBuffer = 'readAsArrayBuffer',\n}\n\ntype ReadResult<T extends ReadType> = T extends ReadType.DataURL | ReadType.Text\n  ? string\n  : ArrayBuffer\n\n/**\n * 读取本地浏览器选择的文件\n * @param file 选择的文件\n * @param options 读取的选项\n * @returns 返回了读取到的内容（异步）\n */\nexport function _readLocal<T extends ReadType>(\n  file: File,\n  options: Partial<{\n    type: T\n    encoding: string\n  }> = {},\n): Promise<ReadResult<T> | null> {\n  const { type, encoding } = Object.assign(\n    {\n      type: ReadType.DataURL,\n      encoding: 'UTF-8',\n    },\n    options,\n  )\n  return new Promise((resolve, reject) => {\n    if (!file) {\n      reject(new Error('file not exists'))\n    }\n    const fr = new FileReader()\n    fr.onload = () => {\n      resolve(fr.result as ReadResult<T>)\n    }\n    fr.onerror = error => {\n      reject(error)\n    }\n    switch (type) {\n      case ReadType.DataURL:\n        fr.readAsDataURL(file)\n        break\n      case ReadType.Text:\n        fr.readAsText(file, encoding)\n        break\n      case ReadType.BinaryString:\n        fr.readAsBinaryString(file)\n        break\n      case ReadType.ArrayBuffer:\n        fr.readAsArrayBuffer(file)\n        break\n    }\n  })\n}\n\nexport const readLocal = Object.assign(_readLocal, {\n  ReadType,\n  /**\n   * 以 data url 读取\n   * @deprecated 已废弃，请使用枚举类 ReadType\n   */\n  DataURL: ReadType.DataURL,\n  /**\n   * 以文本读取\n   * @deprecated 已废弃，请使用枚举类 ReadType\n   */\n  Text: ReadType.Text,\n  /**\n   * 以二进制文件读取\n   * @deprecated 已废弃，请使用枚举类 ReadType\n   */\n  BinaryString: ReadType.BinaryString,\n  /**\n   * 以 ArrayBuffer 读取\n   * @deprecated 已废弃，请使用枚举类 ReadType\n   */\n  ArrayBuffer: ReadType.ArrayBuffer,\n})\n","/**\n * 为 js 中的 Date 对象原型添加 format 格式化方法\n * @param date 要进行格式化的日期\n * @param fmt 日期的格式，格式 {@code '[Y+|y+][M+][D+|d+][H+|h+][m+][s+][S+][q+]'}\n * @returns 格式化得到的结果\n */\nexport function dateFormat(date: Date, fmt: string): string {\n  const timeFormatDefaults = {\n    'Y+|y+': date.getFullYear(),\n    'M+': date.getMonth() + 1, // 月份\n    'D+|d+': date.getDate(), // 日\n    'H+|h+': date.getHours(), // 小时\n    'm+': date.getMinutes(), // 分\n    's+': date.getSeconds(), // 秒\n    'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\n    'S+': date.getMilliseconds(), // 毫秒\n  }\n  for (const k in timeFormatDefaults) {\n    if (!new RegExp('(' + k + ')').test(fmt)) {\n      continue\n    }\n    if (k === 'Y+|y+') {\n      fmt = fmt.replace(\n        RegExp.$1,\n        ('' + timeFormatDefaults[k]).substr(4 - RegExp.$1.length),\n      )\n    } else if (k === 'S+') {\n      let lens = RegExp.$1.length\n      lens = lens === 1 ? 3 : lens\n      fmt = fmt.replace(\n        RegExp.$1,\n        ('00' + timeFormatDefaults[k]).substr(\n          ('' + timeFormatDefaults[k]).length - 1,\n          lens,\n        ),\n      )\n    } else {\n      const v = Reflect.get(timeFormatDefaults, k)\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? v : ('00' + v).substr(('' + v).length),\n      )\n    }\n  }\n  return fmt\n}\n","import { dateFormat } from '../date/dateFormat'\n\n/**\n * 默认的日期格式\n * 不加 Z 为本地日期时间，避免出现时区的问题\n */\nconst dateFormatter = 'yyyy-MM-ddThh:mm:ss.SSS'\n/**\n * 将参数 key 与 value 进行 url 编码\n * @param k 参数的名字\n * @param v 参数的值\n * @returns 编码后的字符串\n */\nconst encode = (k: string, v: string) =>\n  encodeURIComponent(k) + '=' + encodeURIComponent(v)\n\n/**\n * 拼接参数字符串\n * @param params 参数对象\n * @returns 拼接后的字符串\n */\nexport function spliceParams(params: object = {}): string {\n  return Array.from(Object.entries(params)).reduce((res, [k, v]) => {\n    if (v === undefined || v === null) {\n      return res\n    } else if (v instanceof Date) {\n      res += encode(k, dateFormat(v, dateFormatter))\n    } else if (v instanceof Array) {\n      res += v\n        .map(item =>\n          encode(\n            k,\n            item instanceof Date ? dateFormat(item, dateFormatter) : item,\n          ),\n        )\n        .join('&')\n    } else {\n      res += encode(k, v)\n    }\n    return (res += '&')\n  }, '')\n}\n","import { ReturnFunc } from '../interface/ReturnFunc'\n\n/**\n * 等待指定的时间/等待指定表达式成立\n * 如果未指定等待条件则立刻执行\n * 注: 此实现在 nodejs 10- 会存在宏任务与微任务的问题，切记 async-await 本质上还是 Promise 的语法糖，实际上并非真正的同步函数！！！即便在浏览器，也不要依赖于这种特性。\n * @param param 等待时间/等待条件\n * @returns Promise 对象\n */\nexport function wait(param?: number | ReturnFunc<boolean>): Promise<void> {\n  return new Promise(resolve => {\n    if (typeof param === 'number') {\n      setTimeout(resolve, param)\n    } else if (typeof param === 'function') {\n      const timer = setInterval(() => {\n        if (param()) {\n          clearInterval(timer)\n          resolve()\n        }\n      }, 100)\n    } else {\n      resolve()\n    }\n  })\n}\n","import { wait } from '../async/wait'\n\n/**\n * 为 fetch 请求添加超时选项\n * 注：超时选项并非真正意义上的超时即取消请求，请求依旧正常执行完成，但会提前返回 reject 结果\n * @param fetchPromise fetch 请求的 Promise\n * @param timeout 超时时间\n * @returns 如果超时就提前返回 reject, 否则正常返回 fetch 结果\n */\nexport function fetchTimeout<R>(\n  fetchPromise: Promise<R>,\n  timeout: number,\n): Promise<R> {\n  return Promise.race([\n    fetchPromise,\n    wait(timeout).then(() => {\n      throw new Error('timeout')\n    }),\n  ])\n}\n","/**\n * 将字符串转为字符流\n * @param str 字符串\n * @returns 字符流对象\n */\nexport function strToArrayBuffer(str: string): ArrayBuffer {\n  const buf = new ArrayBuffer(str.length)\n  const view = new Uint8Array(buf)\n  for (let i = 0; i < str.length; ++i) {\n    view[i] = str.charCodeAt(i) & 0xff\n  }\n  return buf\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { wait } from '../async/wait'\nimport { fetchTimeout } from './fetchTimeout'\n\n/**\n * Fetch 对象参数接口\n */\ninterface IFetchLimitingOptions {\n  timeout: number\n  limit: number\n}\n\n/**\n * 限制并发请求数量的 fetch 封装\n * @class FetchLimiting\n * @example\n * const fetchLimiting = new FetchLimiting()\n * fetchLimiting._fetch('/')\n *   .then(res => res.json())\n *   .then(json => console.log(json))\n * @deprecated 已废弃，请使用 {@link asyncLimiting} 函数\n */\nexport class FetchLimiting {\n  private timeout: number\n  private limit: number\n  private execCount: number\n  private waitArr: Array<[RequestInfo, RequestInit | undefined]>\n  /**\n   * 构造函数\n   * @param option 可选配置项\n   * @param option.timeout 超时毫秒数\n   * @param option.limit 最大并发数限制\n   */\n  constructor({\n    timeout = 10000,\n    limit = 10,\n  }: Partial<IFetchLimitingOptions> = {}) {\n    /**\n     * @field timeout 超时毫秒数\n     */\n    this.timeout = timeout\n    /**\n     * @field limit 最大并发数限制\n     */\n    this.limit = limit\n    /**\n     * @field execCount 当前正在执行异步的数量\n     */\n    this.execCount = 0\n    /**\n     * @field waitArr 等待的队列\n     * @type {Array.<IArguments>}\n     */\n    this.waitArr = []\n  }\n\n  /**\n   * 执行一个请求\n   * 如果到达最大并发限制时就进行等待\n   * @param input\n   * @param init 请求的其他可选项，默认为 undefined\n   * @returns 如果超时就提前返回 reject, 否则正常返回 fetch 结果\n   */\n  public async fetch(\n    input: RequestInfo,\n    init?: RequestInit,\n  ): Promise<Response> {\n    const _innerFetch = async () => {\n      this.execCount++\n      const args = this.waitArr.shift()\n      try {\n        // 这里的 args 实际上就是 arguments 对象，即上面的 url 和 init\n        return await fetchTimeout(fetch(args![0], args![1]), this.timeout)\n      } finally {\n        this.execCount--\n      }\n    }\n    this.waitArr.push([input, init])\n    await wait(() => this.execCount < this.limit)\n    // 尝试启动等待队列\n    return _innerFetch()\n  }\n}\n","/**\n * 将一个 Iterator 迭代器转换为一个 Array\n * @param iterator Iterator 迭代器\n * @return Iterator 中每一项元素转换而得到的 Array\n * @deprecated 已废弃，请使用 ES6 原生函数 {@see Array.from} 替代\n */\nexport function asIterator<T>(iterator: Iterator<T>): T[] {\n  const arr = []\n  while (true) {\n    const next = iterator.next()\n    if (next.done) {\n      break\n    }\n    arr.push(next.value)\n  }\n  return arr\n}\n","/**\n * 判断一个对象是否是无效的\n * 无效的值仅包含 null/undefined\n * @param object 任何一个对象\n * @returns 是否无效的值\n */\nexport function isNullOrUndefined(object: any): object is null | undefined {\n  return object === undefined || object === null\n}\n","/**\n * 返回第一个参数的函数\n * 注: 一般可以当作返回参数自身的函数，如果你只关注第一个参数的话\n * @param obj 任何对象\n * @typeparam T 传入参数的类型\n * @typeparam R 返回结果的类型，默认为 T，只是为了兼容该函数当参数被传递时可能出现需要类型不一致的问题\n * @returns 传入的第一个参数\n */\nexport function returnItself<T, R = T>(obj: T): R {\n  return obj as any\n}\n","/**\n * 兼容异步函数的返回值\n * @param res 返回值\n * @param callback 同步/异步结果的回调函数\n * @typeparam T 处理参数的类型，如果是 Promise 类型，则取出其泛型类型\n * @typeparam Param 处理参数具体的类型，如果是 Promise 类型，则指定为原类型\n * @typeparam R 返回值具体的类型，如果是 Promise 类型，则指定为 Promise 类型，否则为原类型\n * @returns 处理后的结果，如果是同步的，则返回结果是同步的，否则为异步的\n */\nexport function compatibleAsync<T = any, Param = T | Promise<T>, R = T>(\n  res: Param,\n  callback: (r: T) => R,\n): Param extends Promise<T> ? Promise<R> : R {\n  return (res instanceof Promise\n    ? res.then(callback)\n    : callback(res as any)) as any\n}\n","import { ReturnFunc } from '../interface/ReturnFunc'\nimport { compatibleAsync } from '../async/compatibleAsync'\n\n/**\n * 谓词的返回值，支持异步函数\n */\ntype PredicateReturn = boolean | Promise<boolean>\n/**\n * 谓词函数的类型\n */\ntype PredicateFunc = ReturnFunc<PredicateReturn>\n\n/**\n * 内部使用的函数\n * 注: 如果谓词中包含任意一个异步(返回 Promise)函数,则整个返回结果将变成异步的,否则默认为同步操作.\n * @param fns 谓词数组\n * @param args 谓词应用的参数列表\n * @param condition 临界条件\n * @returns 返回结果\n */\nfunction _inner(\n  fns: PredicateFunc[],\n  args: any[],\n  condition: (res: boolean) => boolean,\n): PredicateReturn {\n  const fn = fns[0]\n  const res = fn!(...args)\n  function _call(res: boolean): PredicateReturn {\n    if (condition(res)) {\n      return res\n    }\n    const others = fns.slice(1)\n    if (others.length === 0) {\n      return res\n    }\n    return _inner(others, args, condition)\n  }\n  return compatibleAsync(res, _call) as any\n}\n\n/**\n * 连接谓词函数\n */\nexport class CombinedPredicate {\n  /**\n   * 使用 && 进行连接\n   * @param fns 连接任意多个谓词\n   * @returns 连接后的新谓词\n   */\n  public static and(...fns: PredicateFunc[]) {\n    return function(...args: any[]) {\n      return _inner(fns, args, res => !res)\n    }\n  }\n  /**\n   * 使用 || 进行连接\n   * @param fns 连接任意多个谓词\n   * @returns 连接后的新谓词\n   */\n  public static or(...fns: PredicateFunc[]) {\n    return function(...args: any[]) {\n      return _inner(fns, args, res => res)\n    }\n  }\n  /**\n   * 对谓词进行取反\n   * @param fn 谓词\n   * @returns 取反后的谓词\n   */\n  public static not(fn: PredicateFunc) {\n    return new Proxy(fn, {\n      apply(_, _this, args) {\n        return compatibleAsync(Reflect.apply(_, this, args), res => !res)\n      },\n    })\n  }\n}\n\nexport const and = CombinedPredicate.and\nexport const or = CombinedPredicate.or\nexport const not = CombinedPredicate.not\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\nimport { returnItself } from '../function/returnItself'\nimport { CombinedPredicate } from '../function/CombinedPredicate'\n\n/**\n * 操作类型\n */\nenum ActionType {\n  forEach = 'forEach',\n  filter = 'filter',\n  map = 'map',\n  flatMap = 'flatMap',\n  sort = 'sort',\n  reduce = 'reduce',\n  reduceRight = 'reduceRight',\n  findIndex = 'findIndex',\n  find = 'find',\n  every = 'every',\n  some = 'some',\n  parallel = 'parallel',\n  serial = 'serial',\n}\n/**\n * 保存高阶函数传入的异步操作\n * @field 异步操作的类型\n * @field 异步操作\n */\nclass Action {\n  public static Type = ActionType\n  constructor(public readonly type: ActionType, public readonly args: any[]) {\n    this.type = type\n    this.args = args\n  }\n}\n\n/**\n * 异步的 reduce 回调函数类型\n */\ntype AsyncArrayReduceCallback<T, R, IArray> = (\n  res: R,\n  item: T,\n  index: number,\n  arr: IArray,\n) => Promise<R>\n/**\n * 异步的数组一般迭代类型\n */\ntype AsyncArrayCallback<T, R, IArray> = (\n  item: T,\n  index: number,\n  arr: IArray,\n) => Promise<R>\n\n/**\n * 抽象异步数组，实现了一些公共的函数\n */\nabstract class InnerBaseAsyncArray<T> {\n  /**\n   * 内部的数组\n   */\n  protected _arr: T[]\n  /**\n   * 构造函数\n   * @param args 数组初始元素\n   */\n  constructor(args: T[] = []) {\n    this._arr = args\n  }\n  /**\n   * 异步的 forEach\n   * @param fn 异步迭代函数\n   */\n  public abstract async forEach(\n    fn: AsyncArrayCallback<T, void, any>,\n  ): Promise<void>\n  /**\n   * 异步的 filter\n   * @param fn 异步过滤函数\n   * @returns 过滤后的新数组\n   */\n  public abstract async filter(\n    fn: AsyncArrayCallback<T, boolean, any>,\n  ): Promise<any>\n  /**\n   * 异步的 map\n   * @param fn 异步映射函数\n   * @returns 经过映射产生的新的异步数组\n   */\n  public abstract async map<R>(fn: AsyncArrayCallback<T, R, any>): Promise<any>\n  /**\n   * 异步的 flatMap\n   * @param fn 异步映射函数，产生一个新的数组\n   * @returns 压平一层的数组\n   */\n  public abstract async flatMap<R>(\n    fn: AsyncArrayCallback<T, R[], any>,\n  ): Promise<any>\n  /**\n   * 将整个数组排序\n   * @param fn 比较函数\n   * @returns 排序后的数组\n   */\n  public async sort(\n    fn?: (t1: T, t2: T) => Promise<number>,\n  ): Promise<InnerAsyncArray<T>> {\n    if (fn === undefined) {\n      return new InnerAsyncArray(this._arr.sort())\n    }\n    // TODO 此处为了让 type-doc 能生成文档而不得不加上类型\n    const arr: Array<[T, number]> = this._arr.map(\n      (v, i) => [v, i] as [T, number],\n    )\n    async function _sort<V>(\n      arr: V[],\n      fn: (v1: V, v2: V) => Promise<number>,\n    ): Promise<V[]> {\n      // 边界条件，如果传入数组的值\n      if (arr.length <= 1) {\n        return arr\n      }\n      // 根据中间值对数组分治为两个数组\n      const medianIndex = Math.floor(arr.length / 2)\n      const medianValue = arr[medianIndex]\n      const left = []\n      const right = []\n      for (let i = 0, len = arr.length; i < len; i++) {\n        if (i === medianIndex) {\n          continue\n        }\n        const v = arr[i]\n        if ((await fn(v, medianValue)) <= 0) {\n          left.push(v)\n        } else {\n          right.push(v)\n        }\n      }\n      return (await _sort(left, fn))\n        .concat([medianValue])\n        .concat(await _sort(right, fn))\n    }\n    return new InnerAsyncArray<T>(\n      await (await _sort(arr, ([t1], [t2]) => fn(t1, t2))).map(\n        ([_v, i]) => this._arr[i],\n      ),\n    )\n  }\n  /**\n   * 异步的 reduce\n   * @param fn 归纳函数\n   * @param res 初始值，默认为第一个元素\n   * @returns 归纳后的值\n   */\n  public abstract async reduce<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, any>,\n    res?: R,\n  ): Promise<R>\n  /**\n   * 异步的 reduceRight\n   * @param fn 归纳函数\n   * @param res 初始值，默认为最后一个元素\n   * @returns 归纳后的值\n   */\n  public abstract async reduceRight<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, any>,\n    res?: R,\n  ): Promise<R>\n  /**\n   * 异步 findIndex\n   * @param fn 异步查询函数\n   * @returns 查询到的第一个值的下标\n   */\n  public abstract async findIndex(\n    fn: AsyncArrayCallback<T, boolean, any>,\n  ): Promise<number>\n  /**\n   * 异步的 find\n   * @param fn 异步查询函数\n   * @returns 查询到的第一个值\n   */\n  public async find(\n    fn: AsyncArrayCallback<T, boolean, any>,\n  ): Promise<T | null> {\n    const i = await this.findIndex(fn)\n    return i === -1 ? null : this._arr[i]\n  }\n  /**\n   * 异步的 every\n   * @param fn 异步匹配函数\n   * @returns 是否全部匹配\n   */\n  public async every(\n    fn: AsyncArrayCallback<T, boolean, any>,\n  ): Promise<boolean> {\n    return (await this.findIndex(CombinedPredicate.not(fn) as any)) === -1\n  }\n  /**\n   * 异步的 some\n   * @param fn 异步匹配函数\n   * @returns 是否有任意一个匹配\n   */\n  public async some(fn: AsyncArrayCallback<T, boolean, any>): Promise<boolean> {\n    return (await this.findIndex(fn)) !== -1\n  }\n  /**\n   * 转换为并发异步数组\n   */\n  public parallel(): any {\n    return new InnerAsyncArrayParallel(this._arr)\n  }\n  /**\n   * 转换为顺序异步数组\n   */\n  public serial(): any {\n    return new InnerAsyncArray(this._arr)\n  }\n  /**\n   * 获取内部数组的值，将返回一个浅复制的数组\n   */\n  public value(): T[] {\n    return this._arr.slice()\n  }\n}\n\n/**\n * 串行的异步数组\n */\nclass InnerAsyncArray<T> extends InnerBaseAsyncArray<T> {\n  public async forEach(\n    fn: AsyncArrayCallback<T, void, InnerAsyncArray<T>>,\n  ): Promise<void> {\n    for (let i = 0, len = this._arr.length; i < len; i++) {\n      await fn.call(this, this._arr[i], i, this)\n    }\n  }\n  public async filter(\n    fn: AsyncArrayCallback<T, boolean, InnerAsyncArray<T>>,\n  ): Promise<InnerAsyncArray<T>> {\n    const res = new InnerAsyncArray<T>()\n    for (let i = 0, len = this._arr.length; i < len; i++) {\n      if (await fn.call(this, this._arr[i], i, this)) {\n        res._arr.push(this._arr[i])\n      }\n    }\n    return res\n  }\n  public async map<R>(\n    fn: AsyncArrayCallback<T, R, InnerAsyncArray<T>>,\n  ): Promise<InnerAsyncArray<R>> {\n    const res = new InnerAsyncArray<R>()\n    for (let i = 0, len = this._arr.length; i < len; i++) {\n      res._arr.push(await fn.call(this, this._arr[i], i, this))\n    }\n    return res\n  }\n  public async flatMap<R>(\n    fn: AsyncArrayCallback<T, R[], InnerAsyncArray<T>>,\n  ): Promise<InnerAsyncArray<R>> {\n    const res = new InnerAsyncArray<R>()\n    for (let i = 0, len = this._arr.length; i < len; i++) {\n      res._arr.push(...(await fn.call(this, this._arr[i], i, this)))\n    }\n    return res\n  }\n  public async reduce<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, InnerAsyncArray<T>>,\n    res?: R,\n  ): Promise<R> {\n    for (let i = 0, len = this._arr.length; i < len; i++) {\n      if (res) {\n        res = await fn.call(this, res, this._arr[i], i, this)\n      } else {\n        res = this._arr[i] as any\n      }\n    }\n    return res as any\n  }\n  public async reduceRight<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, InnerAsyncArray<T>>,\n    res?: R,\n  ): Promise<R> {\n    for (let i = this._arr.length - 1; i >= 0; i--) {\n      if (res) {\n        res = await fn.apply(this, [res, this._arr[i], i, this])\n      } else {\n        res = this._arr[i] as any\n      }\n    }\n    return res as any\n  }\n  public async findIndex(\n    fn: AsyncArrayCallback<T, boolean, InnerAsyncArray<T>>,\n  ): Promise<number> {\n    for (let i = 0, len = this._arr.length; i < len; i++) {\n      const res = await fn.call(this, this._arr[i], i, this)\n      if (res) {\n        return i\n      }\n    }\n    return -1\n  }\n}\n\n/**\n * 并发的异步数组\n */\nclass InnerAsyncArrayParallel<T> extends InnerBaseAsyncArray<T> {\n  public async forEach(\n    fn: AsyncArrayCallback<T, void, InnerAsyncArrayParallel<T>>,\n  ): Promise<void> {\n    await this._all(fn)\n  }\n  public async filter(\n    fn: AsyncArrayCallback<T, boolean, InnerAsyncArrayParallel<T>>,\n  ): Promise<InnerAsyncArrayParallel<T>> {\n    const res = await this._all(fn)\n    const result = new InnerAsyncArrayParallel<T>()\n    for (let i = 0, len = res.length; i < len; i++) {\n      if (res[i]) {\n        result._arr.push(this._arr[i])\n      }\n    }\n    return result\n  }\n  public async map<R>(\n    fn: AsyncArrayCallback<T, R, InnerAsyncArrayParallel<T>>,\n  ): Promise<InnerAsyncArrayParallel<R>> {\n    return new InnerAsyncArrayParallel(await this._all(fn))\n  }\n  public async flatMap<R>(\n    fn: AsyncArrayCallback<T, R[], InnerAsyncArrayParallel<T>>,\n  ): Promise<InnerAsyncArrayParallel<R>> {\n    const res = await this._all(fn)\n    return new InnerAsyncArrayParallel(res.flat())\n  }\n  public sort(\n    fn: (t1: T, t2: T) => Promise<number>,\n  ): Promise<InnerAsyncArray<T>> {\n    throw new Error('Method not implemented.')\n  }\n  public async reduce<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, InnerAsyncArrayParallel<T>>,\n    res?: R,\n  ): Promise<R> {\n    for (let i = 0, len = this._arr.length; i < len; i++) {\n      if (res) {\n        res = await fn.call(this, res, this._arr[i], i, this)\n      } else {\n        res = this._arr[i] as any\n      }\n    }\n    return res as any\n  }\n  public async reduceRight<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, InnerAsyncArrayParallel<T>>,\n    res?: R,\n  ): Promise<R> {\n    for (let i = this._arr.length - 1; i >= 0; i--) {\n      if (res) {\n        res = await fn.apply(this, [res, this._arr[i], i, this])\n      } else {\n        res = this._arr[i] as any\n      }\n    }\n    return res as any\n  }\n  public async findIndex(\n    fn: AsyncArrayCallback<T, boolean, InnerAsyncArrayParallel<T>>,\n  ): Promise<number> {\n    return (await this._all(fn)).findIndex(returnItself)\n  }\n  private async _all<R>(\n    fn: AsyncArrayCallback<T, R, InnerAsyncArrayParallel<T>>,\n  ): Promise<R[]> {\n    return await Promise.all(\n      this._arr.map((v, i) => fn.apply(this, [v, i, this])),\n    )\n  }\n}\n/**\n * 异步数组\n */\nexport class AsyncArray<T> implements PromiseLike<any> {\n  /**\n   * 为内置数组赋值\n   * 此处自动重新计算 length 属性\n   */\n  public set _arr(arr: T[]) {\n    this.__arr = arr\n    this.length = this.__arr.length\n  }\n  public get _arr() {\n    return this.__arr\n  }\n  /**\n   * 提供一个函数方便根据已有的数组或类数组（Set/Map）创建 {@link AsyncArray}\n   * @param arr 一个可迭代元素\n   * @returns 创建一个新的异步数组包装\n   */\n  public static from<T>(\n    arr: Iterable<T> | ArrayLike<T> | null | undefined,\n  ): AsyncArray<T> {\n    const result = new AsyncArray<T>()\n    if (isNullOrUndefined(arr)) {\n      return result\n    }\n    result._arr = Array.from(arr)\n    return result\n  }\n  /**\n   * 内部数组的长度，用于让 {@link AsyncArray} 的实例能作为 {@link Array.from} 的参数\n   */\n  public length = 0\n  /**\n   * 内部的数组\n   */\n  private __arr!: T[]\n  /**\n   * 保存的任务数组\n   */\n  private _tasks: Action[]\n  /**\n   * 构造函数\n   * @param args 任意个参数\n   */\n  constructor(...args: T[]) {\n    this._arr = Array.from(args)\n    /**\n     * @field 保存异步任务\n     * @type {Action[]}\n     */\n    this._tasks = []\n  }\n  public filter(\n    fn: AsyncArrayCallback<\n      T,\n      boolean,\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): AsyncArray<T> {\n    return this._addTask(new Action(Action.Type.filter, [fn]))\n  }\n  public map<R>(\n    fn: AsyncArrayCallback<\n      T,\n      R,\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): AsyncArray<R> {\n    return this._addTask(new Action(Action.Type.map, [fn])) as any\n  }\n  public flatMap<R>(\n    fn: AsyncArrayCallback<\n      T,\n      R[],\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): AsyncArray<R> {\n    return this._addTask(new Action(Action.Type.flatMap, [fn])) as any\n  }\n  public sort(fn?: (a: T, b: T) => number): AsyncArray<T> {\n    return this._addTask(new Action(Action.Type.sort, [fn]))\n  }\n  public parallel(): AsyncArray<T> {\n    return this._addTask(new Action(Action.Type.parallel, []))\n  }\n  public serial(): AsyncArray<T> {\n    return this._addTask(new Action(Action.Type.serial, []))\n  }\n  public forEach(\n    fn: AsyncArrayCallback<\n      T,\n      void,\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): Promise<void> {\n    return this._addTask(new Action(Action.Type.forEach, [fn])).then()\n  }\n  public some(\n    fn: AsyncArrayCallback<\n      T,\n      boolean,\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): Promise<boolean> {\n    return this._addTask(new Action(Action.Type.some, [fn])).then()\n  }\n  public every(\n    fn: AsyncArrayCallback<\n      T,\n      boolean,\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): Promise<boolean> {\n    return this._addTask(new Action(Action.Type.every, [fn])).then()\n  }\n  public find(\n    fn: AsyncArrayCallback<\n      T,\n      boolean,\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): Promise<T | null> {\n    return this._addTask(new Action(Action.Type.find, [fn])).then()\n  }\n  public findIndex(\n    fn: AsyncArrayCallback<\n      T,\n      boolean,\n      InnerAsyncArray<T> | InnerAsyncArrayParallel<T>\n    >,\n  ): Promise<number> {\n    return this._addTask(new Action(Action.Type.findIndex, [fn])).then()\n  }\n  public reduce<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, InnerAsyncArray<T>>,\n    res?: R,\n  ): Promise<R> {\n    return this._addTask(new Action(Action.Type.reduce, [fn, res])).then()\n  }\n  public reduceRight<R = T>(\n    fn: AsyncArrayReduceCallback<T, R, InnerAsyncArray<T>>,\n    res?: R,\n  ): Promise<R> {\n    return this._addTask(new Action(Action.Type.reduceRight, [fn, res])).then()\n  }\n  /**\n   * 终结整个链式操作并返回结果，可以使用 await 等待当前实例开始计算\n   */\n  public async then<TResult1 = any, TResult2 = never>(\n    onfulfilled?:\n      | ((value: any) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | undefined\n      | null,\n  ): Promise<any> {\n    try {\n      let asyncArray = new InnerAsyncArray(this._arr)\n      let result: any = this._arr\n      for (const task of this._tasks) {\n        asyncArray = await Reflect.apply(\n          Reflect.get(asyncArray, task.type),\n          asyncArray,\n          task.args,\n        )\n        if (asyncArray instanceof InnerBaseAsyncArray) {\n          result = asyncArray.value()\n        } else {\n          if (!isNullOrUndefined(onfulfilled)) {\n            onfulfilled(result)\n          }\n          return asyncArray\n        }\n      }\n      if (!isNullOrUndefined(onfulfilled)) {\n        onfulfilled(result)\n      }\n      return result\n    } catch (err) {\n      if (!isNullOrUndefined(onrejected)) {\n        onrejected(err)\n      }\n    }\n  }\n  /**\n   * @deprecated 已废弃，请直接使用 await 进行等待获取结果值即可\n   */\n  public value(): Promise<any> {\n    return this.then()\n  }\n  /**\n   * 允许使用 for-of 遍历内部的 _arr\n   */\n  public *[Symbol.iterator]() {\n    for (const kv of this._arr) {\n      yield kv\n    }\n  }\n  private _addTask(task: Action): AsyncArray<T> {\n    const result = new AsyncArray(...this._arr)\n    result._tasks = [...this._tasks, task]\n    return result\n  }\n}\n","/**\n * 将数组异步压平一层\n * @param arr 数组\n * @param fn 映射函数，将一个元素映射为一个数组\n * @returns 压平一层的数组\n * @deprecated 已废弃，请使用更强大的异步数组 {@link AsyncArray}\n */\nimport { AsyncArray } from './AsyncArray'\n\nexport async function asyncFlatMap<T>(\n  arr: T[],\n  fn: (item: T, index: number, arr: T[]) => Promise<T[]>,\n): Promise<T[]> {\n  return new AsyncArray(...arr).flatMap(fn as any)\n}\n","/**\n * 判断数字是否在指定区间之中\n * @param num 指定数字\n * @param min 最小值\n * @param max 最大值（不包含）\n */\nexport function isRange(num: number, min: number, max: number): boolean {\n  return num >= min && num < max\n}\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\nimport { isRange } from '../number/isRange'\n\n/**\n * 判断是否为小数的正则表达式\n */\nconst FloatRule = /^(-?\\d+)(.\\d+)?$/\n/**\n * 判断是否为整数的正则表达式\n */\nconst IntegerRule = /^-?\\d+$/\n/**\n * 判断是否为邮箱的正则表达式\n */\nconst EmailRule = /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/\n/**\n * 判断是否为 ipv4 地址的正则表达式\n */\nconst Ipv4Rule = /^((25[0-5]|2[0-4]\\d|1?\\d?\\d)\\.){3}(25[0-5]|2[0-4]\\d|1?\\d?\\d)$/\n/**\n * 判断是否为固定电话的正则表达式\n */\nconst TelephoneRule = /^0[1-9][0-9]{1,2}-[2-8][0-9]{6,7}$/\n/**\n * 判断是否为移动电话的正则表达式\n * 注：不在判断二三位的数字，具体参考：http://caibaojian.com/phone-regexp.html\n */\nconst MobileRule = /^1\\d{10}$/\n/**\n * 判断是否为域名的正则表达式\n */\nconst DomainRule = /^(?=^.{3,255}$)[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$/\n/**\n * 判断是否为邮政编码的正则表达式\n */\nconst PostcodeRule = /^\\d{6}$/\n\ntype IString = string | null | undefined\n\n/**\n * 字符串校验\n * @suppress 之后将会对类型定义进行不兼容修改，避免一直出现的两难问题\n */\nexport class StringValidator {\n  /**\n   * 判断一个字符串是否为空字符串\n   * @param str 字符串\n   * @returns 是否为空字符串\n   */\n  public static isEmpty(str: IString): str is string {\n    return isNullOrUndefined(str) || str === ''\n  }\n  /**\n   * 判断一个字符串是否为空白的字符串\n   * @param str 字符串\n   * @returns 是否为空字符串\n   */\n  public static isBlank(str: IString): str is string {\n    return StringValidator.isEmpty(str) || str!.trim() === ''\n  }\n\n  /**\n   * 判断字符串是否位小数\n   * @param str 需要进行判断的字符串\n   * @returns 是否为小数\n   */\n  public static isFloat(str: IString): str is string {\n    if (isNullOrUndefined(str)) {\n      return false\n    }\n    return FloatRule.test(str)\n  }\n\n  /**\n   * 判断字符串是否位整数\n   * @param str 需要进行判断的字符串\n   * @returns 是否为小数\n   */\n  public static isInteger(str: IString): str is string {\n    return !isNullOrUndefined(str) && IntegerRule.test(str)\n  }\n  /**\n   * 判断邮箱的格式是否正确\n   * @param str 邮箱字符串\n   * @returns 是否是邮箱\n   */\n  public static isEmail(str: IString): str is string {\n    return !isNullOrUndefined(str) && EmailRule.test(str)\n  }\n  /**\n   * 判断 ipv4 地址的格式是否正确\n   * @param str ipv4 字符串\n   * @returns 是否是 ipv4 地址\n   */\n  public static isIpv4(str: IString): str is string {\n    return !isNullOrUndefined(str) && Ipv4Rule.test(str)\n  }\n  /**\n   * 判断字符串是否为正确的端口号\n   * 正确的端口号是 1-65535\n   * @param str 字符串\n   * @returns 是否为端口号\n   */\n  public static isPort(str: IString): str is string {\n    // tslint:disable-next-line:radix\n    return StringValidator.isInteger(str) && isRange(parseInt(str), 1, 65535)\n  }\n  /**\n   * 判断是否为固定电话\n   * @param str 字符串\n   * @returns 是否为固定电话\n   */\n  public static isTelephone(str: IString): str is string {\n    return !isNullOrUndefined(str) && TelephoneRule.test(str)\n  }\n  /**\n   * 判断是否为移动电话\n   * @param str 字符串\n   * @returns 是否为移动电话\n   */\n  public static isMobile(str: IString): str is string {\n    return !isNullOrUndefined(str) && MobileRule.test(str)\n  }\n  /**\n   * 判断是否为域名\n   * @param str 字符串\n   * @returns 是否为域名\n   */\n  public static isDomain(str: IString): str is string {\n    return !isNullOrUndefined(str) && DomainRule.test(str)\n  }\n  /**\n   * 判断是否为邮政编码\n   * @param str 字符串\n   * @returns 是否为邮政编码\n   */\n  public static isPostcode(str: IString): str is string {\n    return !isNullOrUndefined(str) && PostcodeRule.test(str)\n  }\n}\n\n/**\n * 导出一个字符串校验的对象\n * @deprecated 已废弃，请直接使用类的静态函数\n */\nexport const stringValidator = StringValidator\n","import { StringValidator } from '../string/StringValidator'\n/**\n * 可能的类型\n */\nenum Type {\n  String,\n  Number,\n  Boolean,\n  Undefined,\n  Null,\n  Symbol,\n  PropertyKey,\n  Object,\n  Array,\n  Function,\n  Date,\n  File,\n  Blob,\n  Stream,\n  ArrayBuffer,\n  ArrayBufferView,\n  URLSearchParams,\n  FormData,\n}\n/**\n * 校验变量的类型\n */\nexport class TypeValidator {\n  /**\n   * 类型枚举类对象\n   */\n  public static Type = Type\n  /**\n   * 获取变量的类型\n   * @param val 变量\n   * @returns 类型\n   * 注: 此函数依赖于 ts 的编译枚举原理与约定 {@link TypeValidator} 中所有判断函数都是以 `is` 开头并于 {@link Type} 中的保持一致\n   */\n  public static getType(val: any): Type {\n    for (const k of Object.keys(Type)) {\n      if (StringValidator.isInteger(k)) {\n        const type = Type[k as any]\n        if ((TypeValidator as any)['is' + type](val)) {\n          return Type[type as any] as any\n        }\n      }\n    }\n    throw new Error('无法识别的类型')\n  }\n  /**\n   * 判断是否为指定类型\n   * @param val 需要判断的值\n   * @param types 需要判断的类型\n   */\n  public static isType(val: any, ...types: Type[]): boolean {\n    return types.includes(TypeValidator.getType(val))\n  }\n  /**\n   * 判断是否为字符串\n   * @param val 需要判断的值\n   * @returns 是否为字符串\n   */\n  public static isString(val: any): val is string {\n    return typeof val === 'string'\n  }\n  /**\n   * 判断是否为数字\n   * @param val 需要判断的值\n   * @returns 是否为数字\n   */\n  public static isNumber(val: any): val is number {\n    return typeof val === 'number'\n  }\n  /**\n   * 判断是否为布尔值\n   * @param val 需要判断的值\n   * @returns 是否为布尔值\n   */\n  public static isBoolean(val: any): val is boolean {\n    return typeof val === 'boolean'\n  }\n  /**\n   * 判断是否为 Symbol\n   * @param val 需要判断的值\n   * @returns 是否为 Symbol\n   */\n  public static isSymbol(val: any): val is symbol {\n    return typeof val === 'symbol'\n  }\n  /**\n   * 判断是否为 undefined\n   * @param val 需要判断的值\n   * @returns 是否为 undefined\n   */\n  public static isUndefined(val: any): val is undefined {\n    return val === undefined\n  }\n  /**\n   * 判断是否为 null\n   * @param val 需要判断的值\n   * @returns 是否为 null\n   */\n  public static isNull(val: any): val is null {\n    return val === null\n  }\n  /**\n   * 判断是否可以作为对象的属性\n   * @param val 需要判断的值\n   * @returns 是否为对象属性\n   */\n  public static isPropertyKey(val: any): val is PropertyKey {\n    return (\n      TypeValidator.isString(val) ||\n      TypeValidator.isNumber(val) ||\n      TypeValidator.isSymbol(val)\n    )\n  }\n  /**\n   * 判断是否为对象\n   * 注: 函数（包括 ES6 箭头函数）将不被视为对象\n   * @param val 需要判断的值\n   * @returns 是否为对象\n   */\n  public static isObject(val: any): val is Object {\n    return (\n      !TypeValidator.isNull(val) &&\n      !TypeValidator.isUndefined(val) &&\n      typeof val === 'object'\n    )\n  }\n  /**\n   * 判断是否为数组\n   * @param val 需要判断的值\n   * @returns 是否为数组\n   */\n  public static isArray(val: any): val is any[] {\n    return Array.isArray(val)\n  }\n  /**\n   * 判断是否为数组\n   * @param val 需要判断的值\n   * @returns 是否为数组\n   */\n  public static isFunction(val: any): val is Function {\n    return toString.call(val) === '[object Function]'\n  }\n  /**\n   * 判断是否为日期\n   * @param val 需要判断的值\n   * @returns 是否为日期\n   */\n  public static isDate(val: any): val is Date {\n    return toString.call(val) === '[object Date]'\n  }\n  /**\n   * 判断是否为浏览器文件类型\n   * @param val 需要判断的值\n   * @returns 是否为浏览器文件类型\n   */\n  public static isFile(val: any): val is File {\n    return toString.call(val) === '[object File]'\n  }\n  /**\n   * 判断是否为浏览器二进制类型\n   * @param val 需要判断的值\n   * @returns 是否为浏览器二进制类型\n   */\n  public static isBlob(val: any): val is Blob {\n    return toString.call(val) === '[object Blob]'\n  }\n  /**\n   * 判断是否为浏览器流类型\n   * @param val 需要判断的值\n   * @returns 是否为浏览器流类型\n   */\n  public static isStream(val: any): boolean {\n    return TypeValidator.isObject(val) && TypeValidator.isFunction(val.pipe)\n  }\n  /**\n   * 判断是否为浏览器 ArrayBuffer 类型\n   * @param val 需要判断的值\n   * @returns 是否为浏览器 ArrayBuffer 类型\n   */\n  public static isArrayBuffer(val: any): val is ArrayBuffer {\n    return toString.call(val) === '[object ArrayBuffer]'\n  }\n  /**\n   * 判断是否为浏览器 ArrayBufferView 类型\n   * @param val 需要判断的值\n   * @returns 是否为浏览器 ArrayBufferView 类型\n   */\n  public static isArrayBufferView(val: any): val is ArrayBufferView {\n    return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView\n      ? ArrayBuffer.isView(val)\n      : val && val.buffer && val.buffer instanceof ArrayBuffer\n  }\n  /**\n   * 判断是否为浏览器 URLSearchParams 类型\n   * @param val 需要判断的值\n   * @returns 是否为浏览器 URLSearchParams 类型\n   */\n  public static isURLSearchParams(val: any): val is URLSearchParams {\n    return !TypeValidator.isUndefined(val) && val instanceof URLSearchParams\n  }\n  /**\n   * 判断是否为浏览器 FormData 类型\n   * @param val 需要判断的值\n   * @returns 是否为浏览器 FormData 类型\n   */\n  public static isFormData(val: any): val is FormData {\n    return !TypeValidator.isUndefined(val) && val instanceof FormData\n  }\n}\n","import { Func } from '../interface/Func'\nimport { Nullable } from '../interface/Nullable'\nimport { PromiseDeconstruct } from '../interface/PromiseDeconstruct'\n\n/**\n * 安全执行某个函数\n * 支持异步函数\n * @param fn 需要执行的函数\n * @param defaultVal 发生异常后的默认返回值，默认为 null\n * @param args 可选的函数参数\n * @returns 函数执行的结果，或者其默认值\n */\nexport function safeExec<Fn extends Func>(\n  fn: Fn,\n  defaultVal?: ReturnType<Fn>,\n  ...args: Parameters<Fn>\n): Nullable<PromiseDeconstruct<ReturnType<Fn>>> {\n  const defRes = (defaultVal === undefined ? null : defaultVal) as any\n  try {\n    const res = fn(...(args as any))\n    return res instanceof Promise ? res.catch(() => defRes) : res\n  } catch (err) {\n    return defRes\n  }\n}\n","import { returnItself } from './returnItself'\nimport { TypeValidator } from '../obj/TypeValidator'\nimport { safeExec } from './safeExec'\n\n/**\n * 提取对象中的字段并封装为函数\n * @param k 提取的字段，深度获取使用 . 分割不同的字段\n * @returns 获取对象中指定字段的函数\n */\nexport function extractField<T extends object>(\n  k: PropertyKey,\n): (obj: T) => any {\n  const fields: PropertyKey[] = TypeValidator.isString(k) ? k.split('.') : [k]\n  return fields.reduceRight((fn: (obj: T) => any, field: PropertyKey) => {\n    return function(obj: T) {\n      return safeExec(() => fn(Reflect.get(obj as any, field)))\n    }\n  }, returnItself)\n}\n","import { extractField } from '../function/extractField'\nimport { ArrayKFn } from '../interface/ArrayKFn'\nimport { ArrayCallback } from '../interface/ArrayCallback'\n\n/**\n * 获取提取对象属性的函数\n * @param k 提取对象属性的函数或者是属性名（允许使用 . 进行分割）\n * @returns 提取对象属性的函数\n */\nexport function getKFn<T, R>(k: ArrayKFn<T, R>): ArrayCallback<T, R> {\n  return k instanceof Function ? k : (extractField(k) as any)\n}\n","import { ArrayKFn } from '../interface/ArrayKFn'\nimport { getKFn } from './getKFn'\n\n/**\n * 自行实现 flatMap，将数组压平一层\n * @param arr 数组\n * @param k 映射方法，将一个元素映射为一个数组\n * @returns 压平一层的数组\n */\nexport function flatMap<T, V>(\n  arr: T[],\n  k: ArrayKFn<T, V[]> = (v: T) => Array.from(v as any),\n): V[] {\n  const fn = getKFn(k)\n  return arr.reduce((res, v, i, arr) => {\n    res.push(...fn(v, i, arr))\n    return res\n  }, new Array<V>())\n}\n","import { ArrayKFn } from '../interface/ArrayKFn'\nimport { ArrayReduceCallback } from '../interface/ArrayReduceCallback'\nimport { Supplier } from '../interface/Supplier'\nimport { getKFn } from './getKFn'\n\n/**\n * js 数组按照某个条件进行分组\n *\n * @param arr 要进行分组的数组\n * @param k 元素分组的唯一标识函数\n * @returns 元素标识 => 数组映射 Map\n * @typeparam T 数组元素的类型\n * @typeparam K 分组依据的 Key 的类型，也是结果 Map 的 K\n */\nexport function groupBy<T, K>(arr: T[], k: ArrayKFn<T, K>): Map<K, T[]>\n/**\n * js 数组按照某个条件进行分组\n *\n * @param arr 要进行分组的数组\n * @param k 元素分组的唯一标识函数\n * @param vFn 元素分组的值处理的函数。第一个参数是累计值，第二个参数是当前正在迭代的元素，如果你使用过 {@see Array.reduce} 函数的话应该对此很熟悉\n * @returns 元素标识 => 数组映射 Map\n * @typeparam T 数组元素的类型\n * @typeparam K 分组依据的 Key 的类型，也是结果 Map 的 K\n * @typeparam R 如果未指定 init 参数，则 Map 的值必然是一个数组，至于数组的类型则是任意的，由函数参数 vFn 决定\n */\nexport function groupBy<T, K, R>(\n  arr: T[],\n  k: ArrayKFn<T, K>,\n  vFn: ArrayReduceCallback<T, R[]>,\n): Map<K, R[]>\n/**\n * js 数组按照某个条件进行分组\n *\n * @param arr 要进行分组的数组\n * @param k 元素分组的唯一标识函数\n * @param vFn 元素分组的值处理的函数。第一个参数是累计值，第二个参数是当前正在迭代的元素，如果你使用过 {@link Array#reduce} 函数的话应该对此很熟悉\n * @param init 每个分组的产生初始值的函数。类似于 reduce 的初始值，但它是一个函数，避免初始值在所有分组中进行累加。\n * @returns 元素标识 => 数组映射 Map\n * @typeparam T 数组元素的类型\n * @typeparam K 分组依据的 Key 的类型，也是结果 Map 的 K\n * @typeparam V 如果指定了 init 参数，则 Map 的值类型即为 init 函数参数的返回值类型，例如可以使用 init 返回一个 Map 以实现多级级联 Map\n */\nexport function groupBy<T = any, K = any, V = []>(\n  arr: T[],\n  k: ArrayKFn<T, K>,\n  vFn: ArrayReduceCallback<T, V>,\n  init: Supplier<V>,\n): Map<K, V>\nexport function groupBy<T, K, V = T[]>(\n  arr: T[],\n  k: ArrayKFn<T, K>,\n  /**\n   * 默认的值处理函数\n   * @param res 最终 V 集合\n   * @param item 当前迭代的元素\n   * @returns 将当前元素合并后的最终 V 集合\n   */\n  vFn: ArrayReduceCallback<T, V> = ((res: T[], item: T) => {\n    res.push(item)\n    return res\n  }) as any,\n  init: Supplier<V> = () => [] as any,\n): Map<K, V> {\n  const kFn = getKFn(k)\n  // 将元素按照分组条件进行分组得到一个 条件 -> 数组 的对象\n  return arr.reduce((res, item: T, index: number, arr: T[]) => {\n    const k = kFn(item, index, arr)\n    // 如果已经有这个键了就直接追加, 否则先将之初始化再追加元素\n    if (!res.has(k)) {\n      res.set(k, init())\n    }\n    res.set(k, vFn(res.get(k)!, item, index, arr))\n    return res\n  }, new Map<K, V>())\n}\n","/**\n * 创建一个等差数列数组\n * @param start 开始（包含）\n * @param end 结束（不包含）\n * @param sep 步长，默认为 1\n * @returns 等差数列数组\n */\nexport function range(start: number, end: number, sep = 1): number[] {\n  const arr = []\n  for (let i = start; i < end; i += sep) {\n    arr.push(i)\n  }\n  return arr\n}\n","import { ArrayKFn } from '../interface/ArrayKFn'\nimport { returnItself } from '../function/returnItself'\nimport { getKFn } from './getKFn'\n\nexport function toObject<T, K extends PropertyKey>(\n  arr: T[],\n  kFn: ArrayKFn<T, K>,\n): Record<K, T>\nexport function toObject<T, K extends PropertyKey, V>(\n  arr: T[],\n  kFn: ArrayKFn<T, K>,\n  vFn: ArrayKFn<T, V>,\n): Record<K, V>\n/**\n * 将数组转化为一个 Object 对象\n * @deprecated 已废弃，请使用更好的 {@link arrayToMap} 替代\n * @param arr 需要进行转换的数组\n * @param k 生成对象属性名的函数\n * @param v 生成对象属性值的函数，默认为数组中的迭代元素\n * @returns 转化得到的对象\n */\nexport function toObject<T, K extends PropertyKey, V>(\n  arr: T[],\n  k: ArrayKFn<T, K>,\n  v: ArrayKFn<T, V> = returnItself,\n): Record<PropertyKey, V> {\n  const kFn = getKFn(k)\n  const vFn = getKFn(v)\n  return arr.reduce((res: Record<PropertyKey, V>, item, i, arr) => {\n    const k = kFn(item, i, arr)\n    if (!Reflect.has(res, k)) {\n      Reflect.set(res, k, vFn(item, i, arr))\n    }\n    return res\n  }, {})\n}\n","import { returnItself } from '../function/returnItself'\nimport { ArrayKFn } from '../interface/ArrayKFn'\nimport { getKFn } from './getKFn'\n\n/**\n * js 的数组去重方法\n * @param arr 要进行去重的数组\n * @param k 唯一标识元素的方法，默认使用 {@link returnItself}\n * @returns 进行去重操作之后得到的新的数组 (原数组并未改变)\n */\nexport function uniqueBy<T, K>(\n  arr: T[],\n  k: ArrayKFn<T, K> = returnItself,\n): T[] {\n  const kFn = getKFn(k)\n  const set = new Set()\n  return arr.filter((v, ...args) => {\n    const k = kFn(v, ...args)\n    if (set.has(k)) {\n      return false\n    }\n    set.add(k)\n    return true\n  })\n}\n","import { returnItself } from '../function/returnItself'\nimport { ArrayKFn } from '../interface/ArrayKFn'\nimport { getKFn } from './getKFn'\nimport { ArrayDeconstruct } from '../interface/ArrayDeconstruct'\n\nexport function arrayToMap<T extends any[], K, V>(\n  arr: T,\n  k: ArrayKFn<ArrayDeconstruct<T>, K>,\n): Map<K, ArrayDeconstruct<T>>\nexport function arrayToMap<T extends any[], K, V>(\n  arr: T,\n  k: ArrayKFn<ArrayDeconstruct<T>, K>,\n  v?: ArrayKFn<ArrayDeconstruct<T>, V>,\n): Map<K, V>\n/**\n * 将数组映射为 Map\n * @param arr 数组\n * @param k 产生 Map 元素唯一标识的函数，或者对象元素中的一个属性名\n * @param v 产生 Map 值的函数，默认为返回数组的元素，或者对象元素中的一个属性名\n * @returns 映射产生的 map 集合\n */\nexport function arrayToMap<T extends any[], K, V>(\n  arr: T,\n  k: ArrayKFn<ArrayDeconstruct<T>, K>,\n  v: ArrayKFn<ArrayDeconstruct<T>, V> = returnItself,\n): Map<K, V> {\n  const kFn = getKFn(k)\n  const vFn = getKFn(v)\n  return arr.reduce(\n    (res, item, index, arr) =>\n      res.set(kFn(item, index, arr), vFn(item, index, arr)),\n    new Map<K, V>(),\n  )\n}\n","import { arrayToMap } from './../array/arrayToMap'\nimport { Nullable } from '../interface/Nullable'\nimport { isRange } from '../number/isRange'\n\n/**\n * 日期格式化类\n */\nclass DateFormat {\n  /**\n   * 构造函数\n   * @param name 日期格式的名称\n   * @param format 日期的格式值\n   * @param value 格式化得到的值\n   * @param index 需要替换位置的索引\n   */\n  constructor(\n    public name: string,\n    public format: string,\n    public value: string,\n    public index: number,\n  ) {}\n}\n\n/**\n * 日期时间的正则表达式\n */\nconst dateFormats = new Map()\n  .set('year', 'Y{4}|Y{2}|y{4}|y{2}')\n  .set('month', 'M{1,2}')\n  .set('day', 'D{1,2}|d{1,2}')\n  .set('hour', 'h{1,2}')\n  .set('minute', 'm{1,2}')\n  .set('second', 's{1,2}')\n  .set('millieSecond', 'S{1,3}')\n/**\n * 如果没有格式化某项的话则设置为默认时间\n */\nconst defaultDateValues = new Map()\n  .set('month', '01')\n  .set('day', '01')\n  .set('hour', '00')\n  .set('minute', '00')\n  .set('second', '00')\n  .set('millieSecond', '000')\n\n/**\n * 月份日期校验\n */\nconst monthDayValidate = {\n  1: 31,\n  3: 31,\n  5: 31,\n  7: 31,\n  8: 31,\n  10: 31,\n  12: 31,\n  4: 30,\n  6: 30,\n  9: 30,\n  11: 30,\n  2: 28,\n}\n/**\n * 解析字符串为 Date 对象\n * @param str 日期字符串\n * @param fmt 日期字符串的格式，目前仅支持使用 y(年),M(月),d(日),h(时),m(分),s(秒),S(毫秒)\n * @returns 解析得到的 Date 对象\n */\nexport function dateParse(str: string, fmt: string): Nullable<Date> {\n  const now = new Date()\n  defaultDateValues.set('year', now.getFullYear().toString())\n  // 保存对传入的日期字符串进行格式化的全部信息数组列表\n  const dateUnits: DateFormat[] = []\n  for (const [fmtName, regex] of dateFormats) {\n    const regExp = new RegExp(regex)\n    if (regExp.test(fmt)) {\n      const matchStr = regExp.exec(fmt)![0]\n      const regexStr = '`'.repeat(matchStr.length)\n      const index = fmt.indexOf(matchStr)\n      fmt = fmt.replace(matchStr, regexStr)\n      dateUnits.push(\n        new DateFormat(fmtName, '\\\\d'.repeat(matchStr.length), null!, index),\n      )\n    } else {\n      dateUnits.push(\n        new DateFormat(fmtName, null!, defaultDateValues.get(fmtName), -1),\n      )\n    }\n  }\n  // 进行验证是否真的是符合传入格式的字符串\n  fmt = fmt.replace(new RegExp('`', 'g'), '\\\\d')\n  if (!new RegExp(`^${fmt}$`).test(str)) {\n    return null\n  }\n  // 进行一次排序, 依次对字符串进行截取\n  dateUnits\n    // 过滤掉没有得到格式化的对象\n    .filter(({ format }) => format)\n    // 按照字符串中日期片段的索引进行排序\n    .sort(function(a, b) {\n      return a.index - b.index\n    })\n    // 获取到匹配的日期片段的值\n    .map(format => {\n      const matchDateUnit = new RegExp(format.format).exec(str)\n      if (matchDateUnit !== null && matchDateUnit.length > 0) {\n        str = str.replace(matchDateUnit[0], '')\n        format.value = matchDateUnit[0]\n      }\n      return format\n    })\n    // 覆写到 dateStr 上面\n    .forEach(({ format }, i) => {\n      const matchDateUnit = new RegExp(format).exec(str)\n      if (matchDateUnit !== null && matchDateUnit.length > 0) {\n        str = str.replace(matchDateUnit[0], '')\n        dateUnits[i].value = matchDateUnit[0]\n      }\n    })\n  // 将截取完成的信息封装成对象并格式化标准的日期字符串\n  const map = arrayToMap(\n    dateUnits,\n    item => item.name,\n    item => item.value,\n  )\n  if (map.get('year')!.length === 2) {\n    map.set(\n      'year',\n      defaultDateValues\n        .get('year')\n        .substr(0, 2)\n        .concat(map.get('year')),\n    )\n  }\n  // 注意：此处使用的是本地时间而非 UTC 时间\n  const get = (unit: string) => parseInt(map.get(unit)!)\n  const year = get('year')\n  const month = get('month')\n  const day = get('day')\n  const hour = get('hour')\n  const minute = get('minute')\n  const second = get('second')\n  const millieSecond = get('millieSecond')\n  if (!isRange(month, 1, 12 + 1)) {\n    return null\n  }\n  if (\n    !isRange(\n      day,\n      1,\n      Reflect.get(monthDayValidate, month) +\n        (month === 2 && year % 4 === 0 ? 1 : 0) +\n        1,\n    )\n  ) {\n    return null\n  }\n  if (\n    !isRange(hour, 0, 24 + 1) ||\n    !isRange(minute, 0, 60 + 1) ||\n    !isRange(second, 0, 60 + 1) ||\n    !isRange(millieSecond, 0, 999 + 1)\n  ) {\n    return null\n  }\n  return new Date(year, month - 1, day, hour, minute, second, millieSecond)\n}\n","import { dateParse } from './dateParse'\n\n/**\n * 解析字符串为 Date 对象\n * @deprecated 已弃用，请使用可读性更好的 {@link dateParse} 代替\n * @param dateStr 日期字符串\n * @param fmt 日期字符串的格式\n * 目前仅支持使用 y(年),M(月),d(日),h(时),m(分),s(秒),S(毫秒)\n * @returns 解析得到的 Date 对象\n */\nexport function strToDate(dateStr: string, fmt: string): Date | null {\n  return dateParse(dateStr, fmt)\n}\n","/**\n * 复制一段文本内容\n * @param text 要进行复制的文本\n * @returns 是否复制成功\n */\nexport function copyText(text: string): boolean {\n  const $el = document.createElement('textarea')\n  $el.style.position = 'fixed'\n  $el.style.top = '-1000px'\n  document.body.appendChild($el)\n  $el.value = text\n  $el.select()\n  const res = document.execCommand('copy')\n  document.body.removeChild($el)\n  return res\n}\n","import { Nullable } from '../interface/Nullable'\n\n/**\n * 根据 html 字符串创建 Element 元素\n * @param str html 字符串\n * @returns 创建的 Element 元素\n */\nexport function createElByString(str: string): Nullable<Element> {\n  const root = document.createElement('div')\n  root.innerHTML = str\n  return root.querySelector('*')\n}\n","/**\n * 获取输入框中光标所在位置\n * @param  {HTMLFormElement} el 需要获取的输入框元素\n * @returns 光标所在位置的下标\n */\nexport function getCursorPosition(el: HTMLFormElement): number {\n  return el.selectionStart\n}\n","import { getCursorPosition } from './getCursorPosition'\n\n/**\n * 获取输入框中光标所在位置\n * @param  {HTMLFormElement} el 需要获取的输入框元素\n * @returns 光标所在位置的下标\n * @deprecated 已废弃，请使用正确更名后的 {@link getCursorPosition} 函数\n */\nexport function getCusorPostion(el: HTMLFormElement): number {\n  return getCursorPosition(el)\n}\n","/**\n * 设置输入框中选中的文本/光标所在位置\n * @param el 需要设置的输入框元素\n * @param start 光标所在位置的下标\n * @param end 结束位置，默认为输入框结束\n */\nexport function setCursorPosition(\n  el: HTMLFormElement,\n  start: number,\n  end: number = start,\n) {\n  el.focus()\n  el.setSelectionRange(start, end)\n}\n","import { getCursorPosition } from './getCursorPosition'\nimport { setCursorPosition } from './setCursorPosition'\n\n/**\n * 在指定位置后插入文本\n * @param el 需要设置的输入框元素\n * @param text 要插入的值\n * @param start 开始位置，默认为当前光标处\n */\nexport function insertText(\n  el: HTMLFormElement,\n  text: string,\n  start: number = getCursorPosition(el),\n) {\n  const value = el.value\n  el.value = value.substr(0, start) + text + value.substr(start)\n  setCursorPosition(el, start + text.length)\n}\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\n\n/**\n * 字符串安全的转换为小写\n * @param str 字符串\n * @returns 转换后得到的全小写字符串\n */\nexport function toLowerCase<T = string | undefined | null>(str: T): T {\n  if (isNullOrUndefined(str) || typeof str !== 'string') {\n    return str\n  }\n  return str.toLowerCase() as any\n}\n","import { toLowerCase } from '../string/toLowerCase'\n\n/**\n * 判断指定元素是否是可编辑元素\n * 注：可编辑元素并不一定能够进行编辑，例如只读的 input 元素\n * @param el 需要进行判断的元素\n * @returns 是否为可编辑元素\n */\nexport function isEditable(el: Element): boolean {\n  const inputEls = ['input', 'date', 'datetime', 'select', 'textarea']\n  return (\n    // 此处需要判断是否存在属性 isContentEditable\n    // @ts-ignore\n    el && (el.isContentEditable || inputEls.includes(toLowerCase(el.tagName)))\n  )\n}\n","import { Nullable } from '../interface/Nullable'\n\nlet lastFocusEl: Nullable<Element> | EventTarget\n\n/**\n * 获取到最后一个获得焦点的元素\n * @returns 最后一个获取到焦点的元素\n */\nfunction _lastFocus(): Nullable<Element> | EventTarget {\n  return lastFocusEl\n}\n\nexport const lastFocus = Object.assign(_lastFocus, {\n  init() {\n    document.addEventListener(\n      'focus',\n      event => {\n        lastFocusEl = event.target\n      },\n      true,\n    )\n    document.addEventListener(\n      'blur',\n      () => {\n        lastFocusEl = null\n      },\n      true,\n    )\n  },\n})\n","import { Nullable } from '../interface/Nullable'\n\n/**\n * 直接删除指定元素\n * @param el 需要删除的元素\n * @returns 返回被删除的元素\n */\nexport function removeEl(el: Element): Nullable<Node> {\n  const parent = el.parentElement\n  if (parent == null) {\n    return null\n  }\n  return parent.removeChild(el)\n}\n","import { getCursorPosition } from './getCursorPosition'\nimport { setCursorPosition } from './setCursorPosition'\n\n/**\n * 在指定范围内删除文本\n * @param el 需要设置的输入框元素\n * @param start 开始位置，默认为当前选中开始位置\n * @param end 结束位置，默认为当前选中结束位置\n */\nexport function removeText(\n  el: HTMLFormElement,\n  start: number = el.selectionStart,\n  end: number = el.selectionEnd,\n) {\n  // 删除之前必须要 [记住] 当前光标的位置\n  const index = getCursorPosition(el)\n  const value = el.value\n  el.value = value.substr(0, start) + value.substr(end, value.length)\n  setCursorPosition(el, index)\n}\n","import { setCursorPosition } from './setCursorPosition'\n\n/**\n * 设置输入框中选中的文本/光标所在位置\n * @param el 需要设置的输入框元素\n * @param start 光标所在位置的下标\n * @param end 结束位置，默认为输入框结束\n * @deprecated 已废弃，请使用正确更名后的 {@link setCursorPosition} 函数\n */\nexport function setCusorPostion(\n  el: HTMLFormElement,\n  start: number,\n  end: number = start,\n) {\n  return setCursorPosition(el, start, end)\n}\n","/**\n * 监听 event 的添加/删除，使 DOM 事件是可撤销的\n * 注：必须及早运行，否则无法监听之前添加的事件\n * @deprecated 实际上 {@link EventUtil} 已经更好的实现了这个功能，如果需要则直接修改原型即可，无需使用该函数\n */\nexport function watchEventListener() {\n  /**\n   * 用来保存监听到的事件信息\n   */\n  class Event {\n    constructor(\n      public el: Element,\n      public type: string,\n      public listener: EventListener,\n      public useCapture: boolean,\n    ) {}\n  }\n  /**\n   * 监听所有的 addEventListener, removeEventListener 事件\n   */\n  const documentAddEventListener = document.addEventListener\n  const eventTargetAddEventListener = EventTarget.prototype.addEventListener\n  const documentRemoveEventListener = document.removeEventListener\n  const eventTargetRemoveEventListener =\n    EventTarget.prototype.removeEventListener\n  const events: Event[] = []\n\n  /**\n   * 自定义的添加事件监听函数\n   * @param type 事件类型\n   * @param listener 事件监听函数\n   * @param [useCapture] 是否需要捕获事件冒泡，默认为 false\n   */\n  function addEventListener(\n    type: string,\n    listener: EventListener,\n    useCapture = false,\n  ) {\n    const $addEventListener =\n      // @ts-ignore\n      this === document ? documentAddEventListener : eventTargetAddEventListener\n    // @ts-ignore\n    events.push(new Event(this, type, listener, useCapture))\n    // @ts-ignore\n    $addEventListener.apply(this, arguments)\n  }\n\n  /**\n   * 自定义的根据类型删除事件函数\n   * 该方法会删除这个类型下面全部的监听函数，不管数量\n   * @param type 事件类型\n   */\n  function removeEventListenerByType(type: string) {\n    const $removeEventListener =\n      // @ts-ignore\n      this === document\n        ? documentRemoveEventListener\n        : eventTargetRemoveEventListener\n    const removeIndexList = events\n      // @ts-ignore\n      .map((e, i) => (e.el === this || e.type === arguments[0] ? i : -1))\n      .filter(i => i !== -1)\n    removeIndexList.forEach(i => {\n      const e = events[i]\n      $removeEventListener.apply(e.el, [e.type, e.listener, e.useCapture])\n    })\n    removeIndexList.sort((a, b) => b - a).forEach(i => events.splice(i, 1))\n  }\n\n  document.addEventListener = EventTarget.prototype.addEventListener = addEventListener\n  // @ts-ignore\n  document.removeEventListenerByType = EventTarget.prototype.removeEventListenerByType = removeEventListenerByType\n}\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\n\n/**\n * 将任意对象转换为 String\n * 主要避免原生 Object toString 遇到某些空值的时候抛异常的问题\n * @param object 任意对象\n * @returns 字符串\n */\nexport function toString(object: any): string {\n  if (isNullOrUndefined(object)) {\n    return ''\n  }\n  if (object instanceof Date) {\n    return object.toISOString()\n  }\n  return object.toString()\n}\n","import { toString } from '../string/toString'\n\n/**\n * FormData 批量添加方法\n * 注：该方法不会覆盖掉原本的属性\n * @param fd FormData 对象\n * @param obj 键值对对象\n * @returns 添加完成后的 FormData 对象\n */\nexport function appends(\n  fd: FormData,\n  obj: Record<string, string | Blob | any>,\n): FormData {\n  for (const k in obj) {\n    const v = obj[k]\n    fd.append(k, toString(v))\n  }\n  return fd\n}\n","/**\n * FormData 批量删除方法\n * @param fd FormData 对象\n * @param keys  删除的 key 列表\n * @returns 返回删除后的 FormData 对象\n */\nexport function deletes(fd: FormData, keys: string[]): FormData {\n  keys.forEach(key => fd.delete(key))\n  return fd\n}\n","/**\n * FormData 批量设置方法\n * 注：该方法会覆盖掉原本的属性\n * @param fd 表单对象\n * @param obj 键值对对象\n * @returns 设置完成后的 FormData 对象\n */\nexport function sets(\n  fd: FormData,\n  obj: Record<string, string | Blob | any>,\n): FormData {\n  for (const k in obj) {\n    fd.set(k, obj[k])\n  }\n  return fd\n}\n","/**\n * FormData 转换为包含所有键值数组的二维数组函数\n *\n * @param fd 需要转换的 FormData 对象\n * @returns 转换后的数组\n * @deprecated 已被原生函数 Array.from 取代\n */\nexport function formDataToArray(fd: FormData): Array<[string, string | Blob]> {\n  // @ts-ignore\n  return Array.from(fd)\n}\n","/**\n * 将参数对象转换为 FormData，只转换一层\n * @param data 参数对象\n * @return {FormData} 转换后的表单对象\n */\nexport function objToFormData(\n  data: Record<string, string | Blob | any>,\n): FormData {\n  return Object.entries(data).reduce((res, [k, v]) => {\n    if (v instanceof Blob) {\n      res.append(k, v)\n    } else {\n      res.append(k, v && v.toString())\n    }\n    return res\n  }, new FormData())\n}\n","import { Func } from '../interface/Func'\nimport { Async } from '../interface/Async'\n\n/**\n * 函数去抖\n * 去抖 (debounce) 去抖就是对于一定时间段的连续的函数调用，只让其执行一次\n * 注: 包装后的函数如果两次操作间隔小于 delay 则不会被执行, 如果一直在操作就会一直不执行, 直到操作停止的时间大于 delay 最小间隔时间才会执行一次, 不管任何时间调用都需要停止操作等待最小延迟时间\n * 应用场景主要在那些连续的操作, 例如页面滚动监听, 包装后的函数只会执行最后一次\n * 注: 该函数第一次调用一定不会执行，第一次一定拿不到缓存值，后面的连续调用都会拿到上一次的缓存值。如果需要在第一次调用获取到的缓存值，则需要传入第三个参数 {@param init}，默认为 {@code undefined} 的可选参数\n * 注: 返回函数结果的高阶函数需要使用 {@see Proxy} 实现，以避免原函数原型链上的信息丢失\n *\n * @param delay 最小延迟时间，单位为 ms\n * @param action 真正需要执行的操作\n * @param init 初始的缓存值，不填默认为 {@see undefined}\n * @return 包装后有去抖功能的函数。该函数是异步的，与需要包装的函数 {@see action} 是否异步没有太大关联\n */\nexport function debounce<Fn extends Func>(\n  delay: number,\n  action: Fn,\n  init: any = null,\n): Async<Fn> {\n  let flag: number\n  let result = init\n  return new Proxy(action, {\n    apply(_: Func, _this: any, args: ArrayLike<any>) {\n      return new Promise(resolve => {\n        if (flag) clearTimeout(flag)\n        flag = setTimeout(\n          () => resolve((result = Reflect.apply(_, _this, args))),\n          delay,\n        )\n        setTimeout(() => resolve(result), delay)\n      })\n    },\n  })\n}\n","import { Newable } from '../interface/Newable'\n\n/**\n * 使用 Proxy 实现通用的单例模式\n * @param clazz 需要包装为单例的类型\n * @returns 包装后的单例模式类，使用 {@code new} 创建将只在第一次有效\n */\nexport function singleModel<\n  R extends object,\n  Clazz extends Function = Newable<R>\n>(clazz: Clazz): Clazz {\n  let instance: R\n  return new Proxy(clazz, {\n    construct(target, args, newTarget) {\n      if (instance === undefined) {\n        instance = Reflect.construct(target, args, newTarget)\n      }\n      return instance\n    },\n  })\n}\n","import { Newable } from '../interface/Newable'\nimport { Nullable } from '../interface/Nullable'\n\n/**\n * 状态机\n * 用于避免使用 if-else 的一种方式\n * @typeparam K 状态的类型，默认为 any\n * @typeparam V 构造函数返回值的类型，一般为实现子类的基类，默认为 any\n * @deprecated 该类将在下个大版本进行重构，使用函数而非类作为基本单元\n */\nexport class StateMachine<K = any, R = any> {\n  /**\n   * 获取到一个状态工厂\n   * @deprecated 已废弃，请直接创建一个 StateMachine 实例\n   */\n  public static getFactory<K>() {\n    /**\n     * 状态注册器\n     * 更好的有限状态机，分离子类与构建的关系，无论子类如何增删该都不影响基类及工厂类\n     */\n    return new StateMachine<K>()\n  }\n  private classMap = new Map<K, Newable<R>>()\n  /**\n   * 注册一个 class，创建子类时调用，用于记录每一个 [状态 => 子类] 对应\n   * 注: 此处不再默认使用单例模式，如果需要，请自行对 class 进行包装\n   * @param state 作为键的状态\n   * @param clazz 对应的子类型\n   * @returns 返回 clazz 本身\n   */\n  public register(state: K, clazz: Newable<R>): Newable<R> {\n    this.classMap.set(state, clazz)\n    return clazz\n  }\n\n  /**\n   * 获取一个标签子类对象\n   * @param state 状态索引\n   * @param args 构造函数的参数\n   * @returns 子类对象\n   */\n  public getInstance(state: K, ...args: any[]): Nullable<R> {\n    const Class = this.classMap.get(state)\n    if (!Class) {\n      return null\n    }\n    // 构造函数的参数\n    return new Class(...args)\n  }\n  /**\n   * 允许使用 for-of 遍历整个状态机\n   */\n  public *[Symbol.iterator]() {\n    for (const kv of this.classMap.entries()) {\n      yield kv\n    }\n  }\n}\n","import { Func } from '../interface/Func'\nimport { Async } from '../interface/Async'\nimport { PromiseDeconstruct } from '../interface/PromiseDeconstruct'\n\n/**\n * 函数节流\n * 节流 (throttle) 让一个函数不要执行的太频繁，减少执行过快的调用，叫节流\n * 类似于上面而又不同于上面的函数去抖, 包装后函数在上一次操作执行过去了最小间隔时间后会直接执行, 否则会忽略该次操作\n * 与上面函数去抖的明显区别在连续操作时会按照最小间隔时间循环执行操作, 而非仅执行最后一次操作\n * 注: 该函数第一次调用一定会执行，不需要担心第一次拿不到缓存值，后面的连续调用都会拿到上一次的缓存值\n * 注: 返回函数结果的高阶函数需要使用 {@see Proxy} 实现，以避免原函数原型链上的信息丢失\n *\n * @param delay 最小间隔时间，单位为 ms\n * @param action 真正需要执行的操作\n * @return {Function} 包装后有节流功能的函数。该函数是异步的，与需要包装的函数 {@link action} 是否异步没有太大关联\n */\nexport function throttle<Fn extends Func>(\n  delay: number,\n  action: Fn,\n): Async<Fn> {\n  let last = 0\n  let result: PromiseDeconstruct<ReturnType<Fn>>\n  return new Proxy(action, {\n    apply(target, thisArg, args) {\n      return new Promise(resolve => {\n        const curr = Date.now()\n        if (curr - last > delay) {\n          result = Reflect.apply(target, thisArg, args)\n          last = curr\n          resolve(result)\n          return\n        }\n        resolve(result)\n      })\n    },\n  })\n}\n","import { ReturnFunc } from '../interface/ReturnFunc'\nimport { compatibleAsync } from '../async/compatibleAsync'\n\n/**\n * 测试函数的执行时间\n * 注：如果函数返回 Promise，则该函数也会返回 Promise，否则直接返回执行时间\n * @param fn 需要测试的函数\n * @returns 执行的毫秒数\n */\nexport function timing<R>(\n  fn: ReturnFunc<R>,\n  // 函数返回类型是 Promise 的话，则返回 Promise<number>，否则返回 number\n): R extends Promise<any> ? Promise<number> : number {\n  const begin = performance.now()\n  const res = fn()\n  return compatibleAsync(res, () => performance.now() - begin)\n}\n","import { ReturnFunc } from '../interface/ReturnFunc'\n\n/**\n * 等待指定资源加载的可选参数接口\n */\ninterface IWaitResourceOptions {\n  /**\n   * 轮询间隔\n   */\n  interval: number\n  /**\n   * 最大轮询次数\n   */\n  max: number\n}\n/**\n * 轮询等待指定资源加载完毕再执行操作\n * 使用 Promises 实现，可以使用 ES7 的 {@see async} 和 {@see await} 调用\n * @param fn 判断必须的资源是否存在的方法\n * @param option 可配置项\n * @returns Promise 对象\n */\nexport function waitResource(\n  fn: ReturnFunc<boolean>,\n  { interval = 100, max = 10 }: Partial<IWaitResourceOptions> = {},\n) {\n  let current = 0\n  return new Promise((resolve, reject) => {\n    const timer = setInterval(() => {\n      if (fn()) {\n        clearInterval(timer)\n        resolve()\n      }\n      current++\n      if (current >= max) {\n        clearInterval(timer)\n        reject(new Error('waitResource call timeout'))\n      }\n    }, interval)\n  })\n}\n","import { ReturnFunc } from '../interface/ReturnFunc'\n\n/**\n * 监视指定函数返回值的变化\n * @param fn 需要监视的函数\n * @param callback 回调函数\n * @param interval 每次检查的间隔时间，默认为 100ms\n * @returns 关闭这个监视函数\n */\nexport function watch<R>(\n  fn: ReturnFunc<R>,\n  callback: (newVal: R, oldVal: R) => void,\n  interval = 100,\n): Function {\n  let oldVal = fn()\n  const timer = setInterval(() => {\n    const newVal = fn()\n    if (oldVal !== newVal) {\n      callback(newVal, oldVal)\n      oldVal = newVal\n    }\n  }, interval)\n  return () => clearInterval(timer)\n}\n","/**\n * 深度监听指定对象属性的变化\n * 注：指定对象不能是原始类型，即不可变类型，而且对象本身的引用不能改变，最好使用 const 进行声明\n * @param object 需要监视的对象\n * @param callback 当代理对象发生改变时的回调函数，回调函数有三个参数，分别是对象，修改的 key，修改的 v\n * @returns 返回源对象的一个代理\n */\nexport function watchObject<T extends object>(\n  object: T,\n  callback: (target: T, k: PropertyKey, v: any) => void,\n): object {\n  const handler: ProxyHandler<T> = {\n    get(target, k) {\n      try {\n        // 注意: 这里很关键，它为对象的字段也添加了代理\n        return new Proxy(Reflect.get(target, k), handler)\n      } catch (err) {\n        return Reflect.get(target, k)\n      }\n    },\n    set(target, k, v) {\n      callback(target, k, v)\n      return Reflect.set(target, k, v)\n    },\n  }\n  return new Proxy(object, handler)\n}\n","/**\n * 填充字符串到指定长度\n * @param item 填充的字符串\n * @param len 填充的长度\n * @returns 填充完成的字符串\n * @deprecated 已废弃，请使用 ES6 {@link String.prototype.repeat} 函数\n * 具体请参考 MDN {@url(https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/repeat)}\n */\nexport function fill(item: string, len: number): string {\n  if (len <= 0) {\n    return ''\n  }\n  return item + fill(item, len - 1)\n}\n","import { toString } from './toString'\n\n/**\n * 字符串格式化\n *\n * @param str 要进行格式化的值\n * @param args 格式化参数值，替换字符串中的 {} 的值\n * @returns 替换完成的字符串\n * @deprecated 已废弃，请使用 ES6 模板字符串 {@url(https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings)}\n */\nexport function format(str: string, args: Record<string, any>): string {\n  return Object.keys(args).reduce(\n    (res, k) => res.replace(new RegExp(`{${k}}`, 'g'), toString(args[k])),\n    str,\n  )\n}\n","import { stringValidator } from './StringValidator'\n\n/**\n * 判断字符串是否位小数\n * @param str 需要进行判断的字符串\n * @returns 是否为小数\n * @deprecated 已废弃，请使用 {@link stringValidator#isFloat}\n */\nexport function isFloat(str: string | null | undefined): boolean {\n  return stringValidator.isFloat(str)\n}\n","import { stringValidator } from './StringValidator'\n\n/**\n * 判断字符串是否位整数\n * @param str 需要进行判断的字符串\n * @returns 是否为小数\n * @deprecated 已废弃，请使用 {@link stringValidator#isInteger}\n */\nexport function isNumber(str: string): boolean {\n  return stringValidator.isInteger(str)\n}\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\n\n/**\n * 字符串安全的转换为大写\n * @param str 字符串\n * @returns 转换后得到的全大写字符串\n */\nexport function toUpperCase<T = string | undefined | null>(str: T): T {\n  if (isNullOrUndefined(str) || typeof str !== 'string') {\n    return str\n  }\n  return str.toUpperCase() as any\n}\n","import { StringValidator } from './StringValidator'\n\n/**\n * 将空白字符串转换为 null\n *\n * @param str 将空字符串转换为 {@code null}\n * @returns 可能为 {@code null}\n */\nexport function blankToNull(str: string): string | null {\n  return StringValidator.isBlank(str) ? null : str\n}\n","import { blankToNull } from './../string/blankToNull'\n\n/**\n * 置空对象所有空白的属性\n * @param obj 对象\n * @returns 将所有的空白属性全部转换为 null 的新对象\n */\nexport function blankToNullField<T extends object>(obj: T): T {\n  return Object.keys(obj).reduce((res, k) => {\n    const v = Reflect.get(obj, k)\n    Reflect.set(res, k, typeof v === 'string' ? blankToNull(v) : v)\n    return res\n  }, {}) as any\n}\n","/**\n * 将对象的所有属性置空\n * @param obj 需要置空属性的对象\n * @returns 返回一个新的对象\n */\nexport function emptyAllField<T extends object>(obj: T): T {\n  return Object.keys(obj).reduce((res, k) => {\n    Reflect.set(res, k, null)\n    return res\n  }, {}) as any\n}\n","/**\n * 排除对象中的指定字段\n * 注: 此处将获得一个浅拷贝对象\n * @param obj 排除对象\n * @param fields 要排除的多个字段\n * @returns 排除完指定字段得到的新的对象\n */\nexport function excludeFields<T extends object, K extends keyof T>(\n  obj: T,\n  ...fields: K[]\n): Omit<T, K> {\n  const set = new Set(fields)\n  return Object.keys(obj).reduce((res, k) => {\n    if (!set.has(k as any)) {\n      Reflect.set(res, k, Reflect.get(obj, k))\n    }\n    return res\n  }, {}) as any\n}\n","/**\n * 将 Map 转换为 Object 对象\n * @param map Map 键值表\n * @returns 转换得到的 Object 对象\n */\nexport function mapToObject(map: Map<PropertyKey, any>): object {\n  const res = {}\n  for (const [k, v] of map) {\n    Reflect.set(res, k, v)\n  }\n  return res\n}\n","/**\n * 生成一个随机的数字\n * @param max 最大值，最小值默认为 0\n * @returns 生成的随机整数\n * @throws 当 max 小于等于 0 时\n */\nexport function randomInt(max: number): number\n/**\n * 生成一个随机的数字\n * @param min 最小值\n * @param max 最大值（不包含）\n * @returns 生成的随机整数\n * @throws 当 max 小于等于 0 时\n */\nexport function randomInt(min: number, max: number): number\nexport function randomInt(num1: number, num2?: number): number {\n  const min = num2 ? num1 : 0\n  const max = num2 ? num2 : num1\n  if (max <= 0) {\n    throw new Error('最大值不能为 0')\n  }\n  return min + Math.floor(Math.random() * (max - min))\n}\n","import { dateFormat } from './dateFormat'\n\n/**\n * 计算月有多少天\n * @param date 日期\n * @returns 月的总天数\n */\nfunction calcMonEndDay(date: Date) {\n  const monthToDay: Array<[Set<number>, number]> = [\n    [new Set([1, 3, 5, 7, 8, 10, 12]), 30],\n    [new Set([4, 6, 9, 11]), 30],\n    [new Set([2]), 28],\n  ]\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const days = monthToDay.find(([monthSet]) => monthSet.has(month))![1]\n  return days + (month === 2 && year % 4 === 0 ? 1 : 0)\n}\n\n/**\n * 日期固定时间点\n */\nexport class DateConstants {\n  /**\n   * 获取指定日期一天的开始时间\n   * @param date 指定的时间，默认为当前日期\n   * @returns 一天的开始时间\n   */\n  public static dayStart(date: Date = new Date()): Date {\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T00:00:00.000`)\n  }\n  /**\n   * 获取指定日期一天的结束时间\n   * @param date 指定的时间，默认为当前日期\n   * @returns 一天的结束时间\n   */\n  public static dayEnd(date: Date = new Date()): Date {\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T23:59:59.999`)\n  }\n  /**\n   * 获取指定日期所在月的开始时间\n   * @param date 指定的时间，默认为当前日期\n   * @returns 月的开始时间\n   */\n  public static monthStart(date: Date = new Date()): Date {\n    return new Date(`${dateFormat(date, 'yyyy-MM')}-01T00:00:00.000`)\n  }\n  /**\n   * 获取指定日期所在月的结束时间\n   * @param date 指定的时间，默认为当前日期\n   * @returns 月的结束时间\n   */\n  public static monthEnd(date: Date = new Date()): Date {\n    return new Date(\n      `${dateFormat(date, 'yyyy-MM')}-${calcMonEndDay(date)}T23:59:59.999`,\n    )\n  }\n  /**\n   * 获取指定日期所在年份的新年开始时间\n   * @param date 指定的时间，默认为当前日期\n   * @returns 新年开始时间\n   */\n  public static yearStart(date: Date = new Date()): Date {\n    return new Date(`${date.getFullYear()}-01-01T00:00:00.000`)\n  }\n  /**\n   * 获取指定日期所在年份的旧年结束时间\n   * @param date 指定的时间，默认为当前日期\n   * @returns 旧年结束时间\n   */\n  public static yearEnd(date: Date = new Date()): Date {\n    return new Date(`${date.getFullYear()}-12-31T23:59:59.999`)\n  }\n}\n\n/**\n * 导出一个日期固定时间点的对象\n * @deprecated 已废弃，请直接使用类的静态函数\n */\nexport const dateConstants = DateConstants\n","import { isRange } from '../number/isRange'\nimport { dateConstants } from './DateConstants'\n\n/**\n * 一天标准的毫秒数\n */\nconst DAY_UNIT_TIME = 1000 * 60 * 60 * 24\n/**\n * 日期增强\n */\nexport class DateEnhance {\n  /**\n   * 构造函数\n   * @param date 要增强的日期\n   */\n  constructor(private date: Date) {}\n  /**\n   * 获取到年份\n   * @returns\n   */\n  public year(): number {\n    return this.date.getFullYear()\n  }\n  /**\n   * 获取月份\n   * @returns\n   * @deprecated 已废弃，请使用 {@link this#monthOfYear} 函数\n   */\n  public month(): number {\n    return this.date.getMonth()\n  }\n  /**\n   * 获取今年的第几个月份\n   * 和 {@link this#month} 不同的是不再从 0 计算月份\n   */\n  public monthOfYear() {\n    return this.date.getMonth() + 1\n  }\n  /**\n   * 获取一年内的第多少天\n   * 注: 这个天数指定的在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\n   * @returns\n   */\n  public dayOfYear(): number {\n    return Math.ceil(\n      (this.date.getTime() - dateConstants.yearStart(this.date).getTime()) /\n        DAY_UNIT_TIME,\n    )\n  }\n  /**\n   * 获取一个月内的第多少天\n   * 注: 这个天数指的是在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\n   * @returns\n   */\n  public dayOfMonth(): number {\n    return this.date.getDate()\n  }\n  /**\n   * 获取一个星期内的第多少天\n   * @returns\n   */\n  public dayOfWeek(): number {\n    return this.date.getDay()\n  }\n  /**\n   * 获取一年内的第多少星期\n   * 注: 这个星期指定的在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\n   * @returns\n   */\n  public weekOfYear(): number {\n    return Math.ceil(this.dayOfYear() / 7)\n  }\n  /**\n   * 获取一个月内的第多少星期\n   * @returns\n   */\n  public weekOfMonth(): number {\n    return Math.ceil(this.dayOfMonth() / 7)\n  }\n  /**\n   * 获取季度\n   * @returns\n   */\n  public quarter(): number {\n    const month = this.month()\n    if (isRange(month, 0, 3)) {\n      return 1\n    } else if (isRange(month, 3, 6)) {\n      return 2\n    } else if (isRange(month, 6, 9)) {\n      return 3\n    } else {\n      return 4\n    }\n  }\n  /**\n   * 获取小时\n   * @returns\n   */\n  public hour(): number {\n    return this.date.getHours()\n  }\n  /**\n   * 获取分钟\n   * @returns\n   */\n  public minute(): number {\n    return this.date.getMinutes()\n  }\n  /**\n   * 获取秒\n   * @returns\n   */\n  public second(): number {\n    return this.date.getSeconds()\n  }\n  /**\n   * 获取毫秒\n   * @returns\n   */\n  public milliSecond(): number {\n    return this.date.getMilliseconds()\n  }\n}\n\n/**\n * 获取一个增强的日期\n * @param date 要增强的日期\n * @returns 增强日期\n */\nexport function dateEnhance(date: Date): DateEnhance {\n  return new DateEnhance(date)\n}\n","import { dateEnhance } from './dateEnhance'\n\n/**\n * 获取一年内的第多少星期\n * @param date 日期\n * @returns 这个日期第多少个星期\n * @deprecated 不推荐使用，请使用 {@see dateEnhance} 代替\n */\nexport function getYearWeek(date: Date): number {\n  return dateEnhance(date).weekOfYear()\n}\n","/**\n * 时间日期间隔\n */\nexport class DateBetween {\n  /**\n   * 构造函数\n   * @param start 开始时间\n   * @param end 结束时间\n   */\n  constructor(private start: Date, private end: Date) {}\n  /**\n   * 获取毫秒差值\n   * @returns 毫秒差值\n   */\n  public milliSecond(): number {\n    return this.end.getTime() - this.start.getTime()\n  }\n  /**\n   * 获取秒差值\n   * @returns 秒差值\n   */\n  public second(): number {\n    return Math.floor(this.milliSecond() / 1000)\n  }\n  /**\n   * 获取分钟差值\n   * @returns 分钟差值\n   */\n  public minute(): number {\n    return Math.floor(this.second() / 60)\n  }\n  /**\n   * 获取小时差值\n   * @returns 小时差值\n   */\n  public hour(): number {\n    return Math.floor(this.minute() / 60)\n  }\n  /**\n   * 获取天数差值\n   * @returns 天数差值\n   */\n  public day(): number {\n    return Math.floor(this.hour() / 24)\n  }\n  /**\n   * 获取月份差值\n   * 注: 此处获取的差值是按月计算的，即 2018-12-31 => 2019-01-01 也被认为相差一个月\n   * @returns 月份差值\n   */\n  public month(): number {\n    const year = this.year()\n    const month = this.end.getMonth() - this.start.getMonth()\n    return year * 12 + month\n  }\n  /**\n   * 获取年份差值\n   * 注: 此处获取的差值是按年计算的，即 2018-12-31 => 2019-01-01 也被认为相差一年\n   * @returns 年份差值\n   */\n  public year(): number {\n    return this.end.getFullYear() - this.start.getFullYear()\n  }\n}\n\n/**\n * 获取两个时间的差值\n * @param start 开始时间\n * @param end 结束时间\n * @returns 差值对象\n */\nexport function dateBetween(start: Date, end: Date): DateBetween {\n  return new DateBetween(start, end)\n}\n","/**\n * 返回合理参数本身的函数\n * 1. 如果没有参数则返回 undefined\n * 2. 如果只有一个参数则返回参数本身\n * 3. 如果有两个以上的参数则返回参数列表\n * @param args 任何对象\n * @returns 传入的参数\n * @deprecated 已废弃，貌似没有太多的使用场景\n */\nexport function returnReasonableItself(...args: any[]): null | any | any[] {\n  const len = args.length\n  if (len === 0) {\n    return null\n  }\n  if (len === 1) {\n    return args[0]\n  }\n  return args\n}\n","import { returnItself } from './../function/returnItself'\nimport { ArrayKFn } from '../interface/ArrayKFn'\nimport { getKFn } from './getKFn'\n\n/**\n * 从数组中移除指定的元素\n * 注: 时间复杂度为 1~3On\n * @param arr 需要被过滤的数组\n * @param deleteItems 要过滤的元素数组\n * @param k 每个元素的唯一键函数\n */\nexport function filterItems<T, K>(\n  arr: T[],\n  deleteItems: T[],\n  k: ArrayKFn<T, K> = returnItself,\n) {\n  const kFn = getKFn(k)\n  const kSet = new Set(deleteItems.map(kFn))\n  return arr.filter((v, i, arr) => !kSet.has(kFn(v, i, arr)))\n}\n","import { returnItself } from '../function/returnItself'\nimport { ArrayKFn } from '../interface/ArrayKFn'\nimport { getKFn } from './getKFn'\n\n/**\n * 数组之间的差异结果对象结构接口\n * left 第一个数组独有的元素列表\n * right 第二个数组独有的元素列表\n * common 两个数组共有的元素列表。注意: 这里的元素实质上是从第一个集合获取的\n */\nexport interface IArrayDiff<L, R> {\n  left: L[]\n  right: R[]\n  common: L[]\n}\n/**\n * 比较两个数组的差异\n * @param left 第一个数组\n * @param right 第二个数组\n * @param k 每个元素的唯一标识产生函数\n * @returns 比较的差异结果\n */\nexport function diffBy<L, R>(\n  left: L[],\n  right: R[],\n  k: ArrayKFn<L | R, any> = returnItself,\n): IArrayDiff<L, R> {\n  const kFn = getKFn(k)\n  // 首先得到两个 kSet 集合用于过滤\n  const kThanSet = new Set(left.map(kFn))\n  const kThatSet = new Set(right.map(kFn))\n  const leftUnique = left.filter((v, ...args) => !kThatSet.has(kFn(v, ...args)))\n  const rightUnique = right.filter(\n    (v, ...args) => !kThanSet.has(kFn(v, ...args)),\n  )\n  const kLeftSet = new Set(leftUnique.map(kFn))\n  const common = left.filter((v, ...args) => !kLeftSet.has(kFn(v, ...args)))\n  return { left: leftUnique, right: rightUnique, common }\n}\n","import { diffBy } from './diffBy'\n\n/**\n * 比较两个数组的差异\n * @deprecated 已废弃，请使用更简洁的 {@link diffBy}\n */\nexport const arrayDiffBy = diffBy\n","/**\n * 使用 Generator 实现一个从 0 开始的无限自增序列\n */\nfunction* autoIncrementGenerator(): Generator {\n  for (let i = 0; ; i++) {\n    /**\n     * @returns 每次获取都返回循环中的当前迭代变量，然后暂停于此处\n     */\n    yield i\n  }\n}\n\n/**\n * 生成器对象\n */\nconst generator = autoIncrementGenerator()\n\n/**\n * 获取自增长序列的最新值\n * @returns 最新值\n */\nexport function autoIncrement(): number {\n  return generator.next().value\n}\n","/**\n * 转换接口\n * @interface\n */\nexport class IConverter {\n  /**\n   * 将字符串解析为字符串列表\n   *\n   * @param str 字符串\n   * @return {Array.<String>} 字符串列表\n   * @abstract\n   */\n  public from(str: string): string[] {\n    throw new Error('子类必须重写 from 函数')\n  }\n  /**\n   * 将字符串列表构造为字符串\n   *\n   * @param list 字符串列表\n   * @return {String} 字符串\n   * @abstract\n   */\n  public to(list: string[]): string {\n    throw new Error('子类必须重写 to 函数')\n  }\n}\n","import { IConverter } from './IConverter'\n\n/**\n * 驼峰风格解析\n */\nexport class CamelOrPascalFrom extends IConverter {\n  /**\n   * 将字符串解析为字符串列表\n   *\n   * @param str 字符串\n   * @return {Array.<String>} 字符串列表\n   * @override\n   */\n  public from(str: string): string[] {\n    const result = []\n    const len = str.length\n    let old = 0\n    for (let i = 0; i < len; i++) {\n      const c = str.charAt(i)\n      if (c >= 'A' && c <= 'Z') {\n        if (i !== 0) {\n          result.push(str.substring(old, i))\n        }\n        old = i\n      }\n    }\n    if (old !== str.length) {\n      result.push(str.substring(old, str.length))\n    }\n    return result\n  }\n}\n","import { toLowerCase } from '../toLowerCase'\nimport { toUpperCase } from '../toUpperCase'\nimport { CamelOrPascalFrom } from './CamelOrPascalFrom'\n\n/**\n * 小写开头的驼峰转换器\n *\n */\nexport class CamelConverter extends CamelOrPascalFrom {\n  /**\n   * 将字符串列表构造为字符串\n   *\n   * @param list 字符串列表\n   * @return {String} 字符串\n   * @override\n   */\n  public to(list: string[]): string {\n    return list.reduce((res, s, i) => {\n      const str = toLowerCase(s)\n      return (res +=\n        (i === 0 ? toLowerCase : toUpperCase)(str.substring(0, 1)) +\n        str.substring(1))\n    }, '')\n  }\n}\n","import { toLowerCase } from '../toLowerCase'\nimport { toUpperCase } from '../toUpperCase'\nimport { CamelOrPascalFrom } from './CamelOrPascalFrom'\n\n/**\n * 大写开头的驼峰转换器\n */\nexport class PascalConverter extends CamelOrPascalFrom {\n  /**\n   * 将字符串列表构造为字符串\n   *\n   * @param list 字符串列表\n   * @return {String} 字符串\n   * @override\n   */\n  public to(list: string[]): string {\n    return list.reduce((res, s) => {\n      const str = toLowerCase(s)\n      return (res += toUpperCase(str.substring(0, 1)) + str.substring(1))\n    }, '')\n  }\n}\n","import { IConverter } from './IConverter'\n\n/**\n * 下划线风格解析\n */\nexport class SnakeOrScreamingSnakeFrom extends IConverter {\n  /**\n   * 将字符串解析为字符串列表\n   *\n   * @param str 字符串\n   * @return {Array.<String>} 字符串列表\n   * @override\n   */\n  public from(str: string): string[] {\n    return str.split('_')\n  }\n}\n","import { toLowerCase } from '../toLowerCase'\nimport { SnakeOrScreamingSnakeFrom } from './SnakeOrScreamingSnakeFrom'\n\n/**\n * 小写下划线的转换器\n */\nexport class SnakeConverter extends SnakeOrScreamingSnakeFrom {\n  /**\n   * 将字符串列表构造为字符串\n   *\n   * @param list 字符串列表\n   * @return {String} 字符串\n   * @override\n   */\n  public to(list: string[]): string {\n    return list.map(toLowerCase).join('_')\n  }\n}\n","import { toUpperCase } from '../toUpperCase'\nimport { SnakeOrScreamingSnakeFrom } from './SnakeOrScreamingSnakeFrom'\n\n/**\n * 大写下划线的转换器\n */\nexport class ScreamingSnakeConverter extends SnakeOrScreamingSnakeFrom {\n  /**\n   * 将字符串列表构造为字符串\n   *\n   * @param list 字符串列表\n   * @return {String} 字符串\n   * @override\n   */\n  public to(list: string[]): string {\n    return list.map(toUpperCase).join('_')\n  }\n}\n","/**\n * @enum {Symbol} 字符串风格常量对象\n */\nexport enum StringStyleType {\n  /**\n   * 小写驼峰\n   */\n  Camel = 1,\n  /**\n   * 大写驼峰\n   */\n  Pascal,\n  /**\n   * 小写下划线\n   */\n  Snake,\n  /**\n   * 大写下划线\n   */\n  ScreamingSnake,\n}\n","import { IConverter } from './IConverter'\nimport { CamelConverter } from './CamelConverter'\nimport { PascalConverter } from './PascalConverter'\nimport { SnakeConverter } from './SnakeConverter'\nimport { ScreamingSnakeConverter } from './ScreamingSnakeConverter'\nimport { StringStyleType } from './StringStyleType'\n\n/**\n * 转换器工厂\n */\nexport class ConverterFactory {\n  /**\n   * 获取一个转换器实例\n   *\n   * @param styleType 转换风格，使用了 {@link stringStyleType} 定义的常量对象\n   * @return {IConverter} 转换器对象\n   * @throws 如果获取未定义过的转换器，则会抛出异常\n   */\n  public static getInstance(styleType: StringStyleType): IConverter {\n    switch (styleType) {\n      case StringStyleType.Camel:\n        return new CamelConverter()\n      case StringStyleType.Pascal:\n        return new PascalConverter()\n      case StringStyleType.Snake:\n        return new SnakeConverter()\n      case StringStyleType.ScreamingSnake:\n        return new ScreamingSnakeConverter()\n      default:\n        throw new Error('No corresponding converter found')\n    }\n  }\n}\n","import { stringValidator } from '../StringValidator'\nimport { ConverterFactory } from './ConverterFactory'\nimport { IConverter } from './IConverter'\nimport { StringStyleType } from './StringStyleType'\n\n/**\n * 字符串风格转换器\n * 请不要直接使用构造函数创建，而是用 {@link StringStyleUtil.getConverter} 来获得一个转换器\n * @private\n */\nexport class StringStyleConverter {\n  private fromConverter: IConverter\n  private toConverter: IConverter\n  /**\n   * 构造一个字符串任意风格转换器\n   * @param from 转换字符串的风格\n   * @param to 需要转换的风格\n   * @private\n   */\n  constructor(from: StringStyleType, to: StringStyleType) {\n    /**\n     * @field 解析字符串风格的转换器\n     * @type {IConverter}\n     * @private\n     */\n    this.fromConverter = ConverterFactory.getInstance(from)\n    /**\n     * @field 构造字符串风格的转换器\n     * @type {IConverter}\n     * @private\n     */\n    this.toConverter = ConverterFactory.getInstance(to)\n  }\n  /**\n   * 转换字符串的风格\n   *\n   * @param str 要转换的字符串\n   * @return {String} 转换得到的字符串\n   */\n  public convert(str: string): string {\n    if (stringValidator.isEmpty(str)) {\n      return str\n    }\n    return this.toConverter.to(this.fromConverter.from(str))\n  }\n}\n","/**\n * 内存缓存接口\n */\nexport interface BaseMemoryCache<K, V> {\n  /**\n   * 添加一个缓存\n   * @param key\n   * @param val\n   */\n  add(key: K, val: V): void\n  /**\n   * 根据 key 获取一个缓存\n   * @param key\n   */\n  get(key: K): V | undefined\n  /**\n   * 删除一个缓存\n   * @param key\n   */\n  delete(key: K): void\n  /**\n   * 判断是否有一个缓存\n   * @param key\n   */\n  has(key: K): boolean\n  /**\n   * 当前缓存数量\n   */\n  readonly size: number\n  /**\n   * 清空当前所有缓存\n   */\n  clear(): void\n}\n\ninterface MemoryCacheConfig {\n  /**\n   * 缓存的最大容量\n   */\n  limit?: number\n}\n\n/**\n * 基本缓存实现\n * 主要封装通用的 delete/size 函数\n */\nabstract class BasicMemoryCache<K, V> implements BaseMemoryCache<K, V> {\n  protected cache = new Map<K, V>()\n  protected readonly limit: number\n  constructor({ limit = Infinity }: MemoryCacheConfig = {}) {\n    if (limit <= 0) {\n      throw new Error('缓存的最大容量至少为 1')\n    }\n    this.limit = limit\n  }\n\n  delete(key: K): void {\n    this.cache.delete(key)\n  }\n\n  clear(): void {\n    this.cache.clear()\n  }\n\n  get size() {\n    return this.cache.size\n  }\n\n  abstract add(key: K, val: V): void\n  abstract get(key: K): V | undefined\n  abstract has(key: K): boolean\n}\n\n/**\n * FIFO 算法\n */\nexport class MemoryCacheFIFO<K = any, V = any> extends BasicMemoryCache<K, V> {\n  add(key: K, val: V): void {\n    const diff = this.cache.size + 1 - this.limit\n    if (diff > 0) {\n      const keys = [...this.cache.keys()].slice(0, diff)\n      keys.forEach(k => this.delete(k))\n    }\n    this.cache.set(key, val)\n  }\n\n  delete(key: K): void {\n    this.cache.delete(key)\n  }\n\n  get(key: K): V | undefined {\n    return this.cache.get(key)\n  }\n\n  get size() {\n    return this.cache.size\n  }\n\n  has(key: K): boolean {\n    return this.cache.has(key)\n  }\n}\n\n/**\n * IFU 算法\n */\nexport class MemoryCacheLFU<K = any, V = any> extends BasicMemoryCache<K, V> {\n  private lfuMap = new Map<K, number>()\n\n  add(key: K, val: V): void {\n    const diff = this.cache.size + 1 - this.limit\n    if (diff > 0) {\n      const keys = [...this.cache.keys()]\n        .sort((k1, k2) => this.lfuMap.get(k1)! - this.lfuMap.get(k2)!)\n        .slice(0, diff)\n      keys.forEach(k => this.delete(k))\n    }\n    this.cache.set(key, val)\n    this.lfuMap.set(key, 0)\n  }\n\n  get(key: K): V | undefined {\n    this.lfuMap.set(key, this.lfuMap.get(key)! + 1)\n    return this.cache.get(key)\n  }\n\n  has(key: K): boolean {\n    this.lfuMap.set(key, this.lfuMap.get(key)! + 1)\n    return this.cache.has(key)\n  }\n\n  delete(key: K): void {\n    super.delete(key)\n    this.lfuMap.delete(key)\n  }\n\n  clear(): void {\n    super.clear()\n    this.lfuMap.clear()\n  }\n}\n\n/**\n * LRU 算法\n */\nexport class MemoryCacheLRU<K = any, V = any> extends BasicMemoryCache<K, V> {\n  private i = 0\n  private get idx() {\n    return this.i++\n  }\n  private lruMap = new Map<K, number>()\n\n  add(key: K, val: V): void {\n    const diff = this.cache.size + 1 - this.limit\n    if (diff > 0) {\n      const keys = [...this.cache.keys()]\n        .sort((k1, k2) => this.lruMap.get(k1)! - this.lruMap.get(k2)!)\n        .slice(0, diff)\n      console.log(keys, this.lruMap)\n      keys.forEach(k => this.delete(k))\n    }\n    this.cache.set(key, val)\n    this.lruMap.set(key, this.idx)\n  }\n\n  get(key: K): V | undefined {\n    this.lruMap.set(key, this.idx)\n    return this.cache.get(key)\n  }\n\n  has(key: K): boolean {\n    this.lruMap.set(key, this.idx)\n    return this.cache.has(key)\n  }\n\n  delete(key: K): void {\n    super.delete(key)\n    this.lruMap.delete(key)\n  }\n\n  clear(): void {\n    super.clear()\n    this.lruMap.clear()\n  }\n}\n\nexport enum MemoryCacheEnum {\n  //先进先出\n  Fifo,\n  //最少使用\n  Lfu,\n  //最近使用\n  Lru,\n}\n\n/**\n * 缓存工厂类\n */\nexport class MemoryCacheFactory {\n  static create<K = any, V = any>(\n    type: MemoryCacheEnum,\n    config?: MemoryCacheConfig,\n  ): BaseMemoryCache<K, V> {\n    switch (type) {\n      case MemoryCacheEnum.Fifo:\n        return new MemoryCacheFIFO(config)\n      case MemoryCacheEnum.Lfu:\n        return new MemoryCacheLFU(config)\n      case MemoryCacheEnum.Lru:\n        return new MemoryCacheLRU(config)\n    }\n  }\n}\n","import { compatibleAsync } from '../async/compatibleAsync'\nimport { MemoryCacheEnum, MemoryCacheFactory } from '../cache/MemoryCache'\nimport { Func } from 'liuli-types'\n\nconst onceOfSameParamIdentity = (fn: Func, args: any[]) =>\n  `onceOfSameParam-${fn.toString()}-${JSON.stringify(args)}`\n\n/**\n * 包装一个函数为指定参数只执行一次的函数\n * @param fn 需要包装的函数\n * @param identity 参数转换的函数，参数为需要包装函数的参数\n * @param memoryCache\n * @returns 需要被包装的函数\n */\nfunction _onceOfSameParam<Fn extends Func>(\n  fn: Fn,\n  identity = onceOfSameParamIdentity,\n  memoryCache = MemoryCacheFactory.create(MemoryCacheEnum.Fifo),\n): Fn & { origin: Fn; clear: (...keys: any[]) => void } {\n  const res = new Proxy(fn, {\n    apply(_, _this, args) {\n      const key = identity(fn, args)\n      const old = memoryCache.get(key)\n      if (old !== undefined) {\n        return old\n      }\n      const res = Reflect.apply(_, _this, args)\n      return compatibleAsync(res, res => {\n        memoryCache.add(key, res)\n        return res\n      })\n    },\n  })\n  return Object.assign(res, {\n    origin: fn,\n    clear(...keys: any[]): void {\n      if (keys.length) {\n        memoryCache.clear()\n      } else {\n        keys.forEach(key => memoryCache.delete(key))\n      }\n    },\n  })\n}\n\nexport const onceOfSameParam = Object.assign(_onceOfSameParam, {\n  identity: onceOfSameParamIdentity,\n})\n","import { StringStyleConverter } from './StringConverter/StringStyleConverter'\nimport { StringStyleType } from './StringConverter/StringStyleType'\nimport { onceOfSameParam } from '../function/onceOfSameParam'\n\n/**\n * 包装获取字符串风格转换器\n * 此处采用了单例模式，每种转换器只会有一个\n *\n * @param from 解析风格\n * @param to 转换风格\n * @return {StringStyleConverter} 转换器的实例\n */\nconst _getConverter = onceOfSameParam(\n  /**\n   * @param from 解析风格\n   * @param to 转换风格\n   * @return {StringStyleConverter} 转换器的实例\n   */\n  (from: StringStyleType, to: StringStyleType): StringStyleConverter =>\n    new StringStyleConverter(from, to),\n)\n\n/**\n * 字符串风格转换工具类\n */\nexport class StringStyleUtil {\n  /**\n   * 获取一个转换器的实例\n   * 该函数获取的转换器可以任意复用，请优先使用函数\n   * @param from 解析风格\n   * @param to 转换风格\n   * @return {StringStyleConverter} 转换器的实例\n   */\n  public static getConverter(\n    from: StringStyleType,\n    to: StringStyleType,\n  ): StringStyleConverter {\n    return _getConverter(from, to)\n  }\n  /**\n   * 直接转换字符串的风格\n   * 请优先使用可以复用的 {@link StringStyleUtil.getConverter} 函数\n   * @param from 解析风格\n   * @param to 转换风格\n   * @param str 要转换的字符串\n   * @return {String} 转换得到的字符串\n   */\n  public static convert(\n    from: StringStyleType,\n    to: StringStyleType,\n    str: string,\n  ): string {\n    return StringStyleUtil.getConverter(from, to).convert(str)\n  }\n}\n","import { TypeValidator } from './TypeValidator'\n\n/**\n * 递归使对象不可变\n * @param obj 任何非空对象\n * @returns 新的不可变对象\n */\nexport function deepFreeze<T extends object>(obj: T): T {\n  const freeze = (v: any) => {\n    if (TypeValidator.isObject(v)) {\n      deepFreeze(v)\n    }\n  }\n  // 数组和对象分别处理\n  if (TypeValidator.isArray(obj)) {\n    obj.forEach(freeze)\n  } else if (TypeValidator.isObject(obj)) {\n    Object.keys(obj)\n      .map(k => Reflect.get(obj, k))\n      .forEach(freeze)\n  }\n  return Object.freeze(obj)\n}\n","import { isNullOrUndefined } from './isNullOrUndefined'\nimport { TypeValidator } from './TypeValidator'\n\n// noinspection JSPrimitiveTypeWrapperUsage\n/**\n * 包装对象，使其成为可以任意深度调用而不会出现 undefined 调用的问题\n * 注意: 该函数不能进行递归调用（{@link JSON.stringfy}），一定会造成堆栈溢出的问题（RangeError: Maximum call stack size exceeded）\n * @param obj 任意一个 Object 对象\n * @param [defaultValue] 默认值，默认为 {}\n * @returns 包装后的对象\n */\nexport function deepProxy<T extends object = object>(\n  obj: T = {} as any,\n  defaultValue: any = new String(),\n): any {\n  const handler = {\n    get(target: object, k: PropertyKey): object {\n      let v = Reflect.get(target, k)\n      if (isNullOrUndefined(v)) {\n        v = defaultValue\n      }\n      if (TypeValidator.isFunction(v)) {\n        return v.bind(target)\n      }\n      if (!TypeValidator.isObject(v)) {\n        return v\n      }\n      return new Proxy(v, handler)\n    },\n  }\n  return new Proxy(obj, handler)\n}\n","/**\n * 柯里化后返回的函数\n */\ninterface IRFunc extends Function {\n  /**\n   * 是否为柯里化函数，默认为 true 以标识柯里化函数\n   */\n  _curry: boolean\n  /**\n   * 剩余参数的长度\n   */\n  _length: number\n  /**\n   * 重写 toString 便于调试\n   */\n  toString: () => string\n}\n\n/**\n * 将函数包装为柯里化函数\n * 注: 该函数模仿了 Lodash 的 curry 函数\n * @param fn 需要包装的函数\n * @param  {...any} args 应用的部分参数\n * @returns 包装后的函数\n * @deprecated 由于之前的理解错误，该函数在下个大版本将会被废弃，请使用命名更合适的 {@link partial}\n */\nexport function curry(fn: Function, ...args: any[]): IRFunc {\n  const realArgs = args.filter(arg => arg !== curry._)\n  // 如果函数参数足够则调用传入的函数\n  if (realArgs.length >= fn.length) {\n    return fn(...realArgs)\n  }\n\n  /**\n   * 最终返回的函数\n   * @param otherArgs 接受任意参数\n   * @returns 返回一个函数，或者函数调用完成返回结果\n   */\n  function innerFn(...otherArgs: any[]): Function {\n    // 记录需要移除补到前面的参数\n    const removeIndexSet = new Set()\n    let i = 0\n    const newArgs = args.map(arg => {\n      if (\n        arg !== curry._ ||\n        otherArgs[i] === undefined ||\n        otherArgs[i] === curry._\n      ) {\n        return arg\n      }\n      removeIndexSet.add(i)\n      // 每次补偿前面的 curry._ 参数计数器 +1\n      return otherArgs[i++]\n    })\n    const newOtherArgs = otherArgs.filter((_v, i) => !removeIndexSet.has(i))\n    return curry(fn, ...newArgs, ...newOtherArgs)\n  }\n  // 定义柯里化函数的剩余参数长度，便于在其他地方进行部分参数应用\n  // 注: 不使用 length 属性的原因是 length 属性\n  innerFn._length = fn.length - args.filter(arg => arg !== curry._).length\n  // 自定义 toString 函数便于调试\n  innerFn.toString = () =>\n    `name: ${fn.name}, args: [${args.map(o => o.toString()).join(', ')}]`\n  innerFn._curry = true\n  return innerFn\n}\n\n/**\n * 柯里化的占位符，需要应用后面的参数时使用\n * 例如 {@link curry(fn)(curry._, 1)} 意味着函数 fn 的第二个参数将被确定为 1\n */\ncurry._ = Symbol('_')\n","import { returnItself } from '../function/returnItself'\nimport { ArrayKFn } from '../interface/ArrayKFn'\nimport { getKFn } from './getKFn'\n\n/**\n * 快速根据指定函数对数组进行排序\n * TODO 此处有 bug，会改变原数组的顺序（在计算的 key 值相同的情况下）\n * 注: 使用递归实现，对于超大数组（其实前端的数组不可能特别大吧？#笑）可能造成堆栈溢出\n * @param arr 需要排序的数组\n * @param k 对数组中每个元素都产生可比较的值的函数，默认返回自身进行比较\n * @returns 排序后的新数组\n */\nexport function sortBy<T, K>(arr: T[], k: ArrayKFn<T, K> = returnItself): T[] {\n  const kFn = getKFn(k)\n  //  此处为了让 typedoc 能生成文档而不得不加上类型\n  const newArr: Array<[T, number]> = arr.map((v, i) => [v, i] as [T, number])\n  function _sort<V>(arr: V[], fn: (v1: V, v2: V) => number): V[] {\n    // 边界条件，如果传入数组的值\n    if (arr.length <= 1) {\n      return arr\n    }\n    // 根据中间值对数组分治为两个数组\n    const medianIndex = Math.floor(arr.length / 2)\n    const medianValue = arr[medianIndex]\n    const left = []\n    const right = []\n    for (let i = 0, len = arr.length; i < len; i++) {\n      if (i === medianIndex) {\n        continue\n      }\n      const v = arr[i]\n      if (fn(v, medianValue) <= 0) {\n        left.push(v)\n      } else {\n        right.push(v)\n      }\n    }\n    return _sort(left, fn)\n      .concat([medianValue])\n      .concat(_sort(right, fn))\n  }\n  return _sort(newArr, ([t1, i1], [t2, i2]) => {\n    const k1 = kFn(t1, i1, arr)\n    const k2 = kFn(t2, i2, arr)\n    if (k1 === k2) {\n      return 0\n    } else if (k1 < k2) {\n      return -1\n    } else {\n      return 1\n    }\n  }).map(([_v, i]) => arr[i])\n}\n","import { dateFormat } from './dateFormat'\nimport { dateParse } from './dateParse'\nimport { isNullOrUndefined } from '../obj/isNullOrUndefined'\nimport { stringValidator } from '../string/StringValidator'\nimport { Nullable } from '../interface/Nullable'\n\n/**\n * 日期格式化器\n * 包含格式化为字符串和解析字符串为日期的函数\n */\nexport class DateFormatter {\n  /**\n   * 日期格式化器\n   */\n  public static dateFormatter = new DateFormatter('yyyy-MM-dd')\n  /**\n   * 时间格式化器\n   */\n  public static timeFormatter = new DateFormatter('hh:mm:ss')\n  /**\n   * 日期时间格式化器\n   */\n  public static dateTimeFormatter = new DateFormatter('yyyy-MM-dd hh:mm:ss')\n  /**\n   * 构造函数\n   * @param fmt 日期时间格式\n   */\n  constructor(private fmt: string) {}\n  /**\n   * 格式化\n   * @param date 需要格式化的日期\n   * @returns 格式化的字符串\n   */\n  public format(date: Date | null): string {\n    if (isNullOrUndefined(date)) {\n      return ''\n    }\n    return dateFormat(date!, this.fmt)\n  }\n  /**\n   * 解析字符串为日期对象\n   * @param str 字符串\n   * @returns 解析得到的日期\n   */\n  public parse(str: string | null | undefined): Nullable<Date> {\n    if (stringValidator.isEmpty(str)) {\n      return null\n    }\n    return dateParse(str!, this.fmt)\n  }\n  /**\n   * 将日期时间字符串转换为前端指定格式的字符串\n   * 主要适用场景是前端接收到后端的日期时间一般是一个字符串，然而需要自定义格式的时候还必须先创建 {@link Date} 对象才能格式化，略微繁琐，故使用该函数\n   * @param str 字符串\n   * @param parseFmt 解析的日期时间格式。默认直接使用 {@link new Date()} 创建\n   * @returns 转换后得到的字符串\n   */\n  public strFormat(str: string | null | undefined, parseFmt?: string): string {\n    if (stringValidator.isEmpty(str)) {\n      return ''\n    }\n    const date = parseFmt ? dateParse(str!, parseFmt) : new Date(str!)\n    return dateFormat(date!, this.fmt)\n  }\n}\n","import { ArrayCallback } from '../interface/ArrayCallback'\n\n/**\n * 查询符合条件的元素的下标\n * @param arr 查询的数组\n * @param fn 谓词\n * @param num 查询的第几个符合条件的元素，默认为 1，和默认的 findIndex 行为保持一致\n * @returns 符合条件的元素的下标，如果没有则返回 -1\n */\nexport function findIndex<T>(\n  arr: T[],\n  fn: ArrayCallback<T, boolean>,\n  num = 1,\n): number {\n  let k = 0\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (fn.call(arr, arr[i], i, arr) && ++k >= num) {\n      return i\n    }\n  }\n  return -1\n}\n","import { curry } from './curry'\nimport { findIndex } from '../array/findIndex'\n\n/**\n * 连接两个函数并自动柯里化\n * 注: 该函数依赖于 length，所以不支持默认参数以及不定参数\n * @param fn1 第一个函数\n * @param fn2 第二个函数\n * @returns 连接后的函数\n */\nconst _compose = (fn1: Function, fn2: Function): Function => {\n  return function(...args: any[]) {\n    const i = findIndex(\n      args,\n      v => v !== curry._,\n      (fn1 as any)._length || fn1.length,\n    )\n    const res = curry(fn1, ...args)\n    // 如果这个函数的参数不足，则返回它\n    if (i === -1) {\n      return _compose(res, fn2)\n    }\n    // 否则将结果以及多余的参数应用到下一个函数上\n    return curry(fn2, res, ...args.slice(i + 1))\n  }\n}\n\n/**\n * 将多个函数组合起来\n * 前面函数的返回值将变成后面函数的第一个参数，如果到了最后一个函数执行完成，则直接返回\n * 注: 该函数是自动柯里化，将对所有传入的函数进行柯里化处理\n * 注: 该函数支持一次调用传入全部函数的参数\n * @param fns 多个需要连接函数\n * @returns 连接后的柯里化函数\n * TODO 这里需要进行类型优化\n */\nexport function compose(...fns: Function[]): Function {\n  return fns.reduceRight((fn1, fn2) => _compose(fn2, fn1))\n}\n","import { excludeFields } from './excludeFields'\nimport { TypeValidator } from './TypeValidator'\n\n/**\n * 递归排除对象中的指定字段\n * @param obj 需要排除的对象\n * @param  {...obj} fields 需要排除的字段\n */\nexport function deepExcludeFields<T extends object>(\n  obj: T,\n  ...fields: PropertyKey[]\n): T {\n  if (TypeValidator.isArray(obj)) {\n    return obj.map(o => deepExcludeFields(o, ...fields)) as any\n  } else if (TypeValidator.isDate(obj)) {\n    return obj\n  } else if (TypeValidator.isObject(obj)) {\n    const temp = excludeFields(obj, ...(fields as any))\n    return Object.keys(temp).reduce((res, k) => {\n      const v = Reflect.get(res, k)\n      Reflect.set(res, k, deepExcludeFields(v, ...fields))\n      return res\n    }, temp) as any\n  } else {\n    return obj\n  }\n}\n","import { deepExcludeFields } from './deepExcludeFields'\n\n/**\n * 递归排除对象中的指定字段\n * @param obj 需要排除的对象\n * @param  {...obj} fields 需要排除的字段\n * @deprecated 已废弃，请使用统一使用 `deep` 开头的 {@link deepExcludeFields} 函数\n */\nexport function excludeFieldsDeep<T extends object>(\n  obj: T,\n  ...fields: PropertyKey[]\n): T {\n  return deepExcludeFields(obj, ...fields)\n}\n","import { ICacheOption } from './ICacheOption'\n\n/**\n * 缓存值的构造函数对象参数定义接口\n */\ninterface ICacheValInit {\n  /**\n   * 缓存的 key 值\n   */\n  key: string\n  /**\n   * 缓存的 value\n   */\n  val: any\n  /**\n   * 缓存的选项\n   */\n  cacheOption: ICacheOption\n}\n\n/**\n * 缓存的值\n */\nexport class CacheVal implements ICacheValInit {\n  public key!: string\n  public val: any\n  public cacheOption!: ICacheOption\n  /**\n   * 构造函数\n   * @param options 缓存值对象\n   * @param options.key 缓存的键原始值\n   * @param options.val 缓存的值\n   * @param options.cacheOption 缓存的选项\n   */\n  constructor(options: Partial<ICacheValInit> = {}) {\n    Object.assign(this, options)\n  }\n}\n","/**\n * 无限的超时时间\n * TODO 此处暂时使用字符串作为一种折衷方法，因为 Symbol 无法被序列化为 JSON，反向序列化也是不可能的\n */\nexport const TimeoutInfinite = 'TimeoutInfinite'\n\n/**\n * 缓存选项\n * @param options.timeout 超时时间，以毫秒为单位\n * @param options.timeStart 缓存开始时间\n * @param options.serialize 缓存序列化\n * @param options.deserialize 缓存反序列化\n */\nexport interface ICacheOption {\n  timeout: number | string\n  timeStart: number\n  serialize: (val: any) => string\n  deserialize: (s: string) => any\n}\n","import { ICache } from './ICache'\nimport { CacheVal } from './CacheVal'\nimport { ICacheOption, TimeoutInfinite } from './ICacheOption'\nimport { safeExec } from '../function/safeExec'\nimport { isNullOrUndefined } from '../obj/isNullOrUndefined'\nimport { not } from '../function/CombinedPredicate'\n\n/**\n * 使用 LocalStorage 实现的缓存\n * 1. get: 根据 key 获取\n * 2. set: 根据 key value 设置，会覆盖\n * 3. touch: 获取并刷新超时时间\n * 4. add: 根据 key value 添加，不会覆盖\n * 5. del: 根据 key 删除\n * 6. clearExpired: 清除所有过期的缓存\n */\nexport class LocalStorageCache<T> implements ICache<T> {\n  public localStorage: Storage\n  public cacheOption: ICacheOption\n  /**\n   * 构造函数\n   * @param cacheOption 全局缓存选项\n   */\n  constructor({\n    timeout = TimeoutInfinite,\n    serialize = JSON.stringify,\n    deserialize = JSON.parse,\n  }: Partial<ICacheOption> = {}) {\n    // 这里必须强制转换，因为 timeStart 在全局选项中是不可能存在的\n    this.cacheOption = {\n      timeout,\n      serialize,\n      deserialize,\n    } as any\n    /**\n     * 缓存对象，默认使用 localStorage\n     */\n    this.localStorage = window.localStorage\n    // 创建后将异步清空所有过期的缓存\n    this.clearExpired()\n  }\n  /**\n   * 清空所有过期的 key\n   * 注: 该函数是异步执行的\n   */\n  public async clearExpired() {\n    const local = this.localStorage\n    const getKeys = () => {\n      const len = local.length\n      const res = []\n      for (let i = 0; i < len; i++) {\n        res.push(local.key(i))\n      }\n      return res\n    }\n    getKeys()\n      .filter(not(isNullOrUndefined))\n      .map(key => safeExec(() => JSON.parse(local.getItem(key!)!)))\n      .filter(\n        cacheVal =>\n          !isNullOrUndefined(cacheVal) &&\n          isNullOrUndefined(cacheVal.cacheOption),\n      )\n      // TODO 这里暂时加个补丁，过滤掉 timeStart,timeout 为 undefined 的缓存\n      .filter(({ cacheOption = {} as any }: CacheVal) => {\n        const { timeStart, timeout } = cacheOption\n        if (isNullOrUndefined(timeStart) || isNullOrUndefined(timeout)) {\n          return false\n        }\n        return timeout !== TimeoutInfinite && Date.now() - timeStart > timeout\n      })\n      .forEach(({ key }: CacheVal) => local.removeItem(key))\n  }\n  /**\n   * 根据 key + value 添加\n   * 如果不存在则添加，否则忽略\n   * @param key 缓存的 key\n   * @param val 缓存的 value\n   * @param cacheOption 缓存的选项，默认为无限时间\n   * @override\n   */\n  public add(key: string, val: T, timeout?: number) {\n    const result = this.get(key)\n    if (result !== null) {\n      return\n    }\n    this.set(key, val, timeout)\n  }\n  /**\n   * 根据指定的 key 删除\n   * 如果存在则删除，否则忽略\n   * @param key 删除的 key\n   * @override\n   */\n  public del(key: string) {\n    this.localStorage.removeItem(key)\n  }\n  /**\n   * 根据指定的 key 修改\n   * 不管是否存在都会设置\n   * @param key 修改的 key\n   * @param val 修改的 value\n   * @param timeout 修改的选项\n   * @override\n   */\n  public set(key: string, val: T, timeout?: number) {\n    this.localStorage.setItem(\n      key,\n      JSON.stringify(\n        new CacheVal({\n          key,\n          val: this.cacheOption.serialize(val),\n          // 我们不需要缓存序列化/反序列化策略（实际上也无法缓存）\n          cacheOption: {\n            timeStart: Date.now(),\n            timeout: timeout || this.cacheOption.timeout,\n          } as any,\n        }),\n      ),\n    )\n  }\n  /**\n   * 根据 key 获取\n   * 如果存在则获取，否则忽略\n   * @param key 指定的 key\n   * @param timeout 获取的选项\n   * @returns 获取到的缓存值\n   * @override\n   */\n  public get(key: string): T | null {\n    const str = this.localStorage.getItem(key)\n    const cacheVal: CacheVal = safeExec(() => JSON.parse(str!))\n    if (\n      isNullOrUndefined(cacheVal) ||\n      isNullOrUndefined(cacheVal.cacheOption)\n    ) {\n      return null\n    }\n    const [timeStart, timeout, deserialize] = [\n      cacheVal.cacheOption.timeStart,\n      cacheVal.cacheOption.timeout,\n      this.cacheOption.deserialize,\n    ]\n    // 如果超时则删除并返回 null\n    if (timeout !== TimeoutInfinite && Date.now() - timeStart > timeout) {\n      this.del(key)\n      return null\n    }\n    try {\n      return deserialize(cacheVal.val)\n    } catch (e) {\n      this.del(key)\n      return null\n    }\n  }\n  /**\n   * 根据 key 获取并刷新超时时间\n   * @param key 指定的 key\n   * @param cacheOption 获取的选项\n   * @returns 获取到的缓存值\n   * @override\n   */\n  public touch(key: string): T | null {\n    const str = this.localStorage.getItem(key)\n    /**\n     * @type {CacheVal}\n     */\n    const cacheVal: CacheVal = safeExec(() => JSON.parse(str!))\n    if (\n      isNullOrUndefined(cacheVal) ||\n      isNullOrUndefined(cacheVal.cacheOption)\n    ) {\n      return null\n    }\n    const [timeStart, timeout, deserialize] = [\n      cacheVal.cacheOption.timeStart,\n      cacheVal.cacheOption.timeout,\n      this.cacheOption.deserialize,\n    ]\n    // 如果超时则删除并返回 null\n    if (timeout !== TimeoutInfinite && Date.now() - timeStart! > timeout) {\n      this.del(key)\n      return null\n    }\n    try {\n      const result = deserialize(cacheVal.val)\n      this.set(key, result, { timeStart: Date.now(), timeout } as any)\n      return result\n    } catch (e) {\n      this.del(key)\n      return null\n    }\n  }\n}\n","import { LocalStorageCache } from './LocalStorageCache'\nimport { ReturnFunc } from '../interface/ReturnFunc'\nimport { compatibleAsync } from '../async/compatibleAsync'\n\n/**\n * 默认使用的 {@link ICache} 接口的缓存实现\n */\nconst cache = new LocalStorageCache()\n\n/**\n * 缓存工具类可选参数项类型\n */\ninterface ICacheUtilOptions {\n  /**\n   * 函数唯一标识，默认为函数 toString()\n   */\n  identity: string\n  /**\n   * 缓存超时时间，默认为无限\n   */\n  timeout: number\n}\n\n/**\n * 缓存后的函数\n */\ninterface ICacheFunc<R> extends ReturnFunc<R> {\n  /**\n   * 所包装的原函数\n   * @type {Function}\n   */\n  origin: ReturnFunc<R>\n  /**\n   * 清空缓存，清空指定参数调用时的函数缓存\n   * @type {Function}\n   */\n  clear: ReturnFunc<void>\n}\n/**\n * 缓存工具类\n * 主要实现缓存高阶函数的封装\n */\nexport class CacheUtil {\n  /**\n   * 将指定函数包装为只调用一次为缓存函数\n   * @param fn 需要包装的函数\n   * @param options 缓存选项对象。可选项\n   * @param options.identity 缓存标识。默认为函数 {@link toString}，但有时候不太可行（继承自基类的函数）\n   * @param options.timeout 缓存时间。默认为无限\n   * @returns 包装后的函数\n   */\n  public static once<R>(\n    fn: ReturnFunc<R>,\n    { identity = fn.toString(), timeout }: Partial<ICacheUtilOptions> = {},\n  ): ICacheFunc<R> {\n    const generateKey = () => `CacheUtil.onceOfSameParam-${identity}`\n    const innerFn = new Proxy(fn, {\n      apply(_, _this, args) {\n        const key = generateKey()\n        const val = cache.get(key)\n        if (val !== null) {\n          return val\n        }\n        return compatibleAsync(Reflect.apply(_, _this, args), res => {\n          cache.set(key, res, timeout)\n          return res\n        })\n      },\n    })\n    return Object.assign(innerFn, {\n      origin: fn,\n      clear(): void {\n        cache.del(generateKey())\n      },\n    })\n  }\n  /**\n   * 包裹函数为缓存函数\n   * @param fn 一个接受一些参数并返回结果的函数\n   * @param options 缓存选项对象。可选项\n   * @param options.identity 缓存标识。默认为函数 {@link toString}，但有时候不太可行（继承自基类的函数）\n   * @param options.timeout 缓存时间。默认为无限\n   * @returns 带有缓存功能的函数\n   */\n  public static onceOfSameParam<R>(\n    fn: ReturnFunc<R>,\n    { identity = fn.toString(), timeout }: Partial<ICacheUtilOptions> = {},\n  ): ICacheFunc<R> {\n    const generateKey = (args: any[]) =>\n      `CacheUtil.onceOfSameParam-${identity}-${JSON.stringify(args)}`\n    const innerFn = new Proxy(fn, {\n      apply(_, _this, args) {\n        const key = generateKey(args)\n        const val = cache.get(key)\n        if (val !== null) {\n          return val\n        }\n        return compatibleAsync(Reflect.apply(_, _this, args), res => {\n          cache.set(key, res, timeout)\n          return res\n        })\n      },\n    })\n    return Object.assign(innerFn, {\n      origin: fn,\n      clear(...args: any): void {\n        cache.del(generateKey(args))\n      },\n    })\n  }\n}\n\n/**\n * 导出一个默认的缓存工具对象\n * @deprecated 已废弃，请直接使用类的静态函数\n */\nexport const cacheUtil = CacheUtil\n","/**\n * 一个空的函数\n * @param args 接受任何参数\n */\nexport function emptyFunc(...args: any[]) {}\n","import { timing } from '../function/timing'\nimport { emptyFunc } from '../function/emptyFunc'\nimport { returnItself } from '../function/returnItself'\nimport { arrayToMap } from '../array/arrayToMap'\nimport { EmptyFunc } from '../interface/EmptyFunc'\n\n/**\n * 禁止他人调试网站相关方法的集合对象\n */\nexport class AntiDebug {\n  /**\n   * 不停循环 debugger 防止有人调试代码\n   * @returns 取消函数\n   */\n  public static cyclingDebugger(): EmptyFunc {\n    const res = setInterval(() => {\n      debugger\n    }, 100)\n    return () => clearInterval(res)\n  }\n\n  /**\n   * 检查是否正在 debugger 并调用回调函数\n   * @param fn 回调函数，默认为重载页面\n   * @returns 取消函数\n   */\n  public static checkDebug(\n    fn: Function = () => window.location.reload(),\n  ): EmptyFunc {\n    const res = setInterval(() => {\n      const diff = timing(() => {\n        debugger\n      })\n      if (diff > 500) {\n        console.log(diff)\n        fn()\n      }\n    }, 1000)\n    return () => clearInterval(res)\n  }\n\n  /**\n   * 禁用控制台调试输出\n   * @returns 取消函数\n   */\n  public static disableConsoleOutput(): EmptyFunc {\n    if (!window.console) {\n      return emptyFunc\n    }\n    const map = arrayToMap(Object.keys(console), returnItself, k => {\n      // @ts-ignore\n      const temp = console[k]\n      // @ts-ignore\n      console[k] = emptyFunc\n      return temp\n    })\n    return () => {\n      for (const [k, v] of map) {\n        // @ts-ignore\n        console[k] = v\n      }\n    }\n  }\n}\n/**\n * 禁止他人调试网站相关方法的集合对象\n * @deprecated 已废弃，请直接使用类的静态函数\n */\nexport const antiDebug = AntiDebug\n","import { stringValidator } from './StringValidator'\n\n/**\n * 判断一个字符串是否为空白的字符串\n * @param str 字符串\n * @returns 是否为空字符串\n * @deprecated 已废弃，请使用 {@link stringValidator#isBlank}\n */\nexport function isBlank(str: any): boolean {\n  return stringValidator.isBlank(str)\n}\n","import { stringValidator } from './StringValidator'\n\n/**\n * 判断一个字符串是否为空字符串\n * @param str 字符串\n * @returns 是否为空字符串\n * @deprecated 已废弃，请使用 {@link stringValidator#isEmpty}\n */\nexport function isEmpty(str: any): boolean {\n  return stringValidator.isEmpty(str)\n}\n","/**\n * 加载一个远程脚本文件\n * @param src 远程脚本路径\n * @returns 等待异步加载脚本完成\n */\nexport function loadScript(src: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script')\n    script.async = false\n    script.src = src\n    script.addEventListener('load', () => resolve())\n    script.addEventListener('error', reject)\n    document.body.appendChild(script)\n  })\n}\n","import { CombinedPredicate } from './CombinedPredicate'\nimport { PredicateFunc } from '../interface/PredicateFunc'\n\n/**\n * 将一个谓词函数取反\n * 如果是同步函数，则返回的函数也是同步的，否则返回的是取反后的异步函数\n * @param fn 要取反的函数\n * @returns 取反得到的函数\n * @deprecated 已废弃，请使用 {@link CombinedPredicate.not} 进行为此取反\n */\nexport function deny(fn: PredicateFunc): PredicateFunc {\n  return CombinedPredicate.not(fn)\n}\n","import { isNullOrUndefined } from '../obj/isNullOrUndefined'\n\n/**\n * 数组校验器\n */\nexport class ArrayValidator {\n  /**\n   * 是否为空数组\n   * @param array 空数组\n   * @returns 是否为空数组\n   */\n  public static isEmpty(array: any[] | null | undefined): boolean {\n    return (\n      isNullOrUndefined(array) ||\n      !(array instanceof Array) ||\n      array.length === 0\n    )\n  }\n}\n\n/**\n * 导出一个默认的数组校验对象\n * @deprecated 已废弃，请直接使用类的静态函数\n */\nexport const arrayValidator = ArrayValidator\n","/**\n * 路径工具\n */\nexport class PathUtil {\n  /**\n   * 拼接多个路径\n   *\n   * @param paths 路径数组\n   * @return {String} 拼接完成的路径\n   */\n  public static join(...paths: string[]): string {\n    return paths.reduce(PathUtil._join)\n  }\n  /**\n   * 路径分隔符\n   */\n  private static Separator = '/'\n  /**\n   * 拼接两个路径\n   *\n   * @param pathStart 开始路径\n   * @param pathEnd   结束路径\n   * @return {String} 拼接完成的两个路径\n   */\n  private static _join(pathStart: string, pathEnd: string): string {\n    if (pathStart.endsWith(PathUtil.Separator)) {\n      return (pathStart + pathEnd).replace(\n        PathUtil.Separator + PathUtil.Separator,\n        PathUtil.Separator,\n      )\n    }\n    if (pathEnd.startsWith(PathUtil.Separator)) {\n      return pathStart + pathEnd\n    }\n    return pathStart + PathUtil.Separator + pathEnd\n  }\n}\n\n/**\n * 导出一个路径工具类\n * @deprecated 已废弃，请直接使用类的静态函数\n */\nexport const pathUtil = PathUtil\n","import { emptyFunc } from '../function/emptyFunc'\n\nenum LoggerLevelEnum {\n  Debug = 0,\n  Log,\n  Info,\n  Warn,\n  Error,\n}\n\nconst enumMap: Partial<Record<keyof typeof console, LoggerLevelEnum>> = {\n  debug: LoggerLevelEnum.Debug,\n  log: LoggerLevelEnum.Log,\n  info: LoggerLevelEnum.Info,\n  warn: LoggerLevelEnum.Warn,\n  error: LoggerLevelEnum.Error,\n}\n\n/**\n * 自定义的日志类\n * 主要便于在开发环境下正常显示调试信息，在生产环境则默认关闭它\n */\nexport class Logger {\n  static Level = LoggerLevelEnum\n  /**\n   * 设置 enable 的 setter 属性，在改变时合并对应的子类对象实现\n   * @param enable 是否开启\n   */\n  set enable(enable: boolean) {\n    /**\n     * @field 是否开启全局控制台，该属性只写\n     */\n    ;(Object.keys(console) as (keyof typeof console)[]).forEach(k =>\n      Reflect.set(this, k, enable ? console[k] : emptyFunc),\n    )\n  }\n\n  /**\n   * 设置日志的级别\n   * @param level\n   */\n  set level(level: LoggerLevelEnum) {\n    ;(Object.keys(console) as (keyof typeof console)[])\n      .filter(k => Reflect.has(enumMap, k))\n      .forEach(k =>\n        Reflect.set(\n          this,\n          k,\n          Reflect.get(enumMap, k) >= level ? console[k] : emptyFunc,\n        ),\n      )\n  }\n\n  /**\n   * 开发日志：业务强相关调试日志，希望其他人开发时默认隐藏起来的日志（例如第三方服务的回调日志很多，但对于服务接入层的使用者并不关心）\n   */\n  debug = console.debug\n  /**\n   * 开发日志：业务相关调试日志，希望其他开发时也能看到的日志\n   */\n  log = console.log\n  /**\n   * 生产日志：开发环境也会打印的日志，希望在生产环境打印并且方便调试的日志\n   */\n  info = console.info\n  /**\n   * 警告日志：一些危险的操作可以在这里打印出来，同时会显示在生产环境（例如警告用户不要在控制台输入不了解的代码以避免账号安全）\n   */\n  warn = console.warn\n  /**\n   * 错误日志：发生错误时使用的日志，发生影响到用户的错误时必须使用该日志\n   */\n  error = console.error\n\n  dir = console.dir\n  dirxml = console.dirxml\n  table = console.table\n  trace = console.trace\n  group = console.group\n  groupCollapsed = console.groupCollapsed\n  groupEnd = console.groupEnd\n  clear = console.clear\n  count = console.count\n  assert = console.assert\n  time = console.time\n  timeEnd = console.timeEnd\n  timeStamp = console.timeStamp\n\n  /**\n   * 构造函数\n   * @param options 可选项\n   * @param options.enable 是否开启日志\n   */\n  constructor(\n    {\n      enable = true,\n      level = LoggerLevelEnum.Log,\n    }: Pick<Logger, 'enable' | 'level'> = {} as any,\n  ) {\n    this.enable = enable\n    this.level = level\n  }\n}\n\n/**\n * 导出一个全局可用的 Logger 对象\n * 使用 enable 属性控制是否开启日志输出，默认为 true\n */\nexport const logger = new Logger()\n","/**\n * 将 Object 对象 转换为 Map\n * @param obj Object 对象\n * @returns 转换得到的 Map 键值表\n */\nexport function objectToMap(\n  obj: Record<PropertyKey, any>,\n): Map<PropertyKey, any> {\n  return Object.keys(obj).reduce(\n    (map, k) => map.set(k, Reflect.get(obj, k)),\n    new Map(),\n  )\n}\n","import { returnItself } from '../function/returnItself'\nimport { INode } from './INode'\n\n/**\n * 列表转树可选项对象\n */\nexport interface IListToTreeOptoins<T> {\n  /**\n   * 桥接函数，默认返回自身\n   */\n  bridge?: (node: T) => INode\n  /**\n   * 判断节点是否为根节点。默认根节点的父节点为空\n   */\n  isRoot?: (node: INode) => boolean\n}\n\n/**\n * 将列表转换为树节点\n * 注: 该函数默认树的根节点只有一个，如果有多个，则返回一个数组\n * @param list 树节点列表\n * @param options 其他选项\n * @returns 树节点，或是树节点列表\n */\nexport function listToTree<T>(\n  list: T[],\n  {\n    bridge = returnItself,\n    isRoot = node => !node.parentId,\n  }: Partial<IListToTreeOptoins<T>> = {},\n): INode | INode[] | object {\n  const arr: INode[] = []\n  const res = list.reduce((root, _sub) => {\n    const sub = bridge!(_sub)\n    if (isRoot(sub)) {\n      root.push(sub)\n      return root\n    }\n    for (const _parent of list) {\n      const parent = bridge!(_parent)\n      if (sub.parentId === parent.id) {\n        parent.child = parent.child || []\n        parent.child.push(sub)\n        return root\n      }\n    }\n    return root\n  }, arr)\n  // 根据顶级节点的数量决定如何返回\n  const len = res.length\n  if (len === 0) return {}\n  if (len === 1) return res[0]\n  return res\n}\n","/**\n * 桥接对象不存在的字段\n * @param map 代理的字段映射 Map\n * @returns 转换一个对象为代理对象\n * @typeparam 类型解释：1. -readonly 是将使用者的 as const 修改为可变的字段，2. [P in keyof M] 从映射对象中取出所有的 key 作为字段，3. T[M[P] extends keyof T ? M[P] : never] 本质上只是 T[M[P]]]，只是 ts 不认为 M[P] 是 T 的字段，所以只能绕一下才能使用\n */\nexport function bridge<M extends object>(\n  map: M,\n): <T extends object>(\n  obj: T,\n) => T &\n  {\n    -readonly [P in keyof M]: T[M[P] extends keyof T ? M[P] : never]\n  } {\n  /**\n   * 为对象添加代理的函数\n   * @param obj 任何对象\n   * @returns 代理后的对象\n   */\n  return function(obj: any): any {\n    return new Proxy(obj as any, {\n      get(_, k) {\n        if (Reflect.has(map, k)) {\n          return Reflect.get(_, Reflect.get(map, k))\n        }\n        return Reflect.get(_, k)\n      },\n      set(_, k, v) {\n        if (Reflect.has(map, k)) {\n          Reflect.set(_, Reflect.get(map, k), v)\n          return true\n        }\n        Reflect.set(_, k, v)\n        return true\n      },\n    })\n  }\n}\n","import { arrayValidator } from '../array/ArrayValidator'\nimport { returnItself } from '../function/returnItself'\nimport { INode } from './INode'\n\n/**\n * 遍历并映射一棵树的可选参数对象\n */\ninterface ITreeMappingOptions<T> {\n  /**\n   * 遍历子节点之前的操作。默认返回自身\n   */\n  before?: (node: T, ...args: any[]) => INode\n  /**\n   * 遍历子节点之后的操作。默认返回自身\n   */\n  after?: (node: INode, ...args: any[]) => INode\n  /**\n   * 递归的参数生成函数。默认返回一个空数组\n   */\n  paramFn?: (node: INode, ...args: any[]) => any[]\n}\n\n/**\n * 遍历并映射一棵树的每个节点\n * @param root 树节点\n * @param options 其他选项\n * @returns 递归遍历后的树节点\n */\nexport function treeMapping<T>(\n  root: T,\n  {\n    before = returnItself,\n    after = returnItself,\n    paramFn = (node, ...args) => [],\n  }: Partial<ITreeMappingOptions<T>> = {},\n): INode {\n  /**\n   * 遍历一颗完整的树\n   * @param node 要遍历的树节点\n   * @param args 每次递归遍历时的参数\n   */\n  function _treeMapping(node: any, ...args: any[]): INode {\n    // 之前的操作\n    const _node = before!(node, ...args)\n    const _child = _node.child\n    if (!arrayValidator.isEmpty(_child)) {\n      _node.child = _child.map(v =>\n        // 产生一个参数\n        _treeMapping(v, ...paramFn(_node, ...args)),\n      )\n    }\n    // 之后的操作\n    return after(_node, ...args)\n  }\n  return _treeMapping(root)\n}\n","import { returnItself } from '../function/returnItself'\nimport { treeMapping } from './treeMapping'\nimport { INode } from './INode'\nimport { ArrayValidator } from '../array/ArrayValidator'\nimport { isNullOrUndefined } from '../obj/isNullOrUndefined'\n\n/**\n * 树转列表可选项参数接口\n */\ninterface ITreeToListOptoins<T> {\n  /**\n   * 是否计算节点全路径，默认为 false\n   */\n  calcPath?: boolean\n  /**\n   * 桥接函数，默认返回自身\n   */\n  bridge?: (node: T) => INode\n}\n\n/**\n * 将树节点转为树节点列表\n * 存在错误\n * @param root 树节点\n * @param options 其他选项\n * @returns 树节点列表\n */\nexport function treeToList2<T>(\n  root: T,\n  {\n    calcPath = false,\n    bridge = returnItself,\n  }: Partial<ITreeToListOptoins<T>> = {},\n): INode[] {\n  const res: INode[] = []\n  const filterSet = new Set<T>()\n  let i = 0\n  // @ts-ignore\n  treeMapping(root, {\n    before(_node, parentPath) {\n      // @ts-ignore\n      console.log(++i, _node)\n      const node = bridge!(_node)\n      if (filterSet.has(_node)) {\n        return node\n      }\n      filterSet.add(_node)\n      // 是否计算全路径\n      if (calcPath) {\n        node.path = (parentPath ? parentPath + ',' : '') + node.id\n      }\n      // 此时追加到数组中\n      res.push(node)\n      return node\n    },\n    paramFn: node => (calcPath ? [node.path] : []),\n  })\n  return res\n}\n\n/**\n * 将树节点转为树节点列表\n * 这里使用了循环进行遍历，而非传统的递归方式\n * @param root 树节点\n * @param options 其他选项\n * @returns 树节点列表\n */\nexport function treeToList<T>(\n  root: T,\n  {\n    calcPath = false,\n    bridge = returnItself,\n  }: Partial<ITreeToListOptoins<T>> = {},\n): INode[] {\n  const res: INode[] = []\n  const temp = bridge(root)\n  if (calcPath) {\n    temp.path = temp.id + ''\n  }\n  // 利用队列缓存所有未处理的节点\n  const queue: INode[] = [temp]\n  // 使用 Set 防止可能的重复引用\n  const filterSet = new Set<INode>()\n  // 使用 lastIdMap 避免重复添加\n  const lastIdMap = new Map()\n  for (let value: INode; queue.length > 0; ) {\n    const first = queue.shift() as any\n    value = bridge(first)\n    // 判断重复\n    if (value === undefined || filterSet.has(first)) {\n      continue\n    }\n    filterSet.add(first)\n    res.push(value)\n    const child = value.child\n    if (ArrayValidator.isEmpty(child)) {\n      continue\n    }\n    const childNonIllegal = child.filter(\n      v => !isNullOrUndefined(v) || filterSet.has(v),\n    )\n    // TODO 这里和上面的代码明显重复，待优化。。。\n    queue.push(\n      ...(calcPath\n        ? childNonIllegal.map(v => {\n            const _v = bridge(v as any)\n            // 如果最后一个的 id 等于自身，说明已经被添加过了\n            if (lastIdMap.get(_v.id) === _v.id) {\n              return _v\n            }\n            // 使用父节点绝对路径 + 当前 id\n            _v.path = value.path + ',' + _v.id\n            lastIdMap.set(_v.id, _v.id)\n            return _v\n          })\n        : childNonIllegal),\n    )\n  }\n  return res\n}\n","import { bridge } from '../function/bridge'\nimport { INodeBridge } from './INodeBridge'\nimport { treeMapping } from './treeMapping'\nimport { INode } from './INode'\n\n/**\n * 树节点桥接工具类\n * 主要实现了桥接 {@field bridge} {@field bridgeTree} 和 {@field bridgeList} 三个函数，事实上桥接之后再转换相当于做了两遍，但就目前而言暂且只能如此了\n */\n\nexport class NodeBridgeUtil {\n  /**\n   * 桥接对象为标准的树结构\n   * @param nodeBridge 桥接对象\n   * @returns 代理函数\n   */\n  public static bridge<T>({\n    id = 'id',\n    parentId = 'parentId',\n    child = 'child',\n    path = 'path',\n  }: Partial<INodeBridge> = {}): (node: T) => INode {\n    return bridge({\n      id,\n      parentId,\n      child,\n      path,\n    }) as any\n  }\n  /**\n   * 桥接一棵完整的树\n   * @param tree 树节点\n   * @param nodeBridge 桥接对象\n   * @returns 代理后的树对象\n   */\n  public static bridgeTree<T>(tree: T, nodeBridge?: INodeBridge): INode {\n    return treeMapping(tree, {\n      before: this.bridge(nodeBridge),\n    })\n  }\n  /**\n   * 桥接一个树节点列表\n   * @param list 树节点列表\n   * @param nodeBridge 桥接对象\n   * @returns 代理后的树节点列表\n   */\n  public static bridgeList<T>(list: T[], nodeBridge?: INodeBridge): INode[] {\n    return list.map(this.bridge(nodeBridge))\n  }\n}\n\n/**\n * 导出一个 NodeBridgeUtil 的实例\n * @deprecated 已废弃，请直接使用类的静态函数\n */\nexport const nodeBridgeUtil = NodeBridgeUtil\n","/**\n * 获取对象中所有的属性及对应的值，包括 ES6 新增的 Symbol 类型的属性\n * @param obj 任何对象\n * @returns 属性及其对应值的二维数组\n * @deprecated 该函数将要被废弃，实质上应用场景很窄\n */\nexport function getObjectEntries(obj: object): Array<[PropertyKey, any]> {\n  const mFn: (k: PropertyKey) => [PropertyKey, any] = k => [\n    k,\n    Reflect.get(obj, k),\n  ]\n  return Reflect.ownKeys(obj).map(mFn)\n}\n","import { isNullOrUndefined } from './isNullOrUndefined'\n\n/**\n * 获取对象中所有的属性，包括 ES6 新增的 Symbol 类型的属性\n * @param obj 任何对象\n * @returns 属性数组\n * @deprecated 已废弃，请使用 ES6 {@see Reflect.ownKeys} 代替\n * 具体参考 {@url(https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys)}\n */\nexport function getObjectKeys(obj: object | undefined | null): PropertyKey[] {\n  if (isNullOrUndefined(obj)) {\n    return []\n  }\n  return Reflect.ownKeys(obj!)\n}\n","/**\n * 比较两个浮点数是否相等\n * 具体实现采用差值取绝对值并与 {@link Number.EPSILON} 比较的方式，如果小于浮点数最小差值，则认为它们是 [相等] 的\n * @param num1 第一个浮点数\n * @param num2 第二个浮点数\n * @returns 两数是否相等\n */\nexport function floatEquals(num1: number, num2: number): boolean {\n  return Math.abs(num1 - num2) < Number.EPSILON\n}\n","import { isNullOrUndefined } from './isNullOrUndefined'\n\n//TODO 暂时绕过类型错误，之后有时间再修\n// export function assign<T, A>(target: T, a: A): T & A\n// export function assign<T, A, B>(target: T, a: A, b: B): T & A & B\n// export function assign<T, A, B, C>(target: T, a: A, b: B, c: C): T & A & B & C\n// export function assign<T, A, B, C, D>(\n//   target: T,\n//   a: A,\n//   b: B,\n//   c: C,\n//   d: D,\n// ): T & A & B & C & D\n/**\n * 合并多个对象的属性\n * 1. 该合并的方式为浅层合并，只会合并一层的对象\n * 2. 默认忽略值为 undefined/null 的属性\n * @param target 覆盖的对象上\n * @param  {...Object} sources 任意数量的对象\n * @returns 合并后的对象\n */\nexport function assign<T extends object>(\n  target: T | null | undefined,\n  ...sources: Array<any | null | undefined>\n): any {\n  return [target, ...sources].reduce((res, source) => {\n    if (isNullOrUndefined(source)) {\n      return res\n    }\n    return Object.keys(source).reduce((res, k) => {\n      const v = Reflect.get(source, k)\n      if (isNullOrUndefined(v)) {\n        return res\n      }\n      Reflect.set(res, k, v)\n      return res\n    }, res)\n  }, {})\n}\n","import { returnItself } from '../function/returnItself'\n\n/**\n * 根据不同的源对象获取不同的正则匹配，代表不需要拷贝的属性\n * @param source 源对象\n * @returns 匹配内部属性的正则表达式\n */\nfunction getInnerFieldRule(source: any): RegExp {\n  if (source instanceof Function) {\n    return /^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n  } else {\n    return /^(?:toString|length)$/\n  }\n}\n\n/**\n * 拷贝对象的属性到目标对象上\n * @param target 目标对象\n * @param source 源对象\n * @returns 返回 {@param target} 目标对象\n */\nfunction _copyProps<T extends object>(target: T, source: T): T {\n  const innerField = getInnerFieldRule(source)\n  Reflect.ownKeys(source).forEach(prop => {\n    if (typeof prop === 'string' && innerField.test(prop)) {\n      return\n    }\n    Reflect.set(target, prop, Reflect.get(source, prop))\n  })\n  return target\n}\n\n/**\n * 混合多个类\n * @param  {...Class} mixins 需要混合的多个类及其构造函数参数映射函数的 Map 集合\n * @returns 返回一个混合后的类，构造函数将的参数\n */\nexport function aggregation(mixins: Map<any, (args: any[]) => any[]>): any {\n  const arr: Array<[any, (args: any[]) => any[]]> = Array.from(mixins)\n  class Aggregate {\n    /**\n     * @param args 任意数量的参数\n     */\n    constructor(...args: any[]) {\n      arr.forEach(([Mixin, fn = returnItself]) =>\n        _copyProps(this, new Mixin(...fn(args))),\n      )\n    }\n  }\n\n  arr.forEach(([Mixin]) => {\n    _copyProps(Aggregate.prototype, Mixin.prototype)\n    _copyProps(Aggregate, Mixin)\n  })\n\n  return Aggregate\n}\n","import { wait } from './wait'\nimport { AsyncFunc } from '../interface/AsyncFunc'\n\n/**\n * 异步限制并发队列的接口\n * 主要适用于限制某个函数的并发限制\n */\ninterface IAsyncLimiting {\n  /**\n   * 限制同时存在的异步的数量\n   */\n  limit: number\n}\n\n/**\n * 包装一个异步函数为有限制并发功能的函数\n * @param fn 异步函数\n * @param options 可选参数\n * @param options.limit 并发限制数量，默认为 1\n * @returns 返回被包装后的限制并发功能的函数\n */\nexport function asyncLimiting<Fn extends AsyncFunc>(\n  fn: Fn,\n  { limit = 1 }: Partial<IAsyncLimiting> = {},\n): Fn {\n  // 当前正在执行异步的数量\n  let execCount = 0\n  // waitArr 等待的队列\n  const takeQueue: any[][] = []\n  // 是否增加了 execCount 的标记\n  let flag = false\n  return new Proxy(fn, {\n    async apply(_, _this, args) {\n      const _takeRun = async () => {\n        if (!flag) {\n          execCount++\n          flag = false\n        }\n        const tempArgs = takeQueue.shift()\n        try {\n          return await Reflect.apply(_, _this, tempArgs!)\n        } finally {\n          execCount--\n        }\n      }\n      takeQueue.push(args)\n\n      await wait(() => {\n        const result = execCount < limit\n        // 如果等待结束则必须立刻增加 execCount，避免微任务与宏任务调度可能产生错误\n        if (result) {\n          flag = true\n          execCount++\n        }\n        return result\n      })\n      return _takeRun()\n    },\n  })\n}\n","import { wait } from './wait'\n\ntype Predicate = (...args: any[]) => boolean\n\n/**\n * 默认的超时时间，可以认为是无限\n */\nconst TimeoutInfinity: Predicate = () => false\n\n/**\n * Locker 初始化对象接口\n */\ninterface ILockerInit {\n  limit?: number\n  timeout?: number\n}\n\n/**\n * 创建一个 Lock 对象，用于锁住当前的当前的异步流程\n */\nexport class Locker {\n  /**\n   * 限制并发数量，默认为 1\n   */\n  public limit: number\n  /**\n   * 超时时间，默认为无限\n   */\n  public timeout: number\n\n  /**\n   * @param options 可选项\n   * @param options.limit 限制并发数量，默认为 1\n   * @param options.timeout 超时时间，默认为无限\n   */\n  constructor({ limit = 1, timeout }: Partial<ILockerInit> = {}) {\n    this.limit = limit\n    this.timeout = timeout || (TimeoutInfinity as any)\n  }\n  /**\n   * 当前是否锁住了\n   * @returns 是否锁住了\n   */\n  public isLocked() {\n    return this.limit <= 0\n  }\n  /**\n   * 添加异步锁\n   * @param timeout 超时时间，默认为全局 timeout\n   * @returns 进行等待\n   */\n  public async lock(timeout = this.timeout) {\n    if (this.isLocked()) {\n      /**\n       * @type {Number|Function}\n       */\n      await Promise.race([\n        wait(() => {\n          const result = !this.isLocked()\n          if (result) {\n            this.limit--\n          }\n          return result\n        }),\n        wait(timeout),\n      ])\n    } else {\n      this.limit--\n    }\n  }\n  /**\n   * 删除异步锁\n   */\n  public unlock() {\n    this.limit++\n  }\n}\n","import { PromiseDeconstruct } from '../interface/PromiseDeconstruct'\n/**\n * 包装一个函数为有错误重试功能的函数\n * 注: 如果发生错误，最终将抛出最后一次调用的异常\n * @param fn 需要被包装的函数\n * @param num 调用的次数。默认为 1\n * @param errorCheck 检查返回结果是否需要重试的函数。默认只要 resolve() 就返回 true\n * @returns 包装后的有错误重试功能的函数\n */\nexport function trySometime<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  num = 1,\n  errorCheck: (res: PromiseDeconstruct<ReturnType<Fn>>) => boolean = res =>\n    true,\n): Fn {\n  return new Proxy(fn, {\n    async apply(target, thisArg, args) {\n      let err\n      for (let i = 0; i < num; i++) {\n        try {\n          // 等待结果出来\n          const res = await Reflect.apply(target, thisArg, args)\n          // 如果没问题就直接返回了\n          if (errorCheck(res)) {\n            return res\n          }\n          // 否则抛出异常以进行下一次重试\n          throw res\n        } catch (error) {\n          err = error\n        }\n      }\n      throw err\n    },\n  })\n}\n","import { range } from '../array/range'\nimport { PromiseDeconstruct } from '../interface/PromiseDeconstruct'\n\n/**\n * 包装一个函数为有错误重试功能的函数\n * 注意: 该函数是并行运行，所以一旦调用，就会同时调用 n 次，不管之前有没有失败。。。此函数不适合包装有副作用的操作，例如修改用户信息，请使用 {@link trySometime} 替代\n * @param fn 需要被包装的函数\n * @param num 调用的次数。默认为 1\n * @param errorCheck 检查返回结果是否需要重试的函数。默认只要 resolve() 就返回 true\n * @returns 包装后的有错误重试功能的函数\n */\nexport function trySometimeParallel<Fn extends (...args: any[]) => any>(\n  fn: Fn,\n  num = 1,\n  errorCheck: (res: PromiseDeconstruct<ReturnType<Fn>>) => boolean = res =>\n    true,\n): Fn {\n  return new Proxy(fn, {\n    async apply(target, thisArg, args) {\n      return new Promise(async (resolve, reject) => {\n        let err\n        try {\n          await Promise.all(\n            range(0, num).map(async () => {\n              try {\n                const res = await Reflect.apply(target, thisArg, args)\n                if (errorCheck(res) === true) {\n                  resolve(res)\n                }\n                throw res\n              } catch (error) {\n                err = error\n              }\n            }),\n          )\n        } catch (error) {\n          console.log(error)\n        }\n        reject(err)\n      })\n    },\n  })\n}\n","/**\n * 深度比较两个对象是否相等\n * @param x 任何对象\n * @param y 任何对象\n * @returns 是否相等\n */\nexport function compare(x: any, y: any): boolean {\n  if (\n    (typeof x === 'number' || x instanceof Number) &&\n    (typeof y === 'number' || y instanceof Number)\n  ) {\n    const _x = +x\n    const _y = +y\n    // 如果都是 NaN 则直接返回 true\n    if (isNaN(_x) && isNaN(_y)) {\n      return true\n    }\n    // 如果是 -0/+0 则返回 false\n    if (_x === _y) {\n      return 1 / _x === 1 / _y\n    }\n    // 如果均为数字且两数之差的绝对值小于浮点数的最小精度（此举主要是为了避免浮点数的精度丢失）\n    if (Math.abs(_x - _y) < Number.EPSILON) {\n      return true\n    }\n  }\n  // 如果恒等表达式成立则直接返回 true\n  if (x === y) {\n    return true\n  }\n  // 比较正则和字符串\n  if (\n    (x instanceof RegExp && y instanceof RegExp) ||\n    ((typeof x === 'string' || x instanceof String) &&\n      (typeof y === 'string' || y instanceof String))\n  ) {\n    return x.toString() === y.toString()\n  }\n  // 如果都是时间则比较它们的时间戳\n  if (x instanceof Date && y instanceof Date) {\n    return x.getTime() === y.getTime()\n  }\n  // 如果两者有一个不是 Object 类型的话则直接返回 false\n  // 注: 此处直接返回 false 是因为特殊原生类型的都在上面处理过了\n  // 注: Array 可以按照 Object 的逻辑进行处理\n  if (!(x instanceof Object && y instanceof Object)) {\n    return false\n  }\n  // 比较它们的原型\n  if (x.prototype !== y.prototype) {\n    return false\n  }\n  // 比较构造函数\n  if (x.constructor !== y.constructor) {\n    return false\n  }\n  // 比较 y 中的属性是否全部都在 x 中\n  for (const p of Object.keys(y)) {\n    if (!Reflect.has(x, p)) {\n      return false\n    }\n  }\n  // 比较 x 中的属性是否全部都在 y 中\n  for (const p of Object.keys(x)) {\n    if (!Reflect.has(y, p)) {\n      return false\n    }\n    // 比较每个元素的类型，如果不同则直接返回 false\n    if (typeof y[p] !== typeof x[p]) {\n      return false\n    }\n    // 递归比较每个元素\n    if (!compare(x[p], y[p])) {\n      return false\n    }\n  }\n  // 全部比较完成仍然没有结果就返回 true\n  return true\n}\n","/**\n * 阻塞主线程指定时间\n * 注: 和 {@see wait} 不同，该函数会真的阻塞住主线程，即这段时间内其他的代码都无法执行，例如用户的点击事件！\n * @param time 阻塞毫秒数\n */\nexport function sleep(time: number) {\n  const end = performance.now() + time\n  while (performance.now() <= end) {}\n}\n","import { Func } from '../interface/Func'\nimport { Async } from '../interface/Async'\n\n/**\n * 包装一个函数为异步函数\n * 如果是一个异步函数，则直接返回，否则返回一部函数\n * @param fn 任意一个函数\n * @returns 返回的异步结果 Promise 对象\n * @typeparam R 原函数函数返回值类型\n */\nexport function async<Fn extends Func>(fn: Fn): Async<Fn> {\n  return new Proxy(fn, {\n    async apply(_, _this, args) {\n      return await Reflect.apply(_, _this, args)\n    },\n  }) as any\n}\n","import { wait } from './wait'\nimport { AsyncFunc } from '../interface/AsyncFunc'\n\n/**\n * 将一个异步函数包装为具有时序的异步函数\n * 注: 该函数会按照调用顺序依次返回结果，后面的调用的结果需要等待前面的，所以如果不关心过时的结果，请使用 {@link switchMap} 函数\n * @param fn 一个普通的异步函数\n * @returns 包装后的函数\n */\nexport function mergeMap<Fn extends AsyncFunc>(fn: Fn): Fn {\n  // 当前执行的异步操作 id\n  let id = 0\n  // 所执行的异步操作 id 列表\n  const ids = new Set()\n  return new Proxy(fn, {\n    async apply(_, _this, args) {\n      const prom = Reflect.apply(_, _this, args)\n      const temp = id\n      ids.add(temp)\n      id++\n      await wait(() => !ids.has(temp - 1))\n      ids.delete(temp)\n      return await prom\n    },\n  })\n}\n","import { AsyncFunc } from '../interface/AsyncFunc'\nimport { PromiseDeconstruct } from '../interface/PromiseDeconstruct'\n\n/**\n * 将一个异步函数包装为具有时序的异步函数\n * 注: 该函数会丢弃过期的异步操作结果，这样的话性能会稍稍提高（主要是响应比较快的结果会立刻生效而不必等待前面的响应结果）\n * @param fn 一个普通的异步函数\n * @returns 包装后的函数\n */\nexport function switchMap<Fn extends AsyncFunc>(fn: Fn): Fn {\n  // 当前执行的异步操作 id\n  let id = 0\n  // 最后一次异步操作的 id，小于这个的操作结果会被丢弃\n  let last = 0\n  // 缓存最后一次异步操作的结果\n  let cache: PromiseDeconstruct<ReturnType<Fn>>\n  return new Proxy(fn, {\n    async apply(_, _this, args) {\n      const temp = id\n      id++\n      const res = await Reflect.apply(_, _this, args)\n      if (temp < last) {\n        return cache\n      }\n      cache = res\n      last = temp\n      return res\n    },\n  })\n}\n","import { compatibleAsync } from '../async/compatibleAsync'\nimport { ReturnFunc } from '../interface/ReturnFunc'\n\n/**\n * 将指定函数包装为只调用一次，其他的调用返回旧值\n * 主要适用场景是只允许调用一次的地方，例如 Tab 的初始化\n * * 示意图:\n * a => b => c => d => e =>\n * a ==|====|====|====|====>\n *     |b   |c   |d   |e  (die)\n *\n * @param fn 需要包装的函数\n * @returns 包装后的函数\n */\nexport function once<R, Fn extends ReturnFunc<R>>(\n  fn: Fn,\n): Fn & { origin: Fn; clear: () => void } {\n  let flag = true\n  let cache: R\n  const res = new Proxy(fn, {\n    apply(target, thisArg, args) {\n      if (!flag) {\n        return cache\n      }\n      flag = false\n      // 如果是异步函数则返回异步的结果\n      return compatibleAsync(Reflect.apply(target, thisArg, args), res => {\n        cache = res\n        return cache\n      })\n    },\n  })\n  return Object.assign(res, {\n    origin: fn,\n    clear() {\n      cache = null as any\n    },\n  })\n}\n","import { wait } from './wait'\nimport { AsyncFunc } from '../interface/AsyncFunc'\n\n/**\n * 将一个异步函数包装为具有时序的异步函数\n * 注: 该函数会按照调用顺序依次返回结果，后面的执行的调用（不是调用结果）需要等待前面的，此函数适用于异步函数的内里执行也必须保证顺序时使用，否则请使用 {@link mergeMap} 函数\n * 注: 该函数其实相当于调用 {@code asyncLimiting(fn, {limit: 1})} 函数\n * 例如即时保存文档到服务器，当然要等待上一次的请求结束才能请求下一次，不然数据库保存的数据就存在谬误了\n * @param fn 一个普通的异步函数\n * @returns 包装后的函数\n */\nexport function concatMap<Fn extends AsyncFunc>(fn: Fn): Fn {\n  // 当前执行的异步操作 id\n  let id = 0\n  // 所执行的异步操作 id 列表\n  const ids = new Set()\n  return new Proxy(fn, {\n    async apply(_, _this, args) {\n      const temp = id\n      ids.add(temp)\n      id++\n      await wait(() => !ids.has(temp - 1))\n      const res = await Reflect.apply(_, _this, args)\n      ids.delete(temp)\n      return res\n    },\n  })\n}\n","import { range } from '../array/range'\nimport { Func } from '../interface/Func'\n\n/**\n * 重复执行指定的函数\n * @param num 重复的次数\n * @param fn 执行的函数，如果是异步函数，则返回 Array.<Promise>\n * @param  {...Object} args 参数\n * @returns 执行返回结果\n */\nexport function repeatedCall<Fn extends Func>(\n  num: number,\n  fn: Fn,\n  ...args: Parameters<Fn>\n): ReturnType<Fn>[] {\n  return range(0, num).map(() => fn(...(args as any)))\n}\n","/**\n * 发布订阅模式\n * @typeparam T 订阅主题的类型，虽然可以为 any，但这里是刻意进行限制以避免 “全局” 的发布订阅中心对象\n * @deprecated 已废弃，请使用语义更好、类型安全且 API 更强大的 {@see EventEmitter} 进行事件总线处理\n */\nexport class PubSubMachine<T> {\n  /**\n   * 订阅者集合\n   */\n  private subMap = new Map<T, Function[]>()\n  /**\n   * 发布一个主题\n   * @param topic 发布的主题\n   * @param [args] 主题订阅所需要的参数\n   */\n  public pub(topic: any, ...args: any[]) {\n    const fns = this.subMap.get(topic)\n    if (fns === undefined) {\n      return\n    }\n    fns.forEach(fn => fn(...args))\n  }\n  /**\n   * 订阅一个主题\n   * @param topic 订阅的主题\n   * @param fn 回调的函数\n   */\n  public sub(topic: any, fn: Function) {\n    if (!this.subMap.has(topic)) {\n      this.subMap.set(topic, [])\n    }\n    this.subMap.get(topic)!.push(fn)\n  }\n  /**\n   * 取消订阅\n   * @param topic 订阅的主题\n   * @param fn 订阅的函数，没有则删除这个主题下所有的函数\n   */\n  public unsub(topic: any, fn?: Function) {\n    if (fn === undefined) {\n      this.subMap.delete(topic)\n      return\n    }\n    if (!this.subMap.has(topic)) {\n      return\n    }\n    const fns = this.subMap.get(topic)\n    fns!.splice(fns!.indexOf(fn), 1)\n  }\n}\n","import { arrayToMap } from './arrayToMap'\n\n/**\n * 提取对象数组为 Map\n * @param arr 对象数组\n * @param fields 提取的字段\n * @returns 提取字段名对应其字段值数组的 Map\n * @typeparam T 数组元素的类型，必须为可提取字段的对象\n */\nexport function extractFieldMap<T extends object>(\n  arr: T[],\n  fields: PropertyKey[],\n) {\n  return arr.reduce(\n    (res: Map<PropertyKey, any[]>, v: T) => {\n      for (const [k, _arr] of res) {\n        _arr.push(Reflect.get(v, k))\n      }\n      return res\n    },\n    arrayToMap(\n      fields,\n      k => k,\n      () => new Array<any>(),\n    ),\n  )\n}\n","/**\n * 数组按照指定长度进行分段为二维数组\n * 注: num 必须要大于 1\n * @param arr 要进行分段的数组\n * @param num 每段的长度\n * @returns 分段后的二维数组\n */\nexport function segmentation<T>(arr: T[], num: number): T[][] {\n  return arr.reduce((res, v, i) => {\n    const index = (i + 1) % num\n    if (index === 1) {\n      res.push([])\n    }\n    res[res.length - 1].push(v)\n    return res\n  }, new Array<T[]>())\n}\n","/**\n * 切换 DOM 元素的 class\n * @param {Element} el DOM 元素\n * @param {Object} obj 切换的状态/class 键值对象\n * @return 根据状态切换 class 的函数\n */\nexport function toggleClass<K extends Exclude<PropertyKey, symbol>>(\n  el: Element,\n  obj: Record<K, string>,\n) {\n  const arr = Array.from(Object.values(obj)) as string[]\n  /**\n   * 返回切换 class 的函数\n   * @param state 切换的状态\n   */\n  return function toggle(state: K) {\n    arr.forEach(v => el.classList.remove(v))\n    el.classList.add(obj[state])\n  }\n}\n","/**\n * 部分应用后返回的函数\n */\ninterface IRFunc extends Function {\n  /**\n   * 是否为偏函数，默认为 true 以标识偏函数\n   */\n  _partial: boolean\n  /**\n   * 剩余参数的长度\n   */\n  _length: number\n  /**\n   * 重写 toString 便于调试\n   */\n  toString: () => string\n}\n\n/**\n * 将函数包装为偏函数\n * 注: 该函数模仿了 underscore 的 partial 函数\n * @param fn 需要包装的函数\n * @param  {...any} args 应用的部分参数\n * @returns 包装后的函数\n */\nexport function partial(fn: Function, ...args: any[]): IRFunc {\n  const realArgs = args.filter(arg => arg !== partial._)\n  // 如果函数参数足够则调用传入的函数\n  if (realArgs.length >= fn.length) {\n    return fn(...realArgs)\n  }\n\n  /**\n   * 最终返回的函数\n   * @param otherArgs 接受任意参数\n   * @returns 返回一个函数，或者函数调用完成返回结果\n   */\n  function innerFn(...otherArgs: any[]): Function {\n    // 记录需要移除补到前面的参数\n    const removeIndexSet = new Set()\n    let i = 0\n    const newArgs = args.map(arg => {\n      if (\n        arg !== partial._ ||\n        otherArgs[i] === undefined ||\n        otherArgs[i] === partial._\n      ) {\n        return arg\n      }\n      removeIndexSet.add(i)\n      // 每次补偿前面的 partial._ 参数计数器 +1\n      return otherArgs[i++]\n    })\n    const newOtherArgs = otherArgs.filter((_v, i) => !removeIndexSet.has(i))\n    return partial(fn, ...newArgs, ...newOtherArgs)\n  }\n  // 定义偏函数的剩余参数长度，便于在其他地方进行部分参数应用\n  // 注: 不使用 length 属性的原因是 length 属性\n  innerFn._length = fn.length - args.filter(arg => arg !== partial._).length\n  // 自定义 toString 函数便于调试\n  innerFn.toString = () =>\n    `name: ${fn.name}, args: [${args.map(o => o.toString()).join(', ')}]`\n  innerFn._partial = true\n  return innerFn\n}\n\n/**\n * 偏的占位符，需要应用后面的参数时使用\n * 例如 {@link partial(fn)(partial._, 1)} 意味着函数 fn 的第二个参数将被确定为 1\n */\npartial._ = Symbol('_')\n","import { groupBy } from '../array/groupBy'\n\n/**\n * 缓存的事件监听对象\n */\ninterface CacheListener {\n  /**\n   * @property 事件的类型\n   */\n  type: string\n  /**\n   * @property 事件的监听函数\n   */\n  listener: Function\n  /**\n   * @property 事件监听器选项\n   */\n  options?: boolean | AddEventListenerOptions\n}\n\ntype EventOriginType = Document | Element | Window\n\n/**\n * 事件工具类\n */\nexport class EventUtil {\n  /**\n   * 缓存的事件监听对象映射表\n   */\n  private static listenerMap: Map<EventOriginType, CacheListener[]> = new Map()\n\n  //region add\n\n  static add<K extends keyof DocumentEventMap>(\n    dom: Document,\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  static add(\n    dom: Document,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  static add<K extends keyof ElementEventMap>(\n    el: Element,\n    type: K,\n    listener: (this: Element, ev: ElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  static add(\n    el: Element,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  static add<K extends keyof WindowEventMap>(\n    window: Window,\n    type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  static add(\n    window: Window,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  static add(\n    dom: EventOriginType,\n    type: any,\n    listener: any,\n    options?: boolean,\n  ): void {\n    if (!EventUtil.listenerMap.has(dom)) {\n      EventUtil.listenerMap.set(dom, [])\n    }\n    EventUtil.listenerMap.get(dom)!.push({\n      type,\n      listener,\n      options,\n    })\n    dom.addEventListener(type, listener, options)\n  }\n\n  //endregion\n\n  //region remove\n\n  static remove<K extends keyof DocumentEventMap>(\n    dom: Document,\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  static remove(\n    dom: Document,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions,\n  ): void\n  static remove<K extends keyof ElementEventMap>(\n    el: Element,\n    type: K,\n    listener: (this: Element, ev: ElementEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  static remove(\n    el: Element,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions,\n  ): void\n  static remove<K extends keyof WindowEventMap>(\n    dom: Window,\n    type: K,\n    listener: (this: Window, ev: WindowEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  static remove(\n    dom: Window,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions,\n  ): void\n  static remove(\n    dom: EventOriginType,\n    type: any,\n    listener: any,\n    options?: boolean,\n  ): void {\n    dom.removeEventListener(type, listener as any, options)\n    EventUtil.listenerMap.set(\n      dom,\n      (EventUtil.listenerMap.get(dom) || []).filter(\n        cacheListener =>\n          cacheListener.type !== type ||\n          cacheListener.listener !== listener ||\n          cacheListener.options !== options,\n      ),\n    )\n  }\n\n  //endregion\n\n  //region removeByType\n\n  static removeByType<K extends keyof DocumentEventMap>(\n    dom: Document,\n    type: K,\n    options?: boolean | EventListenerOptions,\n  ): CacheListener[]\n  static removeByType(\n    dom: Document,\n    type: string,\n    options?: boolean | EventListenerOptions,\n  ): CacheListener[]\n  static removeByType<K extends keyof ElementEventMap>(\n    el: Element,\n    type: K,\n    options?: boolean | EventListenerOptions,\n  ): CacheListener[]\n  static removeByType(\n    el: Element,\n    type: string,\n    options?: boolean | EventListenerOptions,\n  ): CacheListener[]\n  static removeByType<K extends keyof WindowEventMap>(\n    dom: Window,\n    type: K,\n    options?: boolean | EventListenerOptions,\n  ): CacheListener[]\n  static removeByType(\n    dom: Window,\n    type: string,\n    options?: boolean | EventListenerOptions,\n  ): CacheListener[]\n  static removeByType(\n    dom: EventOriginType,\n    type: any,\n    options?: boolean,\n  ): CacheListener[] {\n    const listenerList = EventUtil.listenerMap.get(dom)\n    if (listenerList === undefined) {\n      return []\n    }\n    const map = groupBy(\n      listenerList,\n      cacheListener =>\n        type === cacheListener.type && options === cacheListener.options,\n    )\n    const removeCacheListenerList = map.get(true) || []\n    const retainCacheListenerList = map.get(true) || []\n    EventUtil.listenerMap.set(dom, retainCacheListenerList)\n    return removeCacheListenerList.map(cacheListener => {\n      dom.removeEventListener(\n        cacheListener.type,\n        cacheListener.listener as any,\n        cacheListener.options,\n      )\n      return cacheListener\n    })\n  }\n\n  //endregion\n}\n","/**\n * 加载一个远程样式文件\n * @param href 远程 CSS 样式路径\n * @returns 等待异步加载样式完成\n */\nexport function loadStyle(href: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const link = document.createElement('link')\n    link.rel = 'stylesheet'\n    link.href = href\n    link.addEventListener('load', () => resolve())\n    link.addEventListener('error', reject)\n    document.body.appendChild(link)\n  })\n}\n","/**\n * 补 0 函数\n * @param time 为时分秒补首位 0\n * @returns 补零得到的字符串\n */\nfunction zeroPadding(time: number): string {\n  return (time >= 10 ? '' : '0') + time\n}\n\n/**\n * 秒表\n * 标准格式 `HH:mm:ss`\n * 主要适用场景是格式化/解析时间差值\n */\nexport class Stopwatch {\n  /**\n   * 格式化一个以秒为单位的绝对时间为标准时间格式的字符串\n   * @param time 时间/s\n   * @returns 格式化后的字符串\n   */\n  static format(time: number): string {\n    const seconds = time % 60\n    const minutes = Math.floor(time / 60) % 60\n    const hours = Math.floor(time / 60 / 60)\n    return `${zeroPadding(hours)}:${zeroPadding(minutes)}:${zeroPadding(\n      seconds,\n    )}`\n  }\n\n  /**\n   * 解析一个标准的时间字符串为秒为单位的绝对时间\n   * @param str 时间字符串\n   * @returns 解析得到的时间/s\n   */\n  static parse(str: string): number {\n    const [, hours, minutes, seconds] = /(\\d+):(\\d+):(\\d+)/.exec(\n      str,\n    ) as string[]\n    return (\n      parseInt(hours) * 60 * 60 + parseInt(minutes) * 60 + parseInt(seconds)\n    )\n  }\n}\n","import { ReturnFunc } from '../interface/ReturnFunc'\n\n/**\n * 提醒用户当前页面有正在执行的操作，暂时不能离开\n * 注：用户实际上可以不管该提醒\n * @param fn 谓词，是否要提醒不要关闭\n * @returns 返回删除这个事件监听的函数\n */\nexport function remindLeavePage(fn: ReturnFunc<boolean> = () => false) {\n  const listener = (e: BeforeUnloadEvent) => {\n    if (fn()) {\n      return false\n    }\n    const confirmationMessage = '请不要关闭页面'\n    e.returnValue = confirmationMessage //Gecko + IE\n    return confirmationMessage //Webkit, Safari, Chrome etc.\n  }\n\n  window.addEventListener('beforeunload', listener)\n  return () => window.removeEventListener('beforeunload', listener)\n}\n","type EventType = string | number\n\ntype CallbackFunc<Args extends any[]> = Args extends [infer P1]\n  ? (p1: P1) => void\n  : Args extends [infer P1, infer P2]\n  ? (p1: P1, p2: P2) => void\n  : (...args: Args) => void\n\n/**\n * 事件总线\n * 实际上就是发布订阅模式的一种简单实现\n * 类型定义受到 {@link https://github.com/andywer/typed-emitter/blob/master/index.d.ts} 的启发，不过只需要声明参数就好了，而不需要返回值（应该是 {@code void}）\n */\nexport class EventEmitter<Events extends Record<EventType, any[]>> {\n  private readonly events = new Map<keyof Events, Function[]>()\n\n  /**\n   * 添加一个事件监听程序\n   * @param type 监听类型\n   * @param callback 处理回调\n   * @returns {@code this}\n   */\n  add<E extends keyof Events>(type: E, callback: CallbackFunc<Events[E]>) {\n    const callbacks = this.events.get(type) || []\n    callbacks.push(callback)\n    this.events.set(type, callbacks)\n    return this\n  }\n  /**\n   * 移除一个事件监听程序\n   * @param type 监听类型\n   * @param callback 处理回调\n   * @returns {@code this}\n   */\n  remove<E extends keyof Events>(type: E, callback: CallbackFunc<Events[E]>) {\n    const callbacks = this.events.get(type) || []\n    this.events.set(\n      type,\n      callbacks.filter((fn: any) => fn !== callback),\n    )\n    return this\n  }\n  /**\n   * 移除一类事件监听程序\n   * @param type 监听类型\n   * @returns {@code this}\n   */\n  removeByType<E extends keyof Events>(type: E) {\n    this.events.delete(type)\n    return this\n  }\n  /**\n   * 触发一类事件监听程序\n   * @param type 监听类型\n   * @param args 处理回调需要的参数\n   * @returns {@code this}\n   */\n  emit<E extends keyof Events>(type: E, ...args: Events[E]) {\n    const callbacks = this.events.get(type) || []\n    callbacks.forEach(fn => {\n      fn(...args)\n    })\n    return this\n  }\n\n  /**\n   * 获取一类事件监听程序\n   * @param type 监听类型\n   * @returns 一个只读的数组，如果找不到，则返回空数组 {@code []}\n   */\n  listeners<E extends keyof Events>(type: E) {\n    return Object.freeze(this.events.get(type) || [])\n  }\n}\n","import { compatibleAsync } from './compatibleAsync'\n\ntype NoParamVoidFunc = () => void | PromiseLike<void>\n\n/**\n * 一个简单的微任务队列辅助类，使用（宏）命令模式实现\n * 注：该 class 是为了解决问题 https://segmentfault.com/q/1010000019115775\n */\nexport class MicrotaskQueue {\n  // task 列表\n  public tasks: NoParamVoidFunc[] = []\n  // 当前是否存在正在执行的 task\n  private lock = false\n  add(func: NoParamVoidFunc) {\n    this.tasks.push(func)\n    this.execute()\n    return this\n  }\n  execute() {\n    if (this.lock) {\n      return\n    }\n    this.lock = true\n    const goNext = () => {\n      if (this.tasks.length) {\n        const task = this.tasks.shift()!\n        compatibleAsync(task(), () => goNext())\n      } else {\n        this.lock = false\n      }\n    }\n    Promise.resolve().then(goNext)\n  }\n}\n","/**\n * 取值的字符串\n */\nconst rangeStr =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\nconst rangeLen = rangeStr.length\n\n/**\n * 生成一个随机字符串\n * @param len\n */\nexport function randomStr(len: number) {\n  let res = ''\n  for (let i = 0; i < len; i++) {\n    res += rangeStr.charAt(Math.floor(Math.random() * rangeLen))\n  }\n  return res\n}\n","/**\n * 解析字段字符串为数组\n * @param str 字段字符串\n * @returns 字符串数组，数组的 `[]` 取法会被解析为数组的一个元素\n */\nexport function parseFieldStr(str: string): string[] {\n  // noinspection RegExpRedundantEscape\n  return str\n    .split(new RegExp('[\\\\.\\\\[]'))\n    .map(k => (new RegExp('\\\\]$').test(k) ? k.slice(0, k.length - 1) : k))\n}\n","import { TypeValidator } from '../obj/TypeValidator'\nimport { isNullOrUndefined } from '../obj/isNullOrUndefined'\nimport { parseFieldStr } from '../idea/parseFieldStr'\n\n/**\n * 安全的深度获取对象的字段\n * TODO 该函数尚处于早期测试阶段\n * 注: 只要获取字段的值为 {@type null|undefined}，就会直接返回 {@param defVal}\n * 类似于 ES2019 的可选调用链特性: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/%E5%8F%AF%E9%80%89%E9%93%BE\n * @param obj 获取的对象\n * @param fields 字段字符串或数组\n * @param [defVal] 取不到值时的默认值，默认为 null\n */\nexport function get(\n  obj: object,\n  fields: PropertyKey[] | string,\n  defVal: any = null,\n): any {\n  if (TypeValidator.isString(fields)) {\n    fields = parseFieldStr(fields)\n  }\n  let res = obj\n  for (const field of fields) {\n    try {\n      res = Reflect.get(res, field)\n      if (isNullOrUndefined(res)) {\n        return defVal\n      }\n    } catch (e) {\n      return defVal\n    }\n  }\n  return res\n}\n","import { TypeValidator } from '../obj/TypeValidator'\nimport { parseFieldStr } from '../idea/parseFieldStr'\n\n/**\n * 安全的深度设置对象的字段\n * TODO 该函数尚处于早期测试阶段\n * 注: 只要设置字段的值为 {@type null|undefined}，就会直接返回 {@param defVal}\n * 类似于 ES2019 的可选调用链特性: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/%E5%8F%AF%E9%80%89%E9%93%BE\n * @param obj 设置的对象\n * @param fields 字段字符串或数组\n * @param [val] 设置字段的值\n */\nexport function set(\n  obj: object,\n  fields: PropertyKey[] | string,\n  val: any,\n): boolean {\n  if (TypeValidator.isString(fields)) {\n    fields = parseFieldStr(fields)\n  }\n  let res: any = obj\n  for (let i = 0, len = fields.length; i < len; i++) {\n    const field = fields[i]\n    if (i === len - 1) {\n      res[field] = val\n      return true\n    }\n    res = res[field]\n    if (!TypeValidator.isObject(res)) {\n      return false\n    }\n  }\n  return false\n}\n","/**\n * 获取当前选中的文本\n * @returns 当前选中的文本\n */\nexport function getSelectText() {\n  return getSelection()!.toString()\n}\n","/**\n * 矩形大小\n */\ninterface RectSize {\n  width: number\n  height: number\n}\n\n/**\n * 获取图片的尺寸\n * @param url\n */\nexport function imageSize(url: string) {\n  return new Promise<RectSize>((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', function() {\n      resolve({\n        width: this.width,\n        height: this.height,\n      })\n    })\n    image.addEventListener('error', ev => {\n      reject(ev.error)\n    })\n    image.src = url\n  })\n}\n","/**\n * 获取鼠标的位置\n * @param e 触发的鼠标事件对象\n * @returns 鼠标的坐标\n */\nexport function getMousePos(e: MouseEvent) {\n  const scrollX =\n    document.documentElement.scrollLeft || document.body.scrollLeft\n  const scrollY = document.documentElement.scrollTop || document.body.scrollTop\n  const x = e.pageX || e.clientX + scrollX\n  const y = e.pageY || e.clientY + scrollY\n  return { x, y }\n}\n","import { wait } from '../async/wait'\n\n/**\n * 将多个并发异步调用合并为一次批处理\n * @param handle 批处理的函数\n * @param ms 等待的时长（时间越长则可能合并的调用越多，否则将使用微任务只合并一次同步执行的所有调用）\n */\nexport function batch<P extends any[], R extends any>(\n  handle: (list: P[]) => Promise<Map<P, R | Error>>,\n  ms: number = 0,\n): (...args: P) => Promise<R> {\n  //参数 => 结果 映射\n  const resultCache = new Map<string, R | Error>()\n  //参数 => 次数的映射\n  const paramCache = new Map<string, number>()\n  //当前是否被锁定\n  let lock = false\n  return async function(...args: P) {\n    const key = JSON.stringify(args)\n    paramCache.set(key, (paramCache.get(key) || 0) + 1)\n    await Promise.all([wait(() => resultCache.has(key) || !lock), wait(ms)])\n    if (!resultCache.has(key)) {\n      try {\n        lock = true\n        Array.from(\n          await handle(Array.from(paramCache.keys()).map(v => JSON.parse(v))),\n        ).forEach(([k, v]) => {\n          resultCache.set(JSON.stringify(k), v)\n        })\n      } finally {\n        lock = false\n      }\n    }\n    const value = resultCache.get(key)!\n    paramCache.set(key, paramCache.get(key)! - 1)\n    if ((paramCache.get(key) || 0) <= 0) {\n      paramCache.delete(key)\n      resultCache.delete(key)\n    }\n    if (value instanceof Error) {\n      resultCache.delete(key)\n      throw value\n    }\n    return value as R\n  }\n}\n","export type ObjectEntries<T extends object> = [keyof T, T[keyof T]][]\n\n/**\n * 从一个对象中挑选出来几个指定的字段\n * @param obj 指定对象\n * @param fieldList 指定对象字段列表\n * @returns 返回挑选字段组成的新对象\n */\nexport function pick<T extends object, K extends keyof T>(\n  obj: T,\n  ...fieldList: K[]\n): Pick<T, K> {\n  const set = new Set(fieldList)\n  return (Object.entries(obj) as ObjectEntries<T>).reduce((res, [k, v]) => {\n    if (set.has(k as K)) {\n      Reflect.set(res, k, v)\n    }\n    return res\n  }, {} as Pick<T, K>)\n}\n","import { safeExec } from '../function/safeExec'\n\nclass WebStorage implements Storage {\n  constructor(private storage: Storage) {}\n\n  get length() {\n    return this.storage.length\n  }\n\n  clear = (): void => {\n    this.storage.clear()\n  }\n\n  getItem = (key: string): string | null => this.storage.getItem(key)\n\n  key = (index: number): string | null => this.storage.key(index)\n\n  removeItem = (key: string): void => {\n    this.storage.removeItem(key)\n  }\n\n  setItem = (key: string, value: string): void => {\n    this.storage.setItem(key, value)\n  }\n}\n\ntype Null<T> = {\n  [P in keyof T]: T[P] | null\n}\n\n/**\n * 代理 Storage 使之更简单易用\n * @param storage\n */\nexport function proxyStorage<T extends object>(\n  storage: Storage,\n): Storage & Null<T> {\n  const kSet = new Set([\n    'storage',\n    'length',\n    'clear',\n    'getItem',\n    'setItem',\n    'removeItem',\n    'key',\n  ] as (keyof Storage)[])\n  return new Proxy(new WebStorage(storage), {\n    get(target: Storage, p: string, receiver: any): any {\n      if (kSet.has(p)) {\n        return Reflect.get(target, p, receiver)\n      }\n      return safeExec(() => JSON.parse(target.getItem(p.toString())!), null)\n    },\n    set(target: Storage, p: string, value: any, receiver: any): boolean {\n      if (kSet.has(p as any)) {\n        return Reflect.set(target, p, receiver)\n      }\n      target.setItem(\n        p.toString(),\n        value !== undefined && value !== null ? JSON.stringify(value) : value,\n      )\n      return true\n    },\n  }) as any\n}\n"],"names":["download","blob","filename","eleLink","document","createElement","style","display","href","URL","createObjectURL","body","appendChild","click","removeChild","strToBlob","str","Blob","type","downloadString","downloadUrl","url","substr","lastIndexOf","getCookies","cookie","split","reduce","res","k","v","set","Map","loadResource","dom","init","fetch","src","window","protocolPortMap","parseUrl","Error","regexp","RegExp","temps","exec","website","protocol","domain","portStr","temp","length","markIndex","indexOf","accessPath","port","parseInt","params","endsWith","substring","get","map","filter","arr","decodeURIComponent","vs","undefined","Array","isArray","push","ReadType","_readLocal","file","options","Object","assign","DataURL","encoding","Promise","resolve","reject","fr","FileReader","onload","result","onerror","error","readAsDataURL","Text","readAsText","BinaryString","readAsBinaryString","ArrayBuffer","readAsArrayBuffer","readLocal","dateFormat","date","fmt","timeFormatDefaults","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","$1","lens","Reflect","dateFormatter","encode","encodeURIComponent","spliceParams","from","entries","Date","item","join","wait","param","setTimeout","timer","setInterval","clearInterval","fetchTimeout","fetchPromise","timeout","race","then","strToArrayBuffer","buf","view","Uint8Array","i","charCodeAt","FetchLimiting","limit","execCount","waitArr","input","_innerFetch","args","shift","asIterator","iterator","next","done","value","isNullOrUndefined","object","returnItself","obj","compatibleAsync","callback","_inner","fns","condition","fn","_call","others","slice","CombinedPredicate","and","or","not","Proxy","apply","_","_this","ActionType","Action","InnerBaseAsyncArray","_arr","sort","_sort","left","concat","medianValue","right","medianIndex","len","InnerAsyncArray","t1","t2","_v","find","findIndex","every","some","parallel","InnerAsyncArrayParallel","serial","forEach","call","flatMap","reduceRight","_all","flat","all","AsyncArray","_tasks","_addTask","Type","onfulfilled","onrejected","asyncArray","task","err","Symbol","kv","__arr","asyncFlatMap","isRange","num","min","max","FloatRule","IntegerRule","EmailRule","Ipv4Rule","TelephoneRule","MobileRule","DomainRule","PostcodeRule","StringValidator","isEmpty","isBlank","trim","isFloat","isInteger","isEmail","isIpv4","isPort","isTelephone","isMobile","isDomain","isPostcode","stringValidator","TypeValidator","getType","val","keys","isType","types","includes","isString","isNumber","isBoolean","isSymbol","isUndefined","isNull","isPropertyKey","isObject","isFunction","toString","isDate","isFile","isBlob","isStream","pipe","isArrayBuffer","isArrayBufferView","isView","buffer","isURLSearchParams","URLSearchParams","isFormData","FormData","safeExec","defaultVal","defRes","extractField","fields","field","getKFn","Function","groupBy","vFn","kFn","index","has","range","start","end","sep","toObject","uniqueBy","Set","add","arrayToMap","DateFormat","name","format","dateFormats","defaultDateValues","monthDayValidate","dateParse","now","dateUnits","fmtName","regex","regExp","matchStr","regexStr","repeat","a","b","matchDateUnit","unit","year","month","day","hour","minute","second","millieSecond","strToDate","dateStr","copyText","text","$el","position","top","select","execCommand","createElByString","root","innerHTML","querySelector","getCursorPosition","el","selectionStart","getCusorPostion","setCursorPosition","focus","setSelectionRange","insertText","toLowerCase","isEditable","inputEls","isContentEditable","tagName","lastFocusEl","_lastFocus","lastFocus","addEventListener","event","target","removeEl","parent","parentElement","removeText","selectionEnd","setCusorPostion","watchEventListener","Event","listener","useCapture","documentAddEventListener","eventTargetAddEventListener","EventTarget","prototype","documentRemoveEventListener","removeEventListener","eventTargetRemoveEventListener","events","$addEventListener","arguments","removeEventListenerByType","$removeEventListener","removeIndexList","e","splice","toISOString","appends","fd","append","deletes","key","sets","formDataToArray","objToFormData","data","debounce","delay","action","flag","clearTimeout","singleModel","clazz","instance","construct","newTarget","StateMachine","getFactory","register","state","classMap","getInstance","Class","throttle","last","thisArg","curr","timing","begin","performance","waitResource","interval","current","watch","oldVal","newVal","watchObject","handler","fill","toUpperCase","blankToNull","blankToNullField","emptyAllField","excludeFields","mapToObject","randomInt","num1","num2","random","calcMonEndDay","monthToDay","days","monthSet","DateConstants","dayStart","dayEnd","monthStart","monthEnd","yearStart","yearEnd","dateConstants","DAY_UNIT_TIME","DateEnhance","monthOfYear","dayOfYear","ceil","getTime","dayOfMonth","dayOfWeek","getDay","weekOfYear","weekOfMonth","quarter","milliSecond","dateEnhance","getYearWeek","DateBetween","dateBetween","returnReasonableItself","filterItems","deleteItems","kSet","diffBy","kThanSet","kThatSet","leftUnique","rightUnique","kLeftSet","common","arrayDiffBy","autoIncrementGenerator","generator","autoIncrement","IConverter","to","list","CamelOrPascalFrom","old","c","charAt","CamelConverter","s","PascalConverter","SnakeOrScreamingSnakeFrom","SnakeConverter","ScreamingSnakeConverter","StringStyleType","ConverterFactory","styleType","Camel","Pascal","Snake","ScreamingSnake","StringStyleConverter","fromConverter","toConverter","convert","BasicMemoryCache","Infinity","cache","clear","size","MemoryCacheFIFO","diff","MemoryCacheLFU","k1","k2","lfuMap","MemoryCacheLRU","lruMap","console","log","idx","MemoryCacheEnum","MemoryCacheFactory","create","config","Fifo","Lfu","Lru","onceOfSameParamIdentity","JSON","stringify","_onceOfSameParam","identity","memoryCache","origin","onceOfSameParam","_getConverter","StringStyleUtil","getConverter","deepFreeze","freeze","deepProxy","defaultValue","String","bind","curry","realArgs","arg","innerFn","otherArgs","removeIndexSet","newArgs","newOtherArgs","_length","o","_curry","sortBy","newArr","i1","i2","DateFormatter","parse","strFormat","parseFmt","_compose","fn1","fn2","compose","deepExcludeFields","excludeFieldsDeep","CacheVal","TimeoutInfinite","LocalStorageCache","serialize","deserialize","cacheOption","localStorage","clearExpired","local","getKeys","getItem","cacheVal","timeStart","removeItem","del","setItem","touch","CacheUtil","once","generateKey","cacheUtil","emptyFunc","AntiDebug","cyclingDebugger","checkDebug","location","reload","disableConsoleOutput","antiDebug","loadScript","script","async","deny","ArrayValidator","array","arrayValidator","PathUtil","paths","_join","pathStart","pathEnd","Separator","startsWith","pathUtil","LoggerLevelEnum","enumMap","debug","Debug","Log","info","Info","warn","Warn","Logger","enable","level","dir","dirxml","table","trace","group","groupCollapsed","groupEnd","count","assert","time","timeEnd","timeStamp","logger","objectToMap","listToTree","bridge","isRoot","node","parentId","_sub","sub","_parent","id","child","treeMapping","before","after","paramFn","_treeMapping","_node","_child","treeToList","calcPath","path","queue","filterSet","lastIdMap","first","childNonIllegal","NodeBridgeUtil","bridgeTree","tree","nodeBridge","bridgeList","nodeBridgeUtil","getObjectEntries","mFn","ownKeys","getObjectKeys","floatEquals","abs","Number","EPSILON","sources","source","getInnerFieldRule","_copyProps","innerField","prop","aggregation","mixins","Aggregate","Mixin","asyncLimiting","takeQueue","_takeRun","tempArgs","TimeoutInfinity","Locker","isLocked","lock","unlock","trySometime","errorCheck","trySometimeParallel","compare","x","y","_x","_y","isNaN","constructor","p","sleep","mergeMap","ids","prom","switchMap","concatMap","repeatedCall","PubSubMachine","pub","topic","subMap","unsub","extractFieldMap","segmentation","toggleClass","values","toggle","classList","remove","partial","_partial","EventUtil","listenerMap","cacheListener","removeByType","listenerList","removeCacheListenerList","retainCacheListenerList","loadStyle","link","rel","zeroPadding","Stopwatch","seconds","minutes","hours","remindLeavePage","confirmationMessage","returnValue","EventEmitter","callbacks","emit","listeners","MicrotaskQueue","func","tasks","execute","goNext","rangeStr","rangeLen","randomStr","parseFieldStr","defVal","getSelectText","getSelection","imageSize","image","Image","width","height","ev","getMousePos","scrollX","documentElement","scrollLeft","scrollY","scrollTop","pageX","clientX","pageY","clientY","batch","handle","ms","resultCache","paramCache","pick","fieldList","WebStorage","storage","proxyStorage","receiver"],"mappings":"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"}